import{B as e,C as t,a as n,P as o,S as i,b as s,c as r,M as a,L as l,d as c,e as d,f as u,g as h,V as p,R as g,h as m,i as w,j as f,E as y,T as v,G as b,k as C,F as S,l as M,m as x,n as T,o as N,O as P,D as E,W as A,A as F,p as k,q as I,r as L,s as $}from"./three.BpX5Oa9t.js";import{A as D,D as z,F as R,N as q,O as B,G as O,S as H,M as W,a as V,c as U,s as _,T as j,L as G,C as Q,b as Y,E as X,R as J,d as K,e as Z,f as ee,P as te,g as ne,h as oe,i as ie,n as se,j as re}from"./tone.3rAuY83p.js";import{g as ae,P as le}from"./vendor.BL4EfdKi.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const n of e)if("childList"===n.type)for(const e of n.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?t.credentials="include":"anonymous"===e.crossOrigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();const ce=new class{constructor(){this.resources={geometries:new Map,materials:new Map,textures:new Map,objects:new Map,meshes:new Map,shaders:new Map,renderers:new Map},this.pools={geometries:new Map,materials:new Map,meshes:new Map},this.ownership=new Map}registerResource(e,t,n,o=null){if(!this.resources[e])return null;const i=o||`${e}_${n}_${Date.now()}_${Math.random().toString(36).substr(2,9)}`;return this.resources[e].set(i,t),this.ownership.has(n)||this.ownership.set(n,new Map),this.ownership.get(n).has(e)||this.ownership.get(n).set(e,new Set),this.ownership.get(n).get(e).add(i),i}getResource(e,t){return this.resources[e]?this.resources[e].get(t):null}disposeResource(e,t,n=!1){if(!this.resources[e]||!this.resources[e].has(t))return!1;const o=this.resources[e].get(t);if(n&&this.pools[e]){let t;t="geometries"===e&&o.type?o.type:"materials"===e&&o.type?`${o.type}_${o.color?o.color.getHex():0}`:e,this.pools[e].has(t)||this.pools[e].set(t,[]),this._resetResourceForPooling(e,o),this.pools[e].get(t).push(o)}else this._disposeByType(e,o);this.resources[e].delete(t);for(const[i,s]of this.ownership.entries())if(s.has(e)){const n=s.get(e);if(n.has(t)){n.delete(t),0===n.size&&(s.delete(e),0===s.size&&this.ownership.delete(i));break}}return!0}getPooledResource(e,t,n,o){let i;i=this.pools[e]&&this.pools[e].has(t)&&this.pools[e].get(t).length>0?this.pools[e].get(t).pop():n();return{resource:i,resourceId:this.registerResource(e,i,o)}}cleanupOwner(e,t=!1){if(!this.ownership.has(e))return;this.ownership.get(e).forEach(((e,n)=>{[...e].forEach((e=>{this.disposeResource(n,e,t)}))})),this.ownership.delete(e)}createGeometry(r,a,l=[],c=!0){if(c)return this.getPooledResource("geometries",a,(()=>{switch(a){case"BoxGeometry":return new s(...l);case"SphereGeometry":return new i(...l);case"PlaneGeometry":return new o(...l);case"CircleGeometry":return new n(...l);case"CylinderGeometry":return new t(...l);default:return new e}}),r);let d;switch(a){case"BoxGeometry":d=new s(...l);break;case"SphereGeometry":d=new i(...l);break;case"PlaneGeometry":d=new o(...l);break;case"CircleGeometry":d=new n(...l);break;case"CylinderGeometry":d=new t(...l);break;case"BufferGeometry":d=new e;break;default:return{resource:new e,resourceId:null}}return{resource:d,resourceId:this.registerResource("geometries",d,r)}}createMaterial(e,t,n={},o=!0){const i=void 0!==n.color?"number"==typeof n.color?n.color:new r(n.color).getHex():0,s=`${t}_${i}`;if(o)return this.getPooledResource("materials",s,(()=>{switch(t){case"MeshBasicMaterial":default:return new a(n);case"MeshStandardMaterial":return new u(n);case"MeshPhongMaterial":return new d(n);case"MeshLambertMaterial":return new c(n);case"LineBasicMaterial":return new l(n)}}),e);let h;switch(t){case"MeshBasicMaterial":h=new a(n);break;case"MeshStandardMaterial":h=new u(n);break;case"MeshPhongMaterial":h=new d(n);break;case"MeshLambertMaterial":h=new c(n);break;case"LineBasicMaterial":h=new l(n);break;default:return{resource:new a(n),resourceId:null}}return{resource:h,resourceId:this.registerResource("materials",h,e)}}_disposeByType(e,t){if(t)switch(e){case"geometries":case"textures":case"renderers":default:t.dispose&&t.dispose();break;case"materials":t.dispose&&t.dispose();for(const e in t){const n=t[e];n&&n.isTexture&&n.dispose()}break;case"objects":case"meshes":t.parent&&t.parent.remove(t),t.geometry&&t.geometry.dispose&&t.geometry.dispose(),t.material&&(Array.isArray(t.material)?t.material.forEach((e=>{e&&e.dispose&&e.dispose()})):t.material.dispose&&t.material.dispose());case"shaders":}}_resetResourceForPooling(e,t){switch(e){case"geometries":break;case"materials":void 0!==t.opacity&&(t.opacity=1),void 0!==t.transparent&&(t.transparent=!1),void 0!==t.depthTest&&(t.depthTest=!0),void 0!==t.needsUpdate&&(t.needsUpdate=!0);break;case"meshes":t.position&&t.position.set(0,0,0),t.rotation&&t.rotation.set(0,0,0),t.scale&&t.scale.set(1,1,1),void 0!==t.visible&&(t.visible=!0)}}cleanup(e=!1){Object.keys(this.resources).forEach((t=>{Array.from(this.resources[t].keys()).forEach((n=>{this.disposeResource(t,n,e)})),this.resources[t].clear()})),this.ownership.clear(),e||Object.keys(this.pools).forEach((e=>{this.pools[e].forEach((t=>{t.forEach((t=>{this._disposeByType(e,t)}))})),this.pools[e].clear()}))}};const de=new class{constructor(){this.timeouts=new Map,this.intervals=new Map,this.animationFrames=new Map,this.debounceTimers=new Map,this.throttleData=new Map,this.groupOwnership=new Map}setTimeout(e,t,n,o=null){const i=o||`timeout_${e}_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,s=setTimeout((()=>{t(),this.clearTimeout(e,i)}),n);return this.timeouts.has(e)||this.timeouts.set(e,new Map),this.timeouts.get(e).set(i,s),this._trackOwnership(e),i}clearTimeout(e,t){this.timeouts.has(e)&&this.timeouts.get(e).has(t)&&(clearTimeout(this.timeouts.get(e).get(t)),this.timeouts.get(e).delete(t),0===this.timeouts.get(e).size&&this.timeouts.delete(e))}setInterval(e,t,n,o=null){const i=o||`interval_${e}_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,s=setInterval(t,n);return this.intervals.has(e)||this.intervals.set(e,new Map),this.intervals.get(e).set(i,s),this._trackOwnership(e),i}clearInterval(e,t){this.intervals.has(e)&&this.intervals.get(e).has(t)&&(clearInterval(this.intervals.get(e).get(t)),this.intervals.get(e).delete(t),0===this.intervals.get(e).size&&this.intervals.delete(e))}requestAnimationFrame(e,t,n=null){const o=n||`raf_${e}_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,i=n=>{if(this.animationFrames.has(e)&&this.animationFrames.get(e).has(o)){if(!1!==t(n)){const t=requestAnimationFrame(i);this.animationFrames.get(e).set(o,t)}else this.animationFrames.get(e).delete(o),0===this.animationFrames.get(e).size&&this.animationFrames.delete(e)}},s=requestAnimationFrame(i);return this.animationFrames.has(e)||this.animationFrames.set(e,new Map),this.animationFrames.get(e).set(o,s),this._trackOwnership(e),o}cancelAnimationFrame(e,t){this.animationFrames.has(e)&&this.animationFrames.get(e).has(t)&&(cancelAnimationFrame(this.animationFrames.get(e).get(t)),this.animationFrames.get(e).delete(t),0===this.animationFrames.get(e).size&&this.animationFrames.delete(e))}debounce(e,t,n,o){this._clearDebounceTimer(e,t);const i=this.setTimeout(e,n,o,`debounce_${t}`);this.debounceTimers.has(e)||this.debounceTimers.set(e,new Map),this.debounceTimers.get(e).set(t,i),this._trackOwnership(e)}throttle(e,t,n,o){this._trackOwnership(e),this.throttleData.has(e)||this.throttleData.set(e,new Map);const i=Date.now(),s=this.throttleData.get(e).get(t),r=s?s.lastExecution:0;return(!r||i-r>=o)&&(n(),this.throttleData.get(e).set(t,{lastExecution:i}),!0)}clearGroup(e){if(this.timeouts.has(e)){this.timeouts.get(e).forEach((e=>clearTimeout(e))),this.timeouts.delete(e)}if(this.intervals.has(e)){this.intervals.get(e).forEach((e=>clearInterval(e))),this.intervals.delete(e)}if(this.animationFrames.has(e)){this.animationFrames.get(e).forEach((e=>cancelAnimationFrame(e))),this.animationFrames.delete(e)}this.debounceTimers.has(e)&&this.debounceTimers.delete(e),this.throttleData.has(e)&&this.throttleData.delete(e),this.groupOwnership.delete(e)}_clearDebounceTimer(e,t){if(this.debounceTimers.has(e)&&this.debounceTimers.get(e).has(t)){const n=this.debounceTimers.get(e).get(t);this.clearTimeout(e,n),this.debounceTimers.get(e).delete(t),0===this.debounceTimers.get(e).size&&this.debounceTimers.delete(e)}}_trackOwnership(e){this.groupOwnership.has(e)||this.groupOwnership.set(e,!0)}registerComponent(e,t){this._trackOwnership(e)}cleanup(){this.groupOwnership.forEach(((e,t)=>{this.clearGroup(t)})),this.timeouts.clear(),this.intervals.clear(),this.animationFrames.clear(),this.debounceTimers.clear(),this.throttleData.clear(),this.groupOwnership.clear()}};const ue=new class{constructor(){this.listeners=new Map,this.delegatedListeners=new Map,this.componentListeners=new Map,this._handleDelegatedEvent=this._handleDelegatedEvent.bind(this)}addEventListener(e,t,n,o={},i="global"){if(!e||!e.addEventListener)return null;const s=n.bind(e);e.addEventListener(t,s,o);const r={target:e,eventType:t,originalHandler:n,boundHandler:s,options:o};return this.listeners.has(i)||this.listeners.set(i,[]),this.listeners.get(i).push(r),this.componentListeners.has(i)||this.componentListeners.set(i,new Set),this.componentListeners.get(i).add(r),r}removeEventListener(e,t="global"){if(e&&e.target&&(e.target.removeEventListener(e.eventType,e.boundHandler,e.options),t&&this.componentListeners.has(t)&&(this.componentListeners.get(t).delete(e),0===this.componentListeners.get(t).size&&this.componentListeners.delete(t)),this.listeners.has(t))){const n=this.listeners.get(t).indexOf(e);-1!==n&&this.listeners.get(t).splice(n,1),0===this.listeners.get(t).length&&this.listeners.delete(t)}}addThrottledEventListener(e,t,n,o,i={},s="global"){const r=`${s}_${t}_${Math.random().toString(36).substring(2,9)}`;return this.addEventListener(e,t,(t=>{de.throttle(s,r,(()=>{n.call(e,t)}),o)}),i,s)}addDebouncedEventListener(e,t,n,o,i={},s="global"){const r=`${s}_${t}_${Math.random().toString(36).substring(2,9)}`;return this.addEventListener(e,t,(t=>{const i={type:t.type,target:t.target,currentTarget:t.currentTarget,clientX:t.clientX,clientY:t.clientY};de.debounce(s,r,(()=>{n.call(e,{...t,eventData:i})}),o)}),i,s)}delegate(e,t,n,o,i="global"){this.delegatedListeners.has(t)||(this.delegatedListeners.set(t,new Map),document.addEventListener(t,(e=>{this._handleDelegatedEvent(t,e)})));const s=`${i}_${n}_${Math.random().toString(36).substring(2,9)}`;return this.delegatedListeners.get(t).set(s,{container:e,selector:n,handler:o,componentId:i}),{eventType:t,delegationId:s}}_handleDelegatedEvent(e,t){this.delegatedListeners.has(e)&&this.delegatedListeners.get(e).forEach(((e,n)=>{const{container:o,selector:i,handler:s}=e;t.target.matches(i)&&o.contains(t.target)&&s.call(o,t)}))}undelegate(e){e&&e.eventType&&e.delegationId&&this.delegatedListeners.has(e.eventType)&&(this.delegatedListeners.get(e.eventType).delete(e.delegationId),0===this.delegatedListeners.get(e.eventType).size&&(document.removeEventListener(e.eventType,(t=>{this._handleDelegatedEvent(e.eventType,t)})),this.delegatedListeners.delete(e.eventType)))}registerComponent(e,t){this.componentListeners.has(e)||this.componentListeners.set(e,new Set)}cleanupComponent(e){if(this.componentListeners.has(e)){this.componentListeners.get(e).forEach((e=>{e.target&&e.target.removeEventListener(e.eventType,e.boundHandler,e.options)})),this.componentListeners.delete(e)}this.listeners.has(e)&&this.listeners.delete(e),this.delegatedListeners.forEach(((t,n)=>{const o=[];t.forEach(((t,i)=>{t.componentId===e&&o.push({eventType:n,delegationId:i})})),o.forEach((e=>this.undelegate(e)))}))}cleanup(){this.listeners.forEach(((e,t)=>{e.forEach((e=>{e.target&&e.target.removeEventListener(e.eventType,e.boundHandler,e.options)}))})),this.delegatedListeners.forEach(((e,t)=>{document.removeEventListener(t,(e=>{this._handleDelegatedEvent(t,e)}))})),this.listeners.clear(),this.delegatedListeners.clear(),this.componentListeners.clear()}};const he=new class{constructor(){this.state={},this.listeners={},this.components={}}setState(e,t){this.state[e]=t,this.listeners[e]&&this.listeners[e].forEach((e=>e(t)))}getState(e){return this.state[e]}subscribe(e,t){return this.listeners[e]||(this.listeners[e]=[]),this.listeners[e].push(t),()=>{this.listeners[e]=this.listeners[e].filter((e=>e!==t))}}registerComponent(e,t){this.components[e]=t}getComponent(e){return this.components[e]}callComponentMethod(e,t,...n){const o=this.getComponent(e);return o&&"function"==typeof o[t]?o[t](...n):null}dispatchEvent(e,t={}){const n=`event:${e}`;this.setState(n,t)}on(e,t){return this.subscribe(`event:${e}`,t)}};const pe=new class{constructor(){this.observers={},this.activeTimers={},this.mutationObservers={},this.resizeObservers={},this.canvasNeedsUpdate=!1,this.animationFrameRequested=!1,this.requestRender=this.requestRender.bind(this),this.markCanvasForUpdate=this.markCanvasForUpdate.bind(this)}initialize(){this.startRenderLoop(),this.setupResponsiveObservers(),this.setupDomObservers()}setupResponsiveObservers(){const e=new ResizeObserver((e=>{const t=window.innerWidth<1024;if(he.getState("isMobile")!==t&&(he.setState("isMobile",t),he.dispatchEvent("layoutChanged",{isMobile:t})),t){const e=he.getComponent("uiManager");e&&"function"==typeof e.updateSynthPanelMobileView&&e.updateSynthPanelMobileView()}}));e.observe(document.body),this.resizeObservers.body=e}observeResize(e,t,n){if(!(e&&e instanceof Element))return null;this.resizeObservers[t]&&this.resizeObservers[t].disconnect();try{const o=new ResizeObserver((e=>{n(e)}));return o.observe(e),this.resizeObservers[t]=o,o}catch(o){return console.error("Error creating ResizeObserver:",o),null}}setupDomObservers(){const e=document.getElementById("neuron-grid-container");if(e){const t=new MutationObserver((e=>{he.dispatchEvent("neuronGridChanged")}));t.observe(e,{childList:!0,subtree:!0,attributes:!0}),this.mutationObservers.grid=t}const t=document.querySelector(".preset-container");if(t){const e=new MutationObserver((e=>{he.dispatchEvent("presetChanged")}));e.observe(t,{childList:!0,subtree:!0,attributes:!0}),this.mutationObservers.presets=e}}startRenderLoop(){this.renderFunction=()=>{if(this.animationFrameRequested=!1,this.canvasNeedsUpdate){const e=document.getElementById("waveform-canvas");if(e){const t=he.getComponent("soundManager")?.renderEnvelope;"function"==typeof t&&t(e)}this.canvasNeedsUpdate=!1}},this.boundRenderFunction=this.renderFunction.bind(this)}requestRender(){this.animationFrameRequested||(this.animationFrameRequested=!0,requestAnimationFrame(this.boundRenderFunction))}markCanvasForUpdate(){this.canvasNeedsUpdate=!0;const e=he.getComponent("soundManager");if(e&&"function"==typeof e.renderEnvelope)"function"==typeof this.boundRenderFunction||this.startRenderLoop(),this.requestRender();else{const e=document.getElementById("waveform-canvas");e&&window.renderEnvelope&&window.renderEnvelope(e)}}cleanup(){Object.values(this.resizeObservers).forEach((e=>e.disconnect())),Object.values(this.mutationObservers).forEach((e=>e.disconnect())),Object.values(this.activeTimers).forEach((e=>clearInterval(e)))}};const ge=new class{constructor(){this.container=null,this.wrapper=null,this.elementPool=[],this.activeElements=new Map,this.initialized=!1,this.handleElementClick=this.handleElementClick.bind(this),he&&he.registerComponent("neuronGridManager",this),window.updateNeuronGrid=this.update.bind(this)}initialize(e){this.initialized||(this.container=document.getElementById("neuron-grid-container"),this.container?this.container.className="neuron-grid-container":(this.container=document.createElement("div"),this.container.id="neuron-grid-container",this.container.className="neuron-grid-container",e.appendChild(this.container)),this.wrapper=document.createElement("div"),this.wrapper.className="neuron-grid-wrapper",this.container.appendChild(this.wrapper),this.ensureAnimationStyleExists(),this.initialized=!0)}update(e=window.circles){if(!this.initialized||!this.container){if(!window.pane||!window.pane.element)return;this.initialize(window.pane.element)}const t=new Set;e.forEach((e=>{if(!e||!e.neuron)return;const n=e.neuron.id;t.add(n);let o=this.activeElements.get(n);!o&&(o=this.elementPool.length>0?this.elementPool.pop():document.createElement("div"),o.className="neuron-element",o.dataset.neuronId=n,o.addEventListener("click",this.handleElementClick),this.activeElements.set(n,o),this.wrapper.appendChild(o)),this.updateElementAppearance(o,e.neuron)})),Array.from(this.activeElements.keys()).forEach((e=>{if(!t.has(e)){const t=this.activeElements.get(e);t.parentNode&&t.parentNode.removeChild(t),t.className="neuron-element",t.style="",t.title="",this.elementPool.push(t),this.activeElements.delete(e)}}))}updateElementAppearance(e,t){if(e.className="neuron-element",t.isFiring)e.classList.add("firing"),t.presetName?e.title=`${t.presetName} (Neuron ${t.id}) - Firing!`:e.title=`Neuron ${t.id} - Firing!`;else if(t.presetColor){e.classList.add("has-preset");const n=Math.floor(255*t.presetColor.r),o=Math.floor(255*t.presetColor.g),i=Math.floor(255*t.presetColor.b);e.style.setProperty("--neuron-color-r",n),e.style.setProperty("--neuron-color-g",o),e.style.setProperty("--neuron-color-b",i),e.style.backgroundColor=`rgb(${n}, ${o}, ${i})`,e.title=`${t.presetName||""} (Neuron ${t.id})`,t.currentCharge>0&&(e.title+=` - Charging: ${Math.round(100*t.currentCharge)}%`),t.dcInput>0&&(e.title+=` - DC: ${t.dcInput.toFixed(2)}`,e.classList.add("has-dc"))}else{e.classList.add("default");const n=t.currentCharge||0,o=Math.floor(255*Math.min(.2,n));e.style.backgroundColor=`rgb(0, ${o}, 255)`,e.title=`Neuron ${t.id}`,t.currentCharge>0&&(e.title+=` - Charging: ${Math.round(100*t.currentCharge)}%`),t.dcInput>0&&(e.title+=` - DC: ${t.dcInput.toFixed(2)}`,e.classList.add("has-dc"))}}handleElementClick(e){const t=e.currentTarget.dataset.neuronId;if(!t)return;const n=window.circles.find((e=>e&&e.neuron&&e.neuron.id.toString()===t));n&&window.inputManager&&window.inputManager.selectNeuron(n)}ensureAnimationStyleExists(){document.getElementById("neuronPulseStyle")}cleanup(){this.activeElements.forEach((e=>{e.removeEventListener("click",this.handleElementClick),e.parentNode&&e.parentNode.removeChild(e)})),this.elementPool.forEach((e=>{e.removeEventListener("click",this.handleElementClick)})),this.elementPool=[],this.activeElements.clear(),this.wrapper&&this.wrapper.parentNode&&this.wrapper.parentNode.removeChild(this.wrapper),this.wrapper=null,this.initialized=!1}},me=(e,...t)=>console.error(e,...t),we=()=>{},fe=()=>{};function ye(){return window.resourceManager=ce,window.eventManager=ue,window.timerManager=de,window.stateManager=he,window.reactiveManager=pe,window.neuronGridManager=ge,window.cleanupAllManagers=()=>{ge.cleanup(),pe.cleanup(),ue.cleanup(),de.cleanup(),ce.cleanup()},window.addEventListener("beforeunload",window.cleanupAllManagers),{resourceManager:ce,eventManager:ue,timerManager:de,stateManager:he,reactiveManager:pe,neuronGridManager:ge}}"true"===new URLSearchParams(window.location.search).get("autoInit")&&ye();class ve{constructor(){this.rafCallbacks=new Map,this.intervalCallbacks=new Map,this.timeoutCallbacks=new Map,this.isRunning=!1,this.frameId=null,this.lastFrameTime=0,this.frameDelta=0,this.frameCount=0,this.frameRates=[],this.averageFrameRate=60,this.frameRateHistory=60,this.lastPerformanceReport=0,this.performanceReportInterval=5e3,this.start()}start(){this.isRunning||(this.isRunning=!0,this.lastFrameTime=performance.now(),this.frameId=requestAnimationFrame(this.update.bind(this)))}stop(){this.isRunning&&(this.isRunning=!1,this.frameId&&(cancelAnimationFrame(this.frameId),this.frameId=null))}cleanup(){this.stop();for(const[e,t]of this.timeoutCallbacks.entries())clearTimeout(e);this.timeoutCallbacks.clear();for(const[e,t]of this.intervalCallbacks.entries())clearInterval(e);this.intervalCallbacks.clear(),this.rafCallbacks.clear()}update(e){if(this.isRunning){this.frameDelta=e-this.lastFrameTime,this.lastFrameTime=e,this.frameCount++,this.frameRates.push(1e3/this.frameDelta),this.frameRates.length>this.frameRateHistory&&this.frameRates.shift(),this.frameRates.length>0&&(this.averageFrameRate=this.frameRates.reduce(((e,t)=>e+t),0)/this.frameRates.length);for(const[n,o]of this.rafCallbacks.entries())try{!1===o(e)&&this.rafCallbacks.delete(n)}catch(t){console.error(`[TimerManager] Error in RAF callback ${n}:`,t),this.rafCallbacks.delete(n)}this.frameId=requestAnimationFrame(this.update.bind(this))}}requestAnimationFrame(e,t){const n=e||`raf_${Math.random().toString(36).substring(2,9)}`;return this.rafCallbacks.set(n,t),n}cancelAnimationFrame(e,t){const n=t||e;return!!this.rafCallbacks.has(n)&&(this.rafCallbacks.delete(n),!0)}setTimeout(e,t,n){const o=setTimeout((()=>{try{t()}catch(n){console.error(`[TimerManager] Error in timeout callback (${e}):`,n)}this.timeoutCallbacks.delete(o)}),n);return this.timeoutCallbacks.set(o,{group:e}),o}clearTimeout(e,t){return!!this.timeoutCallbacks.has(t)&&(clearTimeout(t),this.timeoutCallbacks.delete(t),!0)}setInterval(e,t,n){const o=setInterval((()=>{try{t()}catch(n){console.error(`[TimerManager] Error in interval callback (${e}):`,n)}}),n);return this.intervalCallbacks.set(o,{group:e}),o}clearInterval(e,t){return!!this.intervalCallbacks.has(t)&&(clearInterval(t),this.intervalCallbacks.delete(t),!0)}clearGroup(e){for(const[t,n]of this.timeoutCallbacks.entries())n.group===e&&(clearTimeout(t),this.timeoutCallbacks.delete(t));for(const[t,n]of this.intervalCallbacks.entries())n.group===e&&(clearInterval(t),this.intervalCallbacks.delete(t));for(const[t,n]of this.rafCallbacks.entries())t.startsWith(`${e}_`)&&this.rafCallbacks.delete(t)}throttle(e,t,n,o){const i=`${e}_throttle_${t}`;this.timeoutCallbacks.has(i)||(n(),this.setTimeout(e,(()=>{}),o,i))}debounce(e,t,n,o){const i=`${e}_debounce_${t}`;this.timeoutCallbacks.has(i)&&this.clearTimeout(e,i),this.setTimeout(e,n,o,i)}getPerformanceMetrics(){return{frameRate:this.averageFrameRate,activeTasks:{raf:this.rafCallbacks.size,interval:this.intervalCallbacks.size,timeout:this.timeoutCallbacks.size}}}}function be(){return window.timerManager||window.timerManager||(window.timerManager=new ve),{timerManager:window.timerManager}}window.timerManager||new ve;const Ce=new class{constructor(){this.neurons=new Map,this.connections=new Map,this.isRunning=!1,this.updateInterval=16,this.updateTimerId=null,this.lastUpdateTime=0,this.deltaTime=0,this.frameCount=0,this.startTime=0,this.fps=60,this.isPaused=!1,this.onEffectNeeded=null,this.onSoundNeeded=null,this.onUpdate=null,this.THRESHOLD=1,this._update=this._update.bind(this)}initialize(e={}){return this.updateInterval=e.updateInterval||16,this.onEffectNeeded=e.onEffectNeeded,this.onSoundNeeded=e.onSoundNeeded,this.onUpdate=e.onUpdate,this}start(){if(!this.isRunning)return this.isRunning=!0,this.isPaused=!1,this.startTime=performance.now(),this.lastUpdateTime=this.startTime,this.updateTimerId=requestAnimationFrame(this._update),this}pause(){return this.isPaused=!0,this}resume(){return this.isPaused=!1,this}stop(){if(this.isRunning)return this.isRunning=!1,this.isPaused=!1,this.updateTimerId&&(cancelAnimationFrame(this.updateTimerId),this.updateTimerId=null),this}_update(e){if(this.isRunning){if(this.deltaTime=e-this.lastUpdateTime,this.lastUpdateTime=e,this.frameCount++,this.frameCount>=30){const t=(e-this.startTime)/1e3;this.fps=Math.round(this.frameCount/t),this.frameCount=0,this.startTime=e}this.isPaused||(this._updateNeurons(this.deltaTime),this._processFiringNeurons(),"function"==typeof this.onUpdate&&this.onUpdate(e,this.deltaTime,this.fps)),this.updateTimerId=requestAnimationFrame(this._update)}}_updateNeurons(e){const t=e/1e3;for(const[n,o]of this.neurons)if(o){if(o.dcInput>0&&!o.isFiring){const e=t*o.dcInput*5;o.currentCharge+=e,o.currentCharge>=this.THRESHOLD&&(o.shouldFire=!0)}this._updateNeuronState(o,e)}}_processFiringNeurons(){const e=[];for(const[t,n]of this.neurons)n&&n.shouldFire&&!n.isFiring&&e.push(n);for(const t of e)this._fireNeuron(t)}_fireNeuron(e){e.shouldFire=!1,e.isFiring=!0,e.currentCharge=0,e.lastFiredTime=performance.now(),"function"==typeof this.onEffectNeeded&&this.onEffectNeeded("fire",e),"function"==typeof this.onSoundNeeded&&this.onSoundNeeded("fire",e),setTimeout((()=>{e.isFiring=!1,"function"==typeof this.onEffectNeeded&&this.onEffectNeeded("update",e)}),5),this._propagateSignals(e)}_propagateSignals(e){if(console.debug(`[NeuronEngine] Propagating signals from neuron ${e.id}`),console.debug(`[NeuronEngine] Outgoing connections: ${e.outgoingConnections.length}`),e.outgoingConnections&&0!==e.outgoingConnections.length)for(const t of e.outgoingConnections){const n=this.neurons.get(t);if(!n){console.warn(`[NeuronEngine] Target neuron ${t} not found`);continue}console.debug(`[NeuronEngine] Propagating to target ${t}`);const o=e.synapticWeights.get(t)||.1,i=e.synapticSpeeds.get(t)||.5;if(console.debug(`[NeuronEngine] Connection properties: weight=${o}, speed=${i}`),this._createVisualParticle(e.id,t,o,i),1===i){console.debug("[NeuronEngine] Instant connection - delivering signal immediately without visual effect"),this._deliverSignal(n,o);continue}if(i>=.95){console.debug("[NeuronEngine] Fast connection - delivering signal immediately with visual effect"),this._deliverSignal(n,o),"function"==typeof this.onEffectNeeded&&this.onEffectNeeded("signal",{sourceNeuron:e,targetNeuron:n,weight:o,speed:i,delay:0});continue}const s=Math.max(50,1e3*Math.pow(1-i,2));console.debug(`[NeuronEngine] Scheduled signal delivery with delay: ${s.toFixed(0)}ms (speed: ${i.toFixed(2)})`),"function"==typeof this.onEffectNeeded&&this.onEffectNeeded("signal",{sourceNeuron:e,targetNeuron:n,weight:o,speed:i,delay:s}),setTimeout((()=>{this._deliverSignal(n,o)}),s)}else console.debug(`[NeuronEngine] No outgoing connections for neuron ${e.id}`)}_createVisualParticle(e,t,n,o){if("undefined"!=typeof window)try{if(window.circles&&Array.isArray(window.circles)){const i=window.circles.find((t=>t.neuron&&t.neuron.id===e)),s=window.circles.find((e=>e.neuron&&e.neuron.id===t));i&&s&&(window.workerManager&&"function"==typeof window.workerManager.createParticle?(console.debug(`[NeuronEngine] Creating particle via WorkerManager: ${e} → ${t}`),window.workerManager.createParticle(i,s,n,o)):window.Neuron&&"function"==typeof window.Neuron.createParticle?(console.debug(`[NeuronEngine] Creating particle via Neuron.createParticle: ${e} → ${t}`),window.Neuron.createParticle(i,s,n,o)):i.neuron&&"function"==typeof i.neuron.createAndAnimateSignalParticle&&(console.debug(`[NeuronEngine] Creating particle via neuron method: ${e} → ${t}`),i.neuron.createAndAnimateSignalParticle(t,n,o,s.neuron)))}}catch(i){console.error("[NeuronEngine] Error creating visual particle:",i)}}_deliverSignal(e,t){if(console.debug(`[NeuronEngine] Delivering signal to neuron ${e.id} with weight ${t}`),!e)return void console.error("[NeuronEngine] Cannot deliver signal: target neuron is null");if(e.isFiring)return void console.info(`[NeuronEngine] Cannot deliver signal: neuron ${e.id} is already firing`);const n=e.currentCharge,o=t*t*1.5;e.currentCharge+=o,console.debug(`[NeuronEngine] Charge update: ${n.toFixed(2)} -> ${e.currentCharge.toFixed(2)} (added ${o.toFixed(2)})`),e.currentCharge>=this.THRESHOLD&&(console.debug(`[NeuronEngine] Neuron ${e.id} reached threshold, scheduling fire`),e.shouldFire=!0),"function"==typeof this.onEffectNeeded&&this.onEffectNeeded("update",e)}_updateNeuronState(e,t){"function"==typeof this.onEffectNeeded&&this.onEffectNeeded("update",e)}createNeuron(e={}){const t=e.id||this.neurons.size+1,n={id:t,mesh:e.mesh||null,position:e.position||{x:0,y:0,z:0},currentCharge:0,isFiring:!1,shouldFire:!1,dcInput:e.dcInput||0,baseScale:e.baseScale||.2,maxScale:e.maxScale||1,originalColor:e.originalColor||255,firingColor:e.firingColor||16776960,presetColor:e.presetColor||null,presetName:e.presetName||null,outgoingConnections:[],synapticWeights:new Map,synapticSpeeds:new Map,isHarmonyAnchor:e.isHarmonyAnchor||!1,currentEnvelope:e.currentEnvelope||{attack:0,sustain:0,release:0}};return this.neurons.set(t,n),console.info(`[NeuronEngine] Created neuron ${t}`),n}removeNeuron(e){if(!this.neurons.has(e))return!1;const t=this.neurons.get(e);for(const n of t.outgoingConnections)this.removeConnection(e,n);for(const[n,o]of this.neurons)o.outgoingConnections.includes(e)&&this.removeConnection(n,e);return this.neurons.delete(e),console.debug(`[NeuronEngine] Removed neuron ${e}`),!0}createConnection(e,t,n=.1,o=.5){if(console.debug(`[NeuronEngine] Creating connection from ${e} to ${t} (weight: ${n}, speed: ${o})`),!this.neurons.has(e)||!this.neurons.has(t))return console.error(`[NeuronEngine] Cannot create connection: neuron not found (source: ${e}, target: ${t})`),!1;const i=this.neurons.get(e);i.outgoingConnections.includes(t)||i.outgoingConnections.push(t),i.synapticWeights.set(t,n),i.synapticSpeeds.set(t,o);const s=`${e}_${t}`;return this.connections.set(s,{sourceId:e,targetId:t,weight:n,speed:o}),console.info(`[NeuronEngine] Created connection from ${e} to ${t}`),!0}removeConnection(e,t){if(!this.neurons.has(e))return!1;const n=this.neurons.get(e);n.outgoingConnections=n.outgoingConnections.filter((e=>e!==t)),n.synapticWeights.delete(t),n.synapticSpeeds.delete(t);const o=`${e}_${t}`;return this.connections.delete(o),console.debug(`[NeuronEngine] Removed connection from ${e} to ${t}`),!0}updateConnectionWeight(e,t,n){if(!this.neurons.has(e)||!this.neurons.has(t))return!1;this.neurons.get(e).synapticWeights.set(t,n);const o=`${e}_${t}`,i=this.connections.get(o);return i&&(i.weight=n),!0}updateConnectionSpeed(e,t,n){if(!this.neurons.has(e)||!this.neurons.has(t))return!1;this.neurons.get(e).synapticSpeeds.set(t,n);const o=`${e}_${t}`,i=this.connections.get(o);return i&&(i.speed=n),!0}setDCInput(e,t,n=!1){if(!this.neurons.has(e))return!1;const o=this.neurons.get(e);return o.dcInput=Math.max(0,Math.min(1,t)),n&&(o.currentCharge=0,o.isFiring=!1,o.shouldFire=!1),console.debug(`[NeuronEngine] Set DC input for neuron ${e} to ${o.dcInput}`),!0}addCharge(e,t){if(!this.neurons.has(e))return!1;const n=this.neurons.get(e);return!n.isFiring&&(n.currentCharge=Math.min(n.currentCharge+t,this.THRESHOLD),n.currentCharge>=this.THRESHOLD&&(n.shouldFire=!0),!0)}getNeuron(e){return this.neurons.get(e)}getAllNeurons(){return Array.from(this.neurons.values())}fireNeuron(e){if(!this.neurons.has(e))return!1;const t=this.neurons.get(e);return!t.isFiring&&(t.shouldFire=!0,!0)}resetNeuron(e){if(!this.neurons.has(e))return!1;const t=this.neurons.get(e);return t.currentCharge=0,t.isFiring=!1,t.shouldFire=!1,!0}resetAllNeurons(){for(const e of this.neurons.values())e.currentCharge=0,e.isFiring=!1,e.shouldFire=!1}getDCNeurons(){return Array.from(this.neurons.values()).filter((e=>e.dcInput>0))}dispose(){this.stop();for(const e of this.neurons.values())e.outgoingConnections=[],e.synapticWeights.clear(),e.synapticSpeeds.clear();this.neurons.clear(),this.connections.clear(),console.debug("[NeuronEngine] Disposed")}};class Se{constructor(e,t={}){this.scene=e,this.options={chargeColorInterpolation:!0,showScaleChanges:!0,...t},this.neuronMeshes=new Map,this.connectionLines=new Map,this.initialized=!1,this.effectsManager=null,this.handleEffects=this.handleEffects.bind(this),this.handleSounds=this.handleSounds.bind(this)}initialize(e=null){return this.initialized||(this.effectsManager=e,Ce.initialize({onEffectNeeded:this.handleEffects,onSoundNeeded:this.handleSounds}),Ce.start(),this.initialized=!0),this}createNeuron(e,t={}){if(!e)return console.error("[NeuronAdapter] Cannot create neuron without mesh"),null;const n={x:e.position.x,y:e.position.y,z:e.position.z},o=Ce.createNeuron({mesh:e,position:n,baseScale:t.baseScale||.2,maxScale:t.maxScale||1,originalColor:t.originalColor||255,firingColor:t.firingColor||16776960,presetColor:t.presetColor||null,presetName:t.presetName||null,isHarmonyAnchor:t.isHarmonyAnchor||!1,currentEnvelope:t.currentEnvelope||{attack:0,sustain:0,release:0}});return this.neuronMeshes.set(o.id,e),this.updateNeuronVisuals(o),e.neuronId=o.id,o}removeNeuron(e){if(!Ce.getNeuron(e))return;Ce.removeNeuron(e);const t=this.neuronMeshes.get(e);t&&t.parent&&t.parent.remove(t),this.neuronMeshes.delete(e)}createConnection(e,t,n=.1,o=.5){const i=Ce.createConnection(e,t,n,o);return i?this.updateConnectionVisuals(e,t):console.error("[NeuronAdapter] Failed to create connection in engine"),i}removeConnection(e,t){const n=Ce.removeConnection(e,t);if(n){const n=`${e}_${t}`,o=this.connectionLines.get(n);o&&o.parent&&o.parent.remove(o),this.connectionLines.delete(n)}return n}setDCInput(e,t,n=!1){const o=Ce.setDCInput(e,t,n);if(o){const t=Ce.getNeuron(e);this.updateNeuronVisuals(t)}return o}addCharge(e,t){const n=Ce.addCharge(e,t);if(n){const t=Ce.getNeuron(e);this.updateNeuronVisuals(t)}return n}fireNeuron(e){return Ce.fireNeuron(e)}updateConnectionWeight(e,t,n){return Ce.updateConnectionWeight(e,t,n)}updateConnectionSpeed(e,t,n){return Ce.updateConnectionSpeed(e,t,n)}resetNeuron(e){const t=Ce.resetNeuron(e);if(t){const t=Ce.getNeuron(e);this.updateNeuronVisuals(t)}return t}getNeuron(e){return Ce.getNeuron(e)}getNeuronMesh(e){return this.neuronMeshes.get(e)}handleEffects(e,t){switch(e){case"fire":this.createFiringEffect(t);break;case"signal":this.createSignalEffect(t);break;case"update":this.updateNeuronVisuals(t)}}handleSounds(e,t){if("fire"===e&&window.soundManager){const e=t,n=e.outgoingConnections.length;let o=0,i=0;if(n>0){let t=0,s=0;for(const n of e.outgoingConnections)t+=e.synapticWeights.get(n)||.1,s+=e.synapticSpeeds.get(n)||.5;o=t/n,i=s/n}else o=.5,i=.5;window.soundManager.playNeuronFiring(o,i,e.id,0===n,e.dcInput>0,1)}}createFiringEffect(e){this.updateNeuronVisuals(e);const t=this.neuronMeshes.get(e.id);if(!t)return;const n=e.presetColor?(new r).copy(e.presetColor).multiplyScalar(1.5):new r(e.firingColor);t.material&&(t.material.color.copy(n),setTimeout((()=>{if(t.material){const n=e.presetColor?(new r).copy(e.presetColor):new r(e.originalColor);t.material.color.copy(n)}}),150))}createSignalEffect(e){}updateNeuronVisuals(e){if(!e)return;const t=this.neuronMeshes.get(e.id);if(t&&t.material){if(this.options.showScaleChanges){const n=e.baseScale+(e.maxScale-e.baseScale)*Math.min(1,e.dcInput),o=e.currentCharge/1;let i;i=e.isFiring?Math.min(1.4*n,e.maxScale):n*(1+.5*o),t.scale.setScalar(i)}if(e.isFiring)e.presetColor?t.material.color.copy(e.presetColor).multiplyScalar(1.8):t.material.color.setHex(e.firingColor);else if(this.options.chargeColorInterpolation)if(e.presetColor){const n=e.currentCharge/1;if(n>0){const o=(new r).copy(e.presetColor),i=(new r).copy(e.presetColor).multiplyScalar(1.5);t.material.color.copy(o).lerp(i,n)}else t.material.color.copy(e.presetColor)}else{const n=e.currentCharge/1,o=new r(e.originalColor),i=new r(65535);t.material.color.copy(o).lerp(i,n)}else e.presetColor?t.material.color.copy(e.presetColor):t.material.color.setHex(e.originalColor)}}updateConnectionVisuals(e,t){}update(e,t){}dispose(){Ce.dispose();for(const e of this.connectionLines.values())e.parent&&e.parent.remove(e),e.geometry&&e.geometry.dispose(),e.material&&e.material.dispose();this.connectionLines.clear(),this.neuronMeshes.clear(),this.effectsManager=null,this.initialized=!1}}function Me(){window.circles&&Array.isArray(window.circles)&&(window.circles.forEach(((e,t)=>{if(!e||!e.position)return;const n=e.neuron?.id||`${t+1}`;Ce.getNeuron(n)||(Ce.createNeuron({id:n,mesh:e,position:{x:e.position.x,y:e.position.y,z:e.position.z},baseScale:e.neuron?.baseScale||.2,maxScale:e.neuron?.maxScale||1,originalColor:e.neuron?.originalColor||255,firingColor:e.neuron?.firingColor||16776960,presetColor:e.neuron?.presetColor||null,presetName:e.neuron?.presetName||null,dcInput:e.neuron?.dcInput||0}),e.neuronId=n,window.neuronAdapter&&window.neuronAdapter.neuronMeshes.set(n,e))})),window.circles.forEach(((e,t)=>{if(!e||!e.neuron||!e.neuronId)return;const n=e.neuronId,o=e.neuron.outgoingConnections;o&&0!==o.size&&o.forEach((t=>{if(t<0||t>=window.circles.length)return;const o=window.circles[t];if(!o||!o.neuronId)return;const i=o.neuronId,s=e.neuron.synapticWeights?.get(t)||.1,r=e.neuron.synapticSpeeds?.get(t)||.5;Ce.createConnection(n,i,s,r)}))})))}const xe={createNeuron:(e,t)=>window.neuronAdapter?window.neuronAdapter.createNeuron(e,t):(me("[Compatibility] Neuron adapter not initialized"),null),dcNeurons:{size:0,add:()=>{},delete:()=>{},forEach:e=>{if(!window.neuralEngine)return;window.neuralEngine.getDCNeurons().forEach(e)}},updateAllDCNeurons:()=>{}};function Te(){window.OriginalNeuron||(window.OriginalNeuron=window.Neuron),window.Neuron=xe,window.circles&&Array.isArray(window.circles)&&[...window.circles].forEach(((e,t)=>{if(e&&e.neuron){const n=e.neuron,o=n.id||`${t+1}`;Ce.createNeuron({id:o,mesh:e,position:{x:e.position.x,y:e.position.y,z:e.position.z},baseScale:n.baseScale||.2,maxScale:n.maxScale||1,originalColor:n.originalColor||255,firingColor:n.firingColor||16776960,presetColor:n.presetColor||null,presetName:n.presetName||null,dcInput:n.dcInput||0,isHarmonyAnchor:n.isHarmonyAnchor||!1}),window.neuronAdapter&&window.neuronAdapter.neuronMeshes.set(o,e),n.outgoingConnections&&n.outgoingConnections.size>0&&(fe(`[Patches] Migrating ${n.outgoingConnections.size} connections for neuron ${o}`),n.outgoingConnections.forEach((e=>{const t=window.circles[e]?.neuron,i=t?.id||`${e+1}`,s=n.synapticWeights.get(e)||.1,r=n.synapticSpeeds.get(e)||.5;Ce.createConnection(o,i,s,r)}))),e.neuron=Ne(o),e.neuronId=o}})),function(){window.patchMeshForNeuron=function(e){return e?(e._neuronPatched||(e.neuronId=null,Object.defineProperty(e,"neuron",{get:function(){return this.neuronId?Ne(this.neuronId):null},set:function(e){if(!e)return void(this.neuronId&&(Ce.removeNeuron(this.neuronId),this.neuronId=null));if(e.isNeuronShim)return void(this.neuronId=e.id);const t=Ce.createNeuron({mesh:this,position:{x:this.position.x,y:this.position.y,z:this.position.z},baseScale:e.baseScale||.2,maxScale:e.maxScale||1,originalColor:e.originalColor||255,firingColor:e.firingColor||16776960,presetColor:e.presetColor||null,presetName:e.presetName||null,dcInput:e.dcInput||0,isHarmonyAnchor:e.isHarmonyAnchor||!1});this.neuronId=t.id},enumerable:!0,configurable:!0}),e._neuronPatched=!0),e):e};const e=Ce.createNeuron;Ce.createNeuron=function(t){return t.mesh&&window.patchMeshForNeuron(t.mesh),e.call(this,t)},window.scene&&Array.isArray(window.scene.children)&&window.scene.children.forEach((e=>{e instanceof h&&window.patchMeshForNeuron(e)}))}()}function Ne(e){const t=Ce.getNeuron(e);if(!t)return me(`[Patches] Cannot create shim for non-existent neuron: ${e}`),null;return{id:e,isNeuronShim:!0,get mesh(){return window.neuronAdapter?.getNeuronMesh(e)},get currentCharge(){return t.currentCharge},get isFiring(){return t.isFiring},get dcInput(){return t.dcInput},get outgoingConnections(){return new Set(t.outgoingConnections)},get synapticWeights(){return new Map(t.synapticWeights)},get synapticSpeeds(){return new Map(t.synapticSpeeds)},get baseScale(){return t.baseScale},get maxScale(){return t.maxScale},get originalColor(){return t.originalColor},get firingColor(){return t.firingColor},get presetColor(){return t.presetColor},set presetColor(e){t.presetColor=e},get presetName(){return t.presetName},get isHarmonyAnchor(){return t.isHarmonyAnchor},get currentEnvelope(){return t.currentEnvelope},setDCInput:(t,n=!1)=>window.neuronAdapter?window.neuronAdapter.setDCInput(e,t,n):Ce.setDCInput(e,t,n),addCharge:t=>window.neuronAdapter?window.neuronAdapter.addCharge(e,t):Ce.addCharge(e,t),fire:()=>window.neuronAdapter?window.neuronAdapter.fireNeuron(e):Ce.fireNeuron(e),addConnection:(t,n=.1,o=.5)=>window.neuronAdapter?window.neuronAdapter.createConnection(e,t,n,o):Ce.createConnection(e,t,n,o),updateConnectionWeight:(t,n)=>window.neuronAdapter?window.neuronAdapter.updateConnectionWeight(e,t,n):Ce.updateConnectionWeight(e,t,n),updateConnectionSpeed:(t,n)=>window.neuronAdapter?window.neuronAdapter.updateConnectionSpeed(e,t,n):Ce.updateConnectionSpeed(e,t,n),removeConnection:t=>window.neuronAdapter?window.neuronAdapter.removeConnection(e,t):Ce.removeConnection(e,t),reset:()=>Ce.resetNeuron(e),update(){},updateVisualState(){},cleanup:()=>Ce.removeNeuron(e),setExternalAnimation:(e=500)=>!0,isInRefractoryPeriod:()=>!1}}function Pe(e,t=null,n={}){const{engine:o,adapter:i}=function(e,t=null){const n=new Se(e);return n.initialize(t),window.neuralEngine=Ce,window.neuronAdapter=n,Me(),{engine:Ce,adapter:n}}(e,t);return!1!==n.applyPatches&&Te(),window.stateManager&&(window.stateManager.registerComponent("neuralEngine",o),window.stateManager.registerComponent("neuronAdapter",i)),function(e){window.addEventListener("focus",(()=>{e.isPaused&&e.resume()})),window.addEventListener("blur",(()=>{e.isPaused||e.pause()})),window.eventManager&&(window.eventManager.addEventListener(window,"neuronCreated",(e=>{})),window.eventManager.addEventListener(window,"neuronRemoved",(e=>{})));window.addEventListener("error",(e=>{me("[System] Caught global error:",e.error),e.preventDefault()}))}(o),{engine:o,adapter:i}}let Ee=!1;"undefined"!=typeof window&&(window.fixNeuralSystem=function(){return Ee?window.neuralEngine&&window.neuronAdapter?(Me(),!0):(me("[Integrator] Cannot fix neurons - missing engine or adapter"),!1):(me("[Integrator] Cannot fix neurons - centralized system not enabled"),!1)});class Ae{static{"undefined"!=typeof window&&(window.Neuron=Ae)}static isScrolling=!1;static scrollTimeout=null;static neuronCount=0;static windowHasFocus=!0;static isAppActive=!0;static dcNeurons=new Set;static tempVector=new p;static tempVector2=new p;static tempColor=new r;static{this.particleGeometry=new o(.05,.05),this.particleGeometry.computeBoundingSphere(),this.allParticles=[],this.pendingChargeDeliveries=new Map,this.lastParticleCleanupTime=Date.now(),"undefined"!=typeof window&&window.timerManager&&window.timerManager.setInterval("neuron_particle_cleanup",(()=>{this.allParticles&&this.allParticles.length>0&&this.cleanupOrphanedParticles()}),5e3),be(),window.addEventListener("focus",(()=>{console.log("Window gained focus - restoring DC intervals"),this.windowHasFocus=!0,this.isAppActive=!0,this.dcNeurons.forEach((e=>{if(e&&e.dcInput>0){const t=e.dcInput;e.dcInterval&&(window.timerManager&&e.dcParameters?.usingRAF?window.timerManager.cancelAnimationFrame("neuron_"+e.id,e.dcInterval):e.dcParameters?.usingRAF?cancelAnimationFrame(e.dcInterval):clearInterval(e.dcInterval),e.dcInterval=null),setTimeout((()=>{e.setDCInput(t,!1,!0)}),50)}})),window.Tone&&window.Tone.context&&"suspended"===window.Tone.context.state&&(window.Tone.context.resume(),console.log("Resumed Tone.js audio context")),window.soundManager&&"function"==typeof window.soundManager.restoreAllNeuronSounds&&window.soundManager.restoreAllNeuronSounds()})),window.addEventListener("blur",(()=>{console.log("Window lost focus - stopping all DC intervals and audio"),this.windowHasFocus=!1,this.isAppActive=!1,this.dcNeurons.forEach((e=>{e&&e.dcInput>0&&e.dcInterval&&(window.timerManager&&e.dcParameters?.usingRAF?window.timerManager.cancelAnimationFrame("neuron_"+e.id,e.dcInterval):e.dcParameters?.usingRAF?cancelAnimationFrame(e.dcInterval):clearInterval(e.dcInterval),e.dcInterval=null)})),window.Tone&&window.Tone.context&&"running"===window.Tone.context.state&&(window.Tone.context.suspend(),console.log("Suspended Tone.js audio context")),window.soundManager&&"function"==typeof window.soundManager.silenceAllNeurons&&(window.soundManager.silenceAllNeurons(),console.log("Silenced all neurons via SoundManager"))})),document.addEventListener("visibilitychange",(()=>{document.hidden?(console.log("Tab hidden - stopping all DC intervals and audio"),this.isAppActive=!1,this.dcNeurons.forEach((e=>{e&&e.dcInput>0&&e.dcInterval&&(window.timerManager&&e.dcParameters?.usingRAF?window.timerManager.cancelAnimationFrame("neuron_"+e.id,e.dcInterval):e.dcParameters?.usingRAF?cancelAnimationFrame(e.dcInterval):clearInterval(e.dcInterval),e.dcInterval=null)})),window.Tone&&window.Tone.context&&"running"===window.Tone.context.state&&(window.Tone.context.suspend(),console.log("Suspended Tone.js audio context due to tab hidden"))):(console.log("Tab visible again - restoring DC intervals"),this.windowHasFocus&&(this.isAppActive=!0,setTimeout((()=>{this.dcNeurons.forEach((e=>{if(e&&e.dcInput>0){const t=e.dcInput;e.dcInterval&&(window.timerManager&&e.dcParameters?.usingRAF?window.timerManager.cancelAnimationFrame("neuron_"+e.id,e.dcInterval):e.dcParameters?.usingRAF?cancelAnimationFrame(e.dcInterval):clearInterval(e.dcInterval),e.dcInterval=null),e.setDCInput(t,!1,!0)}})),window.Tone&&window.Tone.context&&"suspended"===window.Tone.context.state&&(window.Tone.context.resume(),console.log("Resumed Tone.js audio context"))}),50)))}));const e=()=>{window.timerManager?window.timerManager.setInterval("neuron_dc_checker",(()=>{this.isScrolling&&(this.scrollTimeout||(this.scrollTimeout=setTimeout((()=>{this.isScrolling=!1,this.scrollTimeout=null,console.log("Clearing scrolling state after inactivity")}),300)))}),1e3):setInterval((()=>{this.windowHasFocus&&!document.hidden&&this.dcNeurons.forEach((e=>{e&&e.dcInput>0&&!e.dcInterval&&(console.log(`Restoring missing DC interval for neuron ${e.id}`),e.setDCInput(e.dcInput,!1,!0))})),this.isScrolling&&(this.scrollTimeout||(this.scrollTimeout=setTimeout((()=>{this.isScrolling=!1,this.scrollTimeout=null,console.log("Clearing scrolling state after inactivity")}),300)))}),1e3)};e()}static particleMaterial=new a({color:65535,transparent:!0,opacity:.8});constructor(e){this.id=++Ae.neuronCount,e.position.y=.1*this.id-.01,this.mesh=e,this.threshold=1,this.chargeRate=.01,this.chargingInterval=1e3,this.baseScale=.2,this.maxScale=1,this.refractionPeriod=10,this.originalColor=255,this.firingColor=16776960,this.presetColor=null,this.presetName=null,this.currentEnvelope={attack:0,sustain:0,release:0},this.currentCharge=0,this.lastFiredTime=0,this.isFiring=!1,this.dcInput=0,this.dcInterval=null,this.isHarmonyAnchor=!1,this.scaleState={base:this.baseScale,target:this.baseScale,current:this.baseScale,animation:null,animating:!1,lastUpdate:0},this.outgoingConnections=new Set,this.synapticWeights=new Map,this.synapticSpeeds=new Map,this.currentAnimation=null,this.particleAnimations=new Set,this.lastUpdateTime=performance.now(),this.externalAnimationActive=!1,this.externalAnimationEndTime=0,this.inRefractoryPeriod=!1,this.refractoryEndTime=0,this.lastFiringAttempt=0,this.minTimeBetweenFirings=50,this.lastColorUpdate={isFiring:!1,currentCharge:0,colorUpdateNeeded:!0},this.mesh.scale.setScalar(this.baseScale)}setExternalAnimation(e=500){return this.externalAnimationActive=!0,this.externalAnimationEndTime=performance.now()+e,setTimeout((()=>{this.externalAnimationActive=!1}),e),this}update(){const e=performance.now();if(this.isFiring&&e-this.lastFiredTime>2*this.refractionPeriod)return void this.forceReset();if(this.inRefractoryPeriod&&e>=this.refractoryEndTime&&(this.inRefractoryPeriod=!1,this.refractoryEndTime=0),!this.isFiring&&!this.isInRefractoryPeriod()&&this.dcInput>0&&(Ae.isScrolling||document.hidden)&&this.dcInput>0&&!this.dcInterval)if(this.dcParameters){const{chargePerInterval:e,intervalTime:t}=this.dcParameters;this.dcInterval=setInterval((()=>{this.isFiring||this.isInRefractoryPeriod()||this.addCharge(e)}),t)}else this.setDCInput(this.dcInput);let t=!1;if(this.externalAnimationActive)e>this.externalAnimationEndTime&&(this.externalAnimationActive=!1,t=!0);else if(this.isFiring){e-this.lastFiredTime<this.refractionPeriod?this.lastColorUpdate.isFiring||(t=!0):(this.isFiring=!1,this.currentCharge=0,this.inRefractoryPeriod=!0,this.refractoryEndTime=e+50,t=!0)}t&&(this.lastColorUpdate.colorUpdateNeeded=!0),this.updateVisualState()}updateVisualState(){if(!this.mesh)return;const e=this.baseScale+(this.maxScale-this.baseScale)*Math.min(1,this.dcInput);let t;t=this.dcInput>.5?e*(1+this.currentCharge/this.threshold*.3):e*(1+this.currentCharge/this.threshold*.5);const n=Math.min(t,.8);this.scaleState.base=e;const o=this.scaleState.target,i=this.isFiring?this.scaleState.current:n;this.scaleState.target=o?o+(i-o)*(1-.9):i,this.scaleState.target=Math.min(this.scaleState.target,.8),this.scaleState.animating||(this.mesh.scale.set(this.scaleState.target,this.scaleState.target,this.scaleState.target),this.scaleState.current=this.scaleState.target);const s=this.lastColorUpdate.colorUpdateNeeded;!this.externalAnimationActive&&s&&(this.presetColor?this.mesh.material.color.copy(this.presetColor):this.mesh.material.color.setHex(this.originalColor),this.lastColorUpdate.isFiring=this.isFiring,this.lastColorUpdate.currentCharge=this.currentCharge,this.lastColorUpdate.colorUpdateNeeded=!1)}fire(){const e=performance.now(),t=e-this.lastFiringAttempt;if(this.lastFiringAttempt=e,this.isFiring||this.isInRefractoryPeriod())return;if(t<this.minTimeBetweenFirings)return;this.isFiring=!0,this.lastFiredTime=e;const n=this.outgoingConnections.size;let o=0,i=0,s=0;for(const c of this.outgoingConnections){if(o+=this.synapticWeights.get(c)??.1,i+=this.synapticSpeeds.get(c)??.5,window.circles?.[c]){const e=window.circles[c],t=e.position.x-this.mesh.position.x,n=e.position.z-this.mesh.position.z;s+=Math.sqrt(t*t+n*n)}}let r=n>0?o/n:.5,a=n>0?i/n:.5,l=n>0?s/n:0;r=Math.min(1,Math.max(.1,r)),a=Math.min(1,Math.max(.1,a)),l=Math.min(20,Math.max(1,l)),this.currentEnvelope={attack:Math.max(.1,r?(.45-.45*r).toFixed(2):.1),sustain:Math.max(.2,r?(.3*r).toFixed(2):.2),release:Math.max(.1,l<6?.1:(Math.min(l,10)/10*.5).toFixed(2))},window.soundManager&&"function"==typeof window.soundManager.playNeuronFiring&&window.soundManager.playNeuronFiring(r,a,this.id,0===n,this.dcInput>0,l),this.animateFiring();for(const c of this.outgoingConnections){const e=window.circles?.[c]?.neuron;if(!e)continue;const t=this.synapticWeights.get(c)??.1,n=this.synapticSpeeds.get(c)??.5,o=n>=.99?0:Math.max(50,500*(1-n));console.log(`Connection from=${this.id} to=${c}: speed=${n.toFixed(2)}, delay=${o}ms`);const i=`${this.id}_${e.id}`;Ae.pendingChargeDeliveries.has(i)&&(clearTimeout(Ae.pendingChargeDeliveries.get(i)),Ae.pendingChargeDeliveries.delete(i));const s=setTimeout((()=>{if(Ae.pendingChargeDeliveries.delete(i),this.outgoingConnections.has(c)&&e)if(0===o)e.addCharge(t);else if(window.particleSystem&&"function"==typeof window.particleSystem.createParticle){const o=new p(this.mesh.position.x,.05,this.mesh.position.z),i=new p(window.circles[c].position.x,.05,window.circles[c].position.z);console.log(`Creating optimized particle: from=${this.id} to=${c}, speed=${n.toFixed(2)}`),window.particleSystem.createParticle(o,i,this.id,e.id,t,n)}else console.warn(`Falling back to legacy particle system: from=${this.id} to=${c}, speed=${n.toFixed(2)}`),this.createAndAnimateSignalParticle(c,t,n,e)}),o);Ae.pendingChargeDeliveries.set(i,s)}this.updateVisualState()}animateFiring(){setTimeout((()=>{this.isFiring=!1,this.currentCharge=0,this.inRefractoryPeriod=!0,this.refractoryEndTime=performance.now()+50,this.updateVisualState()}),150)}createAndAnimateSignalParticle(e,t,n,o){if(console.log(`Creating signal particle: target=${e}, weight=${t.toFixed(2)}, speed=${n.toFixed(2)}`),!this.mesh||!this.mesh.parent||!window.circles[e])return;const s=new p(this.mesh.position.x,.05,this.mesh.position.z),l=new p(window.circles[e].position.x,.05,window.circles[e].position.z);if(n>=.99)return console.log(`Speed too high (${n.toFixed(2)}), skipping particle creation`),void(o&&o.addCharge(t));const c=new i(.15,8,8),d=new r;d.setHSL(.3*t,1,.5);const u=new a({color:d,transparent:!0,opacity:1}),g=new h(c,u);if(g.position.copy(s),g.targetPosition=l.clone(),g.sourcePosition=s.clone(),g.progress=0,g.speed=.01+.04*n,g.sourceNeuronId=this.id,g.targetNeuronId=o?o.id:null,g.creationTime=Date.now(),g.connectionId=`${this.id}_${o?o.id:e}`,window.scene)window.scene.add(g),console.log(`Added particle to scene, current particles: ${window.Neuron.allParticles?.length||0}`);else{if(!this.mesh.parent)return void console.warn("Could not add particle to any scene!");this.mesh.parent.add(g),console.log(`Added particle to mesh.parent, current particles: ${window.Neuron.allParticles?.length||0}`)}window.Neuron.allParticles||(window.Neuron.allParticles=[]),window.Neuron.allParticles.push(g);const m=500*(1-n)*(s.distanceTo(l)/5),w=`${this.id}_${o?o.id:e}`;Ae.pendingChargeDeliveries.has(w)&&(clearTimeout(Ae.pendingChargeDeliveries.get(w)),Ae.pendingChargeDeliveries.delete(w));const f=setTimeout((()=>{if(Ae.pendingChargeDeliveries.delete(w),this.outgoingConnections.has(e)&&o&&o.addCharge(t),g&&g.parent){g.parent.remove(g),g.material&&g.material.dispose(),g.geometry&&g.geometry.dispose();const e=Ae.allParticles.indexOf(g);-1!==e&&Ae.allParticles.splice(e,1)}}),m);Ae.pendingChargeDeliveries.set(w,f),g.timeoutId=f}setDCInput(e,t=!1,n=!0){const o=this.dcInput;if(this.dcInput=Math.max(0,Math.min(1,e)),this.dcInput<=0)return this.dcInterval&&(window.timerManager&&this.dcParameters?.usingRAF?window.timerManager.cancelAnimationFrame("neuron_"+this.id,this.dcInterval):this.dcParameters?.usingRAF?cancelAnimationFrame(this.dcInterval):clearInterval(this.dcInterval),this.dcInterval=null),Ae.dcNeurons.delete(this),void this.forceReset();this.dcInput>0&&Ae.dcNeurons.add(this);const i=!this.dcInterval||0===o||!0===t&&!1===n;if(this.updateVisualState(),i){if(this.dcInterval&&(window.timerManager&&this.dcParameters?.usingRAF?window.timerManager.cancelAnimationFrame("neuron_"+this.id,this.dcInterval):this.dcParameters?.usingRAF?cancelAnimationFrame(this.dcInterval):clearInterval(this.dcInterval),this.dcInterval=null),this.dcInput>0&&Ae.isAppActive){const e=.04*this.dcInput;(t||0===o)&&(this.currentCharge=0,this.isFiring=!1,this.lastFiredTime=0,this.inRefractoryPeriod=!1,this.refractoryEndTime=0),this.dcParameters={chargePerFrame:e,usingRAF:!0};const n=e=>{if(!this.mesh||this.dcInput<=0)return!1;try{this.isFiring||this.isInRefractoryPeriod()||this.addCharge(this.dcParameters.chargePerFrame)}catch(t){console.error(`Error in DC update for neuron ${this.id}:`,t)}return!0};if(window.timerManager)this.dcInterval=window.timerManager.requestAnimationFrame("neuron_"+this.id,n),Ae.dcNeurons.add(this);else{const e=t=>{n()&&this.dcInput>0?this.dcInterval=requestAnimationFrame(e):this.dcInterval=null};this.dcInterval=requestAnimationFrame(e)}window.activeDCNeurons||(window.activeDCNeurons=new Set),window.activeDCNeurons.add(this)}else if(this.dcInput>0){const e=.04*this.dcInput;this.dcParameters={chargePerFrame:e,usingRAF:!0}}}else{const e=.04*this.dcInput;this.dcParameters?this.dcParameters.chargePerFrame=e:this.dcParameters={chargePerFrame:e,usingRAF:!0}}}addCharge(e){if(this.isFiring||this.isInRefractoryPeriod())return;const t=this.currentCharge;this.currentCharge=Math.min(this.currentCharge+e,this.threshold),this.currentCharge!==t&&(this.lastColorUpdate.currentCharge=this.currentCharge,this.updateVisualState(),window.dispatchEvent&&"function"==typeof CustomEvent&&window.dispatchEvent(new CustomEvent("neuronChargeUpdate",{detail:{neuronId:this.id,charge:this.currentCharge,threshold:this.threshold,isFiring:this.isFiring,inRefractory:this.isInRefractoryPeriod(),dcInput:this.dcInput}}))),this.currentCharge>=this.threshold&&!this.isFiring&&this.fire()}forceReset(){if(this.currentAnimation&&(this.currentAnimation.kill(null,!1),this.currentAnimation=null),this.scaleState.animation&&(this.scaleState.animation.kill(),this.scaleState.animation=null,this.scaleState.animating=!1),this.isFiring=!1,this.currentCharge=0,this.lastFiredTime=0,this.dcInterval&&(window.timerManager&&this.dcParameters?.usingRAF?window.timerManager.cancelAnimationFrame("neuron_"+this.id,this.dcInterval):this.dcParameters?.usingRAF?cancelAnimationFrame(this.dcInterval):clearInterval(this.dcInterval),this.dcInterval=null),this.mesh){this.lastColorUpdate.colorUpdateNeeded=!0,this.lastColorUpdate.isFiring=!1,this.lastColorUpdate.currentCharge=0;const e=this.baseScale+(this.maxScale-this.baseScale)*this.dcInput;this.mesh.scale.setScalar(e),this.scaleState.base=e,this.scaleState.target=e,this.scaleState.current=e}this.updateVisualState(),window.stateManager?window.stateManager.dispatchEvent("neuronReset",{neuronId:this.id}):window.dispatchEvent&&"function"==typeof CustomEvent&&window.dispatchEvent(new CustomEvent("neuronReset",{detail:{neuronId:this.id}}))}isInRefractoryPeriod(){const e=performance.now()-this.lastFiredTime;return this.inRefractoryPeriod||this.lastFiredTime>0&&e<this.refractionPeriod}getNeuronState(){return{id:this.id,charge:this.currentCharge,isFiring:this.isFiring,isRefractory:this.isInRefractoryPeriod(),dcInput:this.dcInput,connections:Array.from(this.outgoingConnections),weights:Array.from(this.synapticWeights),speeds:Array.from(this.synapticSpeeds)}}addConnection(e,t=.1,n=.5){this.outgoingConnections.add(e),this.synapticWeights.set(e,t),this.synapticSpeeds.set(e,n);const o=this.dcInput>0,i=this.dcInput;o&&i>0&&!this.dcInterval&&(console.log(`Restoring DC during connection for neuron ${this.id}`),this.setDCInput(i,!1,!0))}updateConnectionWeight(e,t){this.outgoingConnections.has(e)&&this.synapticWeights.set(e,t)}updateConnectionSpeed(e,t){this.outgoingConnections.has(e)&&this.synapticSpeeds.set(e,t)}removeConnection(e){const t=window.circles?.[e]?.neuron,n=this.id;let o=null;if(t){o=t.id;const e=`${this.id}_${t.id}`;Ae.pendingChargeDeliveries.has(e)&&(clearTimeout(Ae.pendingChargeDeliveries.get(e)),Ae.pendingChargeDeliveries.delete(e)),Ae.cleanupConnectionParticles(n,o),console.log(`Removing connection: ${n} -> ${o}, cleaning up particles`)}else console.warn(`Cannot find target neuron at index ${e} for cleanup`);this.outgoingConnections.delete(e),this.synapticWeights.delete(e),this.synapticSpeeds.delete(e),setTimeout((()=>{n&&o&&Ae.cleanupConnectionParticles(n,o)}),100),setTimeout((()=>{Ae.cleanupOrphanedParticles()}),200)}reset(){this.currentCharge=0,this.isFiring=!1,this.lastFiredTime=0,this.updateVisualState()}cleanup(){const e="neuron_"+this.id;if(window.timerManager?window.timerManager.clearGroup(e):this.dcInterval&&(this.dcParameters?.usingRAF?cancelAnimationFrame(this.dcInterval):clearInterval(this.dcInterval),this.dcInterval=null),Ae.dcNeurons.delete(this),window.resourceManager?(this.mesh&&(this.mesh.material&&(Array.isArray(this.mesh.material)?this.mesh.material.forEach((t=>{t&&window.resourceManager.registerResource("materials",t,e)})):window.resourceManager.registerResource("materials",this.mesh.material,e)),this.mesh.geometry&&window.resourceManager.registerResource("geometries",this.mesh.geometry,e),this.mesh.touchArea&&(this.mesh.touchArea.material&&window.resourceManager.registerResource("materials",this.mesh.touchArea.material,e),this.mesh.touchArea.geometry&&window.resourceManager.registerResource("geometries",this.mesh.touchArea.geometry,e),window.resourceManager.registerResource("objects",this.mesh.touchArea,e)),this.mesh.harmonyAnchorIndicator&&(this.mesh.harmonyAnchorIndicator.material&&window.resourceManager.registerResource("materials",this.mesh.harmonyAnchorIndicator.material,e),this.mesh.harmonyAnchorIndicator.geometry&&window.resourceManager.registerResource("geometries",this.mesh.harmonyAnchorIndicator.geometry,e),window.resourceManager.registerResource("objects",this.mesh.harmonyAnchorIndicator,e)),window.resourceManager.registerResource("meshes",this.mesh,e)),window.resourceManager.cleanupOwner(e,!1)):(this.mesh&&this.mesh.parent&&this.mesh.parent.remove(this.mesh),this.mesh&&this.mesh.material&&(Array.isArray(this.mesh.material)?this.mesh.material.forEach((e=>{e&&e.dispose&&e.dispose()})):this.mesh.material.dispose&&this.mesh.material.dispose()),this.mesh&&this.mesh.geometry&&this.mesh.geometry.dispose&&this.mesh.geometry.dispose(),this.mesh.touchArea&&this.mesh.touchArea.parent&&(this.mesh.touchArea.parent.remove(this.mesh.touchArea),this.mesh.touchArea.geometry&&this.mesh.touchArea.geometry.dispose(),this.mesh.touchArea.material&&this.mesh.touchArea.material.dispose()),this.mesh&&this.mesh.harmonyAnchorIndicator&&(this.mesh.harmonyAnchorIndicator.parent&&this.mesh.harmonyAnchorIndicator.parent.remove(this.mesh.harmonyAnchorIndicator),this.mesh.harmonyAnchorIndicator.geometry&&this.mesh.harmonyAnchorIndicator.geometry.dispose(),this.mesh.harmonyAnchorIndicator.material&&this.mesh.harmonyAnchorIndicator.material.dispose(),this.mesh.harmonyAnchorIndicator=null)),Ae.allParticles&&Ae.allParticles.length>0){[...Ae.allParticles].forEach((t=>{if(t&&t.parent&&this.mesh&&t.position){if(t.position.distanceTo(this.mesh.position)<1){t.parent.remove(t),window.resourceManager?(t.material&&window.resourceManager.registerResource("materials",t.material,e),t.geometry&&window.resourceManager.registerResource("geometries",t.geometry,e)):t.material&&t.material.dispose();const n=Ae.allParticles.indexOf(t);-1!==n&&Ae.allParticles.splice(n,1)}}})),window.resourceManager&&window.resourceManager.cleanupOwner(e,!1)}if(this.outgoingConnections.clear(),this.synapticWeights.clear(),this.synapticSpeeds.clear(),window.soundManager){window.soundManager.selectedNeuronId===this.id&&(window.soundManager.selectedNeuronId=null),window.soundManager.neuronFrequencies&&window.soundManager.neuronFrequencies.delete(this.id),window.soundManager.neuronSoundOverrides&&window.soundManager.neuronSoundOverrides.delete(this.id),window.timerManager&&window.soundManager.pendingRestorations&&window.soundManager.pendingRestorations.has(this.id)?(window.timerManager.clearTimeout("soundManager",window.soundManager.pendingRestorations.get(this.id)),window.soundManager.pendingRestorations.delete(this.id)):window.soundManager.pendingRestorations&&window.soundManager.pendingRestorations.has(this.id)&&(clearTimeout(window.soundManager.pendingRestorations.get(this.id)),window.soundManager.pendingRestorations.delete(this.id)),window.soundManager.neuronBusAssignments&&window.soundManager.neuronBusAssignments.delete(this.id),window.soundManager.voicePriorities&&window.soundManager.voicePriorities.delete(this.id);try{"function"==typeof window.soundManager.silenceNeuron&&window.soundManager.silenceNeuron(this.id)}catch(t){console.warn("Error silencing neuron during cleanup:",t)}}window.stateManager&&window.stateManager.dispatchEvent("neuronRemoved",{neuronId:this.id})}static updateAllDCNeurons(){Ae.dcNeurons.size>0&&Ae.dcNeurons.forEach((e=>{e.dcInput>0&&!e.dcInterval&&e.setDCInput(e.dcInput,!1,!0)}))}createParticleExplosion(e={}){if(!this.mesh||!this.mesh.parent)return;const t=e.count||8,n=e.scale||.1,i=new o(n,n),s=e.duration||1e3,r=e.speed||.5,l=e.color?e.color.clone():this.presetColor?this.presetColor.clone():this.mesh.material.color.clone();l.r=Math.min(1.5,1.2*l.r),l.g=Math.min(1.5,1.2*l.g),l.b=Math.min(1.5,1.2*l.b);const c=new a({color:l,transparent:!0,opacity:.9});for(let o=0;o<t;o++){const e=new h(i,c.clone()),n=o/t*Math.PI*2,a=.2;e.position.set(this.mesh.position.x+Math.cos(n)*a,this.mesh.position.y,this.mesh.position.z+Math.sin(n)*a),e.rotation.x=-Math.PI/2,this.mesh.parent.add(e);const l=s/1e3,d=4*r;ae.to(e.position,{x:this.mesh.position.x+Math.cos(n)*(a*d),z:this.mesh.position.z+Math.sin(n)*(a*d),duration:l,ease:"power2.out"}),ae.to(e.material,{opacity:0,duration:l,ease:"power2.out",onComplete:()=>{e.parent&&e.parent.remove(e),e.material.dispose(),e.geometry.dispose()}})}}static createParticle(e,t,n=.5,o=.5){if(e&&t&&e.neuron&&t.neuron)try{if(console.log(`[Neuron.createParticle] Creating particle from ${e.neuron.id} to ${t.neuron.id}`),window.particleSystem&&"function"==typeof window.particleSystem.createParticle){const i=new p(e.position.x,.05,e.position.z),s=new p(t.position.x,.05,t.position.z);window.particleSystem.createParticle(i,s,e.neuron.id,t.neuron.id,n,o),console.log("[Neuron.createParticle] Created particle via OptimizedParticleSystem")}else window.workerManager&&"function"==typeof window.workerManager.createParticle?(window.workerManager.createParticle(e,t,n,o),console.log("[Neuron.createParticle] Created particle via WorkerManager")):console.warn("[Neuron.createParticle] No particle system available")}catch(i){console.error("[Neuron.createParticle] Error creating particle:",i)}else console.warn("[Neuron.createParticle] Missing neuron parameters:",e,t)}static cleanupConnectionParticles(e,t){window.particleSystem&&"function"==typeof window.particleSystem.removeConnection?window.particleSystem.removeConnection(e,t):console.warn("[Neuron.cleanupConnectionParticles] OptimizedParticleSystem not available")}static cleanupOrphanedParticles(){const e=[];if(window.circles)for(const t of window.circles)t&&t.neuron&&e.push(t.neuron.id);window.particleSystem&&"function"==typeof window.particleSystem.cleanupOrphanedParticles?window.particleSystem.cleanupOrphanedParticles(e):console.warn("[Neuron.cleanupOrphanedParticles] OptimizedParticleSystem not available")}}const Fe={dragThreshold:.001,doubleClickDelay:300,canvasDragSpeed:.01},ke={flashDuration:.2,momentumMultiplier:10,momentumDuration:.5};window.updateNeuronLabel=e=>{if(null===e)(void 0).neuronLabelElement.style.display="none";else{let t="",n="0.00";if(window.circles){const o=window.circles.find((t=>t&&t.neuron&&t.neuron.id===e));o&&o.neuron&&(t=o.neuron.presetName||"",n=o.neuron.dcInput?.toFixed(2)||"0.00")}(void 0).neuronLabelElement.innerHTML=`[ ${e} ]  ${t}<br>DC: ${n} <span style="margin-left: 5px; font-size: 12px;">🔊</span>`,(void 0).neuronLabelElement.style.display="block",(void 0).neuronLabelElement.title="Click to toggle sound controls"}};class Ie{static effectsPool=[];static availableEffects=[];static initialized=!1;static initialize(e,t=20){this.initialized||(this.scene=e,this.initialized=!0)}static createEffect(){return null}static getEffect(){return null}static releaseEffect(e){}static createFiringEffect(e,t=null){}static dispose(){this.initialized&&(this.initialized=!1)}}class Le{static particlePool=[];static availableParticles=[];static initialized=!1;static initialize(e,t=30){this.initialized||(this.scene=e,this.initialized=!0)}static createParticle(){return null}static getParticle(){return null}static releaseParticle(e){}static createSignalParticle(e,t,n=null,o=.5,i=.5){n&&setTimeout(n,10)}static dispose(){this.initialized&&(this.initialized=!1)}}class $e{constructor(e){this.scene=e,this.initialized=!1,this.initialize()}initialize(){this.initialized||(Ie.initialize(this.scene,20),Le.initialize(this.scene,30),this.initialized=!0)}createNeuronFiringEffect(e,t=null){this.initialized}createSignalParticle(e,t,n=null,o=.5,i=.5){this.initialized&&Le.createSignalParticle(e,t,n,o,i)}dispose(){this.initialized&&(Ie.dispose(),Le.dispose(),this.initialized=!1)}}class De{constructor(e,t){this.scene=e,this.camera=t,this.neurons=[],this.clock=new x,this.colors={dark:new r("#1a1a1a"),light:new r("#2a2a2a")},this.initialize()}initialize(){this.shaderMaterial=new T({uniforms:{time:{value:0},resolution:{value:new m(window.innerWidth,window.innerHeight)},neuronPositions:{value:new Float32Array(90)},neuronStrengths:{value:new Float32Array(30)},neuronCount:{value:0},colorDark:{value:this.colors.dark},colorLight:{value:this.colors.light}},vertexShader:"\n                varying vec2 vUv;\n                \n                void main() {\n                    vUv = uv;\n                    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n                }\n            ",fragmentShader:"\n                uniform float time;\n                uniform vec2 resolution;\n                uniform float neuronPositions[90]; // x,y,z for each neuron (max 30)\n                uniform float neuronStrengths[30];\n                uniform int neuronCount;\n                uniform vec3 colorDark;\n                uniform vec3 colorLight;\n                \n                varying vec2 vUv;\n                \n                // Grid calculation function\n                float grid(vec2 uv, float size) {\n                    // Adjust UV coordinates based on aspect ratio\n                    vec2 aspectCorrectedUV = uv;\n                    aspectCorrectedUV.x *= resolution.x / resolution.y;\n                    \n                    // Calculate grid with aspect ratio correction\n                    vec2 grid = fract(aspectCorrectedUV * size);\n                    return (step(0.95, grid.x) + step(0.95, grid.y)) * 0.018;\n                }\n                \n                // Simplified fluid-like function\n                float fluidEffect(vec2 p, float time) {\n                    float value = 0.0;\n                    \n                    // Add base wave pattern - more visible\n                    value += 0.6 * sin(p.x * 2.0 + time * 0.3) * sin(p.y * 2.2 + time * 0.2);\n                    \n                    // Add secondary waves for more complexity\n                    value += 0.3 * sin(p.x * 5.0 - time * 0.2) * sin(p.y * 4.0 - time * 0.1);\n                    value += 0.15 * sin(p.x * 10.0 + time * 0.5) * sin(p.y * 8.0 - time * 0.3);\n                    \n                    // Add neuron influences with stronger effect\n                    for (int i = 0; i < 30; i++) {\n                        if (i >= neuronCount) break;\n                        \n                        // Get neuron screen position from float array\n                        vec2 neuronPos = vec2(\n                            neuronPositions[i * 3],     // x\n                            neuronPositions[i * 3 + 1]  // y\n                        );\n                        \n                        // Calculate distance with proper aspect ratio\n                        vec2 aspectCorrectedPos = neuronPos;\n                        aspectCorrectedPos.x *= resolution.x / resolution.y;\n                        vec2 aspectCorrectedP = p;\n                        aspectCorrectedP.x *= resolution.x / resolution.y;\n                        float dist = distance(aspectCorrectedP, aspectCorrectedPos);\n                        \n                        // Create ripple effect around each neuron\n                        float strength = neuronStrengths[i];\n                        float ripple = strength * 0.005 * sin(dist * 15.0 - time * 3.0) / (1.0 + dist * 3.0);\n                        \n                        // Add repulsion force (neurons push fluid away)\n                        float repulsion = strength * 0.3 / (0.05 + dist * dist * 4.0);\n                        \n                        value += ripple + repulsion;\n                    }\n                    \n                    return value;\n                }\n                \n                void main() {\n                    // Convert UV to normalized device coordinates\n                    vec2 p = vUv * 2.0 - 1.0;\n                    \n                    // Get fluid effect value\n                    float fluid = fluidEffect(p, time);\n                    \n                    // Enhance contrast with non-linear mapping\n                    fluid = 0.5 + 0.5 * fluid;\n                    fluid = pow(fluid, 1.5); // Increase contrast reduction\n                    \n                    // Create gradient between dark and light colors\n                    vec3 color = mix(colorDark, colorLight, fluid);\n                    \n                    // Add grid overlay\n                    float gridValue = grid(vUv, 20.0); // Adjust grid size by changing the number\n                    color = mix(color, vec3(1.0), gridValue);\n                    \n                    gl_FragColor = vec4(color, 1.0);\n                }\n            ",transparent:!1,depthWrite:!1,depthTest:!1,needsUpdate:!0});const e=new o(2,2);this.plane=new h(e,this.shaderMaterial),this.bgScene=new N,this.bgCamera=new P(-1,1,1,-1,-10,10),this.bgScene.add(this.plane),this.plane.position.z=-5,window.addEventListener("resize",this.handleResize.bind(this));const t=document.getElementById("fluid-fallback");t&&t.parentNode.removeChild(t),console.log("Fluid background effect initialized")}handleResize(){this.shaderMaterial.uniforms.resolution.value.set(window.innerWidth,window.innerHeight)}updateNeurons(e){this.neurons=e;const t=Math.min(e.length,30),n=new Float32Array(3*t),o=new Float32Array(t);for(let i=0;i<t;i++){const t=e[i];if(t&&t.position){const e=t.position.clone();e.project(this.camera),n[3*i]=e.x,n[3*i+1]=e.y,n[3*i+2]=e.z;let s=.2;t.neuron&&(t.neuron.isFiring?s=1:t.neuron.currentCharge&&(s=.2+.8*t.neuron.currentCharge)),o[i]=s}else n[3*i]=0,n[3*i+1]=0,n[3*i+2]=0,o[i]=0}this.shaderMaterial.uniforms.neuronPositions.value=n,this.shaderMaterial.uniforms.neuronStrengths.value=o,this.shaderMaterial.uniforms.neuronCount.value=t}render(e){if(!e)return void console.error("No renderer provided to fluid background render method");this.shaderMaterial.uniforms.time.value=this.clock.getElapsedTime(),void 0===this._renderCount?(this._renderCount=0,console.log(`Rendering fluid with ${this.shaderMaterial.uniforms.neuronCount.value} neurons`)):this._renderCount%300==0&&console.log(`Fluid effect active with ${this.shaderMaterial.uniforms.neuronCount.value} neurons`),this._renderCount++;const t=e.autoClear;e.autoClear=!0,e.render(this.bgScene,this.bgCamera),e.autoClear=t}}class ze{constructor(e,t=2e3){this.scene=e,this.maxParticles=t,this.activeParticles=[],this.particlePool=[],this.neuronConnections=new Map,this.initialize(),console.log(`Particle System initialized with ${t} maximum particles`)}initialize(){this.geometry=new o(.05,.05),this.material=new a({color:16777215,transparent:!0,opacity:.9,side:E}),console.log("Initialized billboard particle system")}createParticle(e,t,n,o,i=.5,s=.5){const r=`${n}_${o}`;let a,l;if(this.particlePool.length>0)a=this.particlePool.pop();else{const e=this.material.clone();a=new h(this.geometry,e)}l=s>=.999?1:s<=.001?1e-4:.005*Math.pow(1e3,s-.5),a.position.copy(e);const c=this.scene.getObjectByProperty("type","OrthographicCamera")||this.scene.getObjectByProperty("type","PerspectiveCamera");return c?a.lookAt(c.position):a.rotation.x=-Math.PI/2,a.userData={sourcePos:e.clone(),targetPos:t.clone(),sourceId:n,targetId:o,connectionKey:r,progress:0,speed:l,weight:i,creationTime:Date.now()},this.activeParticles.push(a),this.scene.add(a),this.neuronConnections.has(r)||this.neuronConnections.set(r,new Set),this.neuronConnections.get(r).add(a.uuid),this.activeParticles.length>this.maxParticles&&this.removeOldestParticle(),console.log(`Created particle from ${n} to ${o}, input speed: ${s}, calculated speed: ${l}`),s>=1&&(a.position.copy(t),a.position.y+=.2,window.dispatchEvent(new CustomEvent("particleArrived",{detail:{targetNeuronId:o,sourceNeuronId:n}})),setTimeout((()=>{this.activeParticles.includes(a)&&this.removeParticle(a)}),50)),a.uuid}removeOldestParticle(){if(0===this.activeParticles.length)return;let e=1/0,t=-1;for(let n=0;n<this.activeParticles.length;n++){const o=this.activeParticles[n].userData.creationTime;o<e&&(e=o,t=n)}if(-1!==t){const e=this.activeParticles[t];this.removeParticle(e)}}removeParticle(e){this.scene.remove(e);const t=this.activeParticles.indexOf(e);-1!==t&&this.activeParticles.splice(t,1);const n=e.userData.connectionKey;this.neuronConnections.has(n)&&(this.neuronConnections.get(n).delete(e.uuid),0===this.neuronConnections.get(n).size&&this.neuronConnections.delete(n)),this.particlePool.push(e)}update(e){const t=Math.min(e,.1),n=[],o=this.scene.getObjectByProperty("type","OrthographicCamera")||this.scene.getObjectByProperty("type","PerspectiveCamera");for(let i=0;i<this.activeParticles.length;i++){const e=this.activeParticles[i],s=e.userData;if(s.progress+=s.speed*t*60,s.progress>=1){n.push(e),window.dispatchEvent(new CustomEvent("particleArrived",{detail:{targetNeuronId:s.targetId,sourceNeuronId:s.sourceId}}));continue}const r=s.progress,a=s.sourcePos,l=s.targetPos;e.position.x=a.x+(l.x-a.x)*r,e.position.z=a.z+(l.z-a.z)*r;const c=.6,d=Math.sin(r*Math.PI);e.position.y=.2+c*d;const u=1*(.9+.2*Math.sin(12*r));e.scale.set(u,u,u),o?e.lookAt(o.position):e.rotation.x=-Math.PI/2}for(const i of n)this.removeParticle(i);(this.activeParticles.length>10||n.length>5)&&Math.random()<.01&&console.log(`Updating ${this.activeParticles.length} particles, removed ${n.length}`)}removeConnection(e,t){const n=`${e}_${t}`;if(this.neuronConnections.has(n)){const o=Array.from(this.neuronConnections.get(n));for(const e of o){const t=this.activeParticles.find((t=>t.uuid===e));t&&this.removeParticle(t)}this.neuronConnections.delete(n),console.log(`Removed all particles for connection ${e} → ${t}`)}}clearAllParticles(){for(;this.activeParticles.length>0;){const e=this.activeParticles[0];this.removeParticle(e)}this.neuronConnections.clear(),console.log("Cleared all particles")}cleanupOrphanedParticles(e){const t=new Set(e),n=[];for(const o of this.activeParticles){const e=o.userData;t.has(e.sourceId)&&t.has(e.targetId)||n.push(o)}for(const o of n)this.removeParticle(o);n.length>0&&console.log(`Removed ${n.length} orphaned particles`)}dispose(){this.clearAllParticles(),this.geometry.dispose(),this.material.dispose();for(const e of this.particlePool)e.parent&&e.parent.remove(e),e.material&&e.material.dispose();this.particlePool=[],console.log("Disposed particle system")}}const Re=[{name:"Pluck",attack:.001,decay:.2,sustain:.1,release:.4,pitchDecay:.02,detune:2,oscillatorType:"square",filterType:"lowpass",filterFrequency:3e3,filterQ:2,reverbSend:.15,delaySend:.2,volumeScaling:.8,color:new r(13421568)},{name:"Lo-Fi Piano",attack:.002,decay:.12,sustain:.3,release:.8,oscillatorType:"triangle",pitchDecay:.01,detune:3,filterType:"lowpass",filterFrequency:5e3,filterQ:.8,reverbSend:.15,delaySend:.05,neuronVolume:2,volumeScaling:.7,color:new r(16777215)},{name:"Analog Synth",attack:.01,decay:.3,sustain:.4,release:.7,oscillatorType:"sawtooth",filterType:"lowpass",filterFrequency:1500,filterQ:3,reverbSend:.15,delaySend:.2,neuronVolume:2,volumeScaling:.65,color:new r(7799039)},{name:"Pad",attack:.3,decay:.5,sustain:.8,release:2,oscillatorType:"sine",useSustainedTone:!0,filterType:"lowpass",filterFrequency:1800,filterQ:.6,reverbSend:.4,delaySend:.2,vibratoFreq:3.5,vibratoDepth:.1,neuronVolume:-6,volumeScaling:.15,color:new r(65535)},{name:"Bell",attack:.001,decay:.4,sustain:.1,release:1.2,pitchDecay:.1,detune:5,oscillatorType:"sine",filterType:"highpass",filterFrequency:1e3,filterQ:1.5,reverbSend:.4,delaySend:.1,vibratoFreq:5,vibratoDepth:.1,volumeScaling:.75,color:new r(16763904)},{name:"Percussion",attack:.001,decay:.1,sustain:0,release:.2,oscillatorType:"square",filterType:"bandpass",filterFrequency:1e3,filterQ:2,reverbSend:.1,delaySend:.05,volumeScaling:.55,color:new r(16724736)},{name:"Brass",attack:.05,decay:.3,sustain:.7,release:.8,oscillatorType:"sawtooth",filterType:"lowpass",filterFrequency:2e3,filterQ:1,reverbSend:.2,delaySend:.1,neuronVolume:-8,volumeScaling:.5,color:new r(16746496)},{name:"String",attack:.1,decay:.4,sustain:.6,release:1,oscillatorType:"sine",filterType:"lowpass",filterFrequency:3e3,filterQ:.5,reverbSend:.3,delaySend:.2,neuronVolume:-8,volumeScaling:.5,color:new r(16746496)},{name:"Guitar",attack:.01,decay:.2,sustain:.4,release:.6,oscillatorType:"sine",filterType:"lowpass",filterFrequency:2500,filterQ:1,reverbSend:.2,delaySend:.15,volumeScaling:.7,color:new r(16746496)},{name:"Synth Lead",attack:.1,decay:.4,sustain:.8,release:2,oscillatorType:"sine",pitchDecay:0,detune:0,useSustainedTone:!0,filterType:"lowpass",filterFrequency:2e3,filterQ:.7,reverbSend:.4,delaySend:.1,vibratoFreq:5.5,vibratoDepth:.08,tremoloFreq:2.5,tremoloDepth:.1,neuronVolume:-4,volumeScaling:.25,color:new r(8913151)},{name:"Acoustic Drum",attack:.001,decay:.18,sustain:0,release:.3,oscillatorType:"triangle",filterType:"lowpass",filterFrequency:1200,filterQ:1.5,reverbSend:.22,delaySend:.05,neuronVolume:4,volumeScaling:.6,color:new r(16711680)},{name:"Bass",attack:.01,decay:.3,sustain:.2,release:.5,oscillatorType:"sine",pitchDecay:.08,detune:3,filterType:"lowpass",filterFrequency:350,filterQ:.7,reverbSend:.04,delaySend:.02,neuronVolume:3,volumeScaling:.7,note:41.2,color:new r(33023)},{name:"Gentle Hi-Hat",attack:.001,decay:.1,sustain:0,release:.15,oscillatorType:"noise",filterType:"highpass",filterFrequency:8e3,filterQ:1.2,reverbSend:.08,delaySend:.02,neuronVolume:0,volumeScaling:.22,color:new r(13421568)},{name:"Bright Hi-Hat",attack:5e-4,decay:.04,sustain:0,release:.06,oscillatorType:"noise",filterType:"highpass",filterFrequency:11e3,filterQ:2.5,reverbSend:.04,delaySend:.01,neuronVolume:2,volumeScaling:.18,color:new r(13421568)}];const qe=new class{constructor(){this.handlers={},this.originalHandlers={},this.delegations={}}initialize(){document.addEventListener("click",this.handleGlobalEvent.bind(this,"click")),document.addEventListener("dblclick",this.handleGlobalEvent.bind(this,"dblclick")),document.addEventListener("touchend",this.handleGlobalEvent.bind(this,"touchend")),document.addEventListener("touchstart",this.handleGlobalEvent.bind(this,"touchstart"))}handleGlobalEvent(e,t){if(this.delegations[e])for(const{selector:n,handler:o}of this.delegations[e])t.target.matches&&t.target.matches(n)&&o(t)}delegate(e,t,n){this.delegations[e]||(this.delegations[e]=[]),this.delegations[e].push({selector:t,handler:n})}intercept(e,t,n,o){if("function"!=typeof e[t])return;if(this.handlers[e]&&this.handlers[e][t])return;this.handlers[e]||(this.handlers[e]={},this.originalHandlers[e]={});const i=e[t];this.originalHandlers[e][t]=i,e[t]=(...t)=>{let s,r=!0,a=t;if(n){const e=n(...t);!1===e?r=!1:Array.isArray(e)&&(a=e)}if(r&&(s=i.apply(e,a)),o){const e=o(s,...a);void 0!==e&&(s=e)}return s},this.handlers[e][t]=e[t]}restoreOriginal(e,t){return!(!this.originalHandlers[e]||!this.originalHandlers[e][t])&&(e[t]=this.originalHandlers[e][t],delete this.originalHandlers[e][t],delete this.handlers[e][t],!0)}cleanup(){Object.keys(this.originalHandlers).forEach((e=>{Object.keys(this.originalHandlers[e]).forEach((t=>{e[t]=this.originalHandlers[e][t]}))})),this.handlers={},this.originalHandlers={},document.removeEventListener("click",this.handleGlobalEvent.bind(this,"click")),document.removeEventListener("dblclick",this.handleGlobalEvent.bind(this,"dblclick")),document.removeEventListener("touchend",this.handleGlobalEvent.bind(this,"touchend")),document.removeEventListener("touchstart",this.handleGlobalEvent.bind(this,"touchstart"))}};const Be=new class{constructor(){this.initialized=!1}initialize(e){this.initialized||(Object.entries(e).forEach((([e,t])=>{he.registerComponent(e,t)})),this.initializeStateManager(e),this.initializeResourceManager(),this.initializeTimerManager(),this.initializeEventManager(),this.initializeReactiveManager(),this.initializeEventSystem(),this.setupEventRelay(),this.setupReactiveUI(),this.exposeManagersGlobally(),this.initialized=!0)}initializeStateManager(e){he.setState("isMobile",window.innerWidth<1024),he.setState("circles",e.circles||[]),he.setState("settings",e.settings||{}),he.setState("neuronGridNeedsUpdate",!1),he.setState("canvasNeedsUpdate",!1),e.updateNeuronGrid&&he.setState("updateNeuronGrid",e.updateNeuronGrid)}initializeResourceManager(){}initializeTimerManager(){}initializeEventManager(){}initializeReactiveManager(){pe.initialize()}initializeEventSystem(){qe.initialize()}setupEventRelay(){he.on("neuronStateChanged",(()=>{he.setState("neuronGridNeedsUpdate",!0)})),he.on("layoutChanged",(({isMobile:e})=>{const t=he.getComponent("uiManager");e&&t&&t.updateSynthPanelMobileView()})),he.on("soundParameterChanged",(()=>{pe.markCanvasForUpdate()}))}setupReactiveUI(){pe.observeResize(document.body,"layout",(e=>{const t=window.innerWidth<1024;he.getState("isMobile")!==t&&(he.setState("isMobile",t),he.dispatchEvent("layoutChanged",{isMobile:t}))}))}exposeManagersGlobally(){window.stateManager=he,window.reactiveManager=pe,window.timerManager=de,window.eventManager=ue,window.resourceManager=ce}cleanup(){pe.cleanup(),qe.cleanup(),ue.cleanup(),de.cleanup(),ce.cleanup(),this.initialized=!1}};document.body.style.backgroundColor="transparent",ye(),window.randomSoundsTimerId&&(clearTimeout(window.randomSoundsTimerId),window.randomSoundsTimerId=null),new p;const Oe=new class{constructor(){this.scene=null,this.camera=null,this.renderer=null,this.frustumSize=20,this.backgroundColor=0,this.frameCount=0,this.startTime=performance.now(),this.lastTime=this.startTime,this.isAnimating=!1,this.animationFrameId=null,this.initScene(),this.initCamera(),this.initRenderer(),this.initFluidBackground(),this.setupLighting(),this.setupEventListeners(),this.initParticleSystem(),this.initEffectsSystem(),this.initCentralizedNeuralSystem()}initScene(){this.scene=new N,this.scene.background=null,this.scene.matrixAutoUpdate=!1}initCamera(){const e=window.innerWidth/window.innerHeight;this.camera=new P(-this.frustumSize*e/2,this.frustumSize*e/2,this.frustumSize/2,-this.frustumSize/2,.1,1e3),this.camera.position.set(0,10,0),this.camera.lookAt(0,0,0),this.camera.rotation.z=0,this.camera.updateMatrix(),this.camera.updateMatrixWorld()}initRenderer(){this.renderer=new A({antialias:!1,powerPreference:"high-performance",precision:"mediump",logarithmicDepthBuffer:!1}),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.setPixelRatio(1),this.renderer.sortObjects=!0,this.renderer.setClearColor(1118481,1),document.body.appendChild(this.renderer.domElement),console.log("Renderer initialized with dark grey background")}setupLighting(){const e=new F(16777215,.8);this.scene.add(e);const t=new k(16777215,.5);t.position.set(5,10,5),this.scene.add(t)}setupEventListeners(){const e="sceneManager";this.handleResize=this.handleResize.bind(this),window.eventManager?(window.eventManager.registerComponent(e,this),window.eventManager.addEventListener(window,"resize",this.handleResize,!1,e)):window.addEventListener("resize",this.handleResize,!1)}handleResize(){const e=window.innerWidth/window.innerHeight;this.camera.left=-this.frustumSize*e/2,this.camera.right=this.frustumSize*e/2,this.camera.top=this.frustumSize/2,this.camera.bottom=-this.frustumSize/2,this.camera.updateProjectionMatrix(),this.renderer.setSize(window.innerWidth,window.innerHeight)}startAnimation(e){this.animateCallback=e,this._animate=this._animate.bind(this),window.timerManager?this.animationId=window.timerManager.requestAnimationFrame("sceneManager",this._animate):this.animationId=requestAnimationFrame(this._animate)}stopAnimation(){window.timerManager&&this.animationId?window.timerManager.cancelAnimationFrame("sceneManager",this.animationId):this.animationId&&cancelAnimationFrame(this.animationId),this.animationId=null}_animate(e){const t=(e-this.lastTime)/1e3;this.lastTime=e;const n=Math.min(t,.1);if(this.frameCount++,this.frameCount%20==0){const t=(e-this.startTime)/1e3,n=Math.round(this.frameCount/t*10)/10;window.uiManager&&"function"==typeof window.uiManager.updateFPSCounter&&window.uiManager.updateFPSCounter(n)}if(window.particleSystem&&"function"==typeof window.particleSystem.update)try{window.particleSystem.update(n)}catch(o){console.error("Error updating particle system:",o)}this.animateCallback&&this.animateCallback(e,n,this.frameCount),this.fluidBackground&&this.fluidBackground.render(this.renderer),this.renderer.render(this.scene,this.camera),this.isAnimating&&(window.timerManager?this.animationId=window.timerManager.requestAnimationFrame("sceneManager",this._animate):this.animationId=requestAnimationFrame(this._animate))}addToScene(e){this.scene.add(e)}removeFromScene(e){this.scene.remove(e)}getScene(){return this.scene}getCamera(){return this.camera}getRenderer(){return this.renderer}initFluidBackground(){this.fluidBackground=new De(this.scene,this.camera)}initParticleSystem(){this.scene&&(window.particleSystem=new ze(this.scene,2e3),this.cleanupLegacyParticles())}cleanupLegacyParticles(){if(window.Neuron&&window.Neuron.allParticles&&window.Neuron.allParticles.length>0){we(`[SceneManager] Cleaning up ${window.Neuron.allParticles.length} legacy particles`);for(const e of window.Neuron.allParticles)e&&e.parent&&(e.parent.remove(e),e.material&&e.material.dispose(),e.geometry&&e.geometry.dispose());window.Neuron.allParticles=[]}}initEffectsSystem(){this.scene&&(this.effectsManager=function(e){return be(),!window.effectsManager&&e&&(window.effectsManager=new $e(e)),window.effectsManager}(this.scene))}initCentralizedNeuralSystem(){this.scene&&this.effectsManager&&(this.neuralSystem=function(e,t=null,n={}){if(Ee)return window.neuralSystem||null;const o=window.circles&&Array.isArray(window.circles)&&window.circles.length>0;if(o){fe(`[Integrator] Found ${window.circles.length} existing neurons to migrate`);const e=window.circles.filter((e=>e&&e.neuron)).map((e=>e.neuron.id||"unknown"));fe(`[Integrator] Existing neuron IDs: ${e.join(", ")}`)}window.circles&&window.circles,!e&&window.scene&&(e=window.scene),!t&&window.effectsManager&&(t=window.effectsManager);const i=Pe(e,t,n);if(window.neuralSystem=i,o&&i.engine){const e=i.engine.getAllNeurons();fe(`[Integrator] Neurons in centralized system: ${e.length}`),e.forEach((e=>{fe(`[Integrator] Neuron ${e.id} has ${e.outgoingConnections.length} connections`)}))}return Ee=!0,i}(this.scene,this.effectsManager),window.neuralSystem=this.neuralSystem)}dispose(){this.stopAnimation(),window.eventManager?window.eventManager.removeAllForComponent("sceneManager"):window.removeEventListener("resize",this.handleResize,!1),this.fluidBackground&&(this.fluidBackground.shaderMaterial&&this.fluidBackground.shaderMaterial.dispose(),this.fluidBackground.plane&&this.fluidBackground.plane.geometry&&this.fluidBackground.plane.geometry.dispose()),this.renderer&&(this.renderer.domElement&&this.renderer.domElement.parentNode&&this.renderer.domElement.parentNode.removeChild(this.renderer.domElement),this.renderer.dispose(),this.renderer=null),window.effectsManager&&window.effectsManager.dispose(),this.scene&&(this.disposeSceneObjects(this.scene),this.scene=null),this.camera=null}disposeSceneObjects(e){if(!e)return;const t=e=>{e&&(Array.isArray(e)?e.forEach(t):(e.map&&e.map.dispose(),e.lightMap&&e.lightMap.dispose(),e.bumpMap&&e.bumpMap.dispose(),e.normalMap&&e.normalMap.dispose(),e.specularMap&&e.specularMap.dispose(),e.envMap&&e.envMap.dispose(),e.dispose()))};for(;e.children.length>0;){const n=e.children[0];e.remove(n),n.geometry&&n.geometry.dispose(),n.material&&t(n.material),n.children&&n.children.length>0&&this.disposeSceneObjects(n)}}};window.sceneManager=Oe;const He=Oe.getScene(),We=Oe.getCamera(),Ve=Oe.getRenderer();He.matrixAutoUpdate=!1,window.circles=[];const Ue=new class{constructor(e,t,n){this.scene=e,this.camera=t,this.renderer=n,this.pane=new le({expanded:!0}),window.pane=this.pane,this.neuronLabelElement=null,this.neuronHoverLabel=null,this.startButtonContainer=null,this.backgroundWaveformCanvas=null,this.tutorialActive=!1,this.tutorialStep=0,this.tutorialOverlay=null,this.setupStyles(),this.createUIElements(),this.setupEventListeners(),this.networkStarted=!1,this.positionNeuronLabel(),this.masterLimiter=new G(-1),this.setupBackgroundWaveform()}setupStyles(){const e=document.createElement("link");e.rel="stylesheet",e.href="https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap",document.head.appendChild(e);const t=document.createElement("link");t.rel="stylesheet",t.href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css",document.head.appendChild(t);const n=document.createElement("style");n.textContent="\n            /* Base styles */\n            body {\n                margin: 0;\n                overflow: hidden;\n                font-family: --tp-base-font-family, Roboto Mono, Source Code Pro, Menlo, Courier, monospace\n            }\n            \n            canvas {\n                display: block;\n                width: 100vw;\n                height: 100vh;\n            }\n            \n            /* Start button styles - 8-bit pixel perfect styling */\n            .start-button {\n                position: fixed;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n                padding: 15px 30px;\n                font-size: 1.2rem;\n                background-color: #0066cc;\n                color: white;\n                cursor: pointer;\n                z-index: 1000;\n                font-family: 'Press Start 2P', monospace;\n                letter-spacing: 1px;\n                \n                /* 8-bit pixel styling */\n                border: none;\n                border-radius: 0; /* Square corners for 8-bit look */\n                border-top: 3px solid #3399ff;\n                border-left: 3px solid #3399ff;\n                border-bottom: 3px solid #003366;\n                border-right: 3px solid #003366;\n                box-shadow: 0 0 0 2px #000000, inset 0 0 3px rgba(255, 255, 255, 0.3);\n                text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.5);\n                transition: all 0.1s ease;\n            }\n\n            .start-button:hover {\n                background-color: #0077ee;\n                transform: translate(-50%, -50%) scale(1.05);\n                box-shadow: 0 0 8px rgba(0, 119, 255, 0.6), 0 0 0 2px #000000;\n            }\n            \n            .start-button:active,\n            .start-button.pressed {\n                transform: translate(-50%, -50%) scale(0.95);\n                border-top: 3px solid #003366;\n                border-left: 3px solid #003366;\n                border-bottom: 3px solid #3399ff;\n                border-right: 3px solid #3399ff;\n                box-shadow: inset 0 0 8px rgba(0, 0, 0, 0.5), 0 0 0 2px #000000;\n                background-color: #005599;\n            }\n            \n            /* Sound Control Button - 8-bit pixel perfect styling */\n            .sound-control-btn {\n                position: fixed;\n                display: none;\n                background-color: #555555;\n                color: #FFFFFF;\n                padding: 8px 12px;\n                border-radius: 0; /* Square corners for 8-bit look */\n                font-size: 12px;\n                font-family: 'Press Start 2P', monospace;\n                pointer-events: auto;\n                cursor: pointer;\n                z-index: 1001;\n                border: none; /* Remove default border */\n                /* Beveled borders like notes buttons */\n                border-top: 2px solid #777777;\n                border-left: 2px solid #777777;\n                border-bottom: 2px solid #333333;\n                border-right: 2px solid #333333;\n                box-shadow: 0 0 0 1px #000000, inset 0 0 2px rgba(255, 255, 255, 0.3);\n                text-shadow: 1px 1px 0 rgba(0,0,0,0.5);\n                transition: all 0.1s ease;\n                line-height: 1.2;\n                letter-spacing: 0px;\n            }\n            \n            /* Hover state */\n            .sound-control-btn.hover {\n                background-color: #606060;\n                transform: scale(1.05);\n                box-shadow: 0 0 5px rgba(100, 100, 100, 0.8);\n            }\n            \n            /* Active/pressed state */\n            .sound-control-btn.active {\n                transform: scale(0.95);\n                border-top: 2px solid #333333;\n                border-left: 2px solid #333333;\n                border-bottom: 2px solid #777777;\n                border-right: 2px solid #777777;\n                box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.3);\n            }\n            \n            .sound-control-btn i {\n                margin-left: 5px;\n                font-size: 12px;\n            }\n            \n            /* Neuron hover label */\n            .neuron-hover-label {\n                position: fixed;\n                display: none;\n                background-color: rgba(0, 0, 0, 0.7);\n                color: white;\n                padding: 8px 12px;\n                border-radius: 4px;\n                font-size: 12px;\n                pointer-events: none;\n                z-index: 1000;\n                max-width: 200px;\n            }\n            \n            /* Tutorial overlay styles */\n            .tutorial-overlay {\n                position: fixed;\n                top: 0;\n                left: 0;\n                width: 100%;\n                height: 100%;\n                background-color: rgba(0, 0, 0, 0.7);\n                z-index: 2000;\n                display: flex;\n                justify-content: center;\n                align-items: center;\n                pointer-events: all;\n            }\n            \n            .tutorial-container {\n                background-color: #222;\n                padding: 20px;\n                max-width: 300px;\n                width: 90%;\n                position: relative;\n            }\n            \n            .tutorial-header {\n                font-size: 10px;\n                color: #00aaff;\n                margin-bottom: 15px;\n                font-weight: bold;\n                text-align: center;\n                font-family: -tp-base-font-family, Roboto Mono, Source Code Pro, Menlo, Courier, monospace;\n                \n            }\n            \n            .tutorial-content {\n                color: #fff;\n                margin-bottom: 20px;\n                line-height: 1.5;\n                font-size: 14px;\n            }\n            \n            .tutorial-buttons {\n                display: flex;\n                justify-content: space-between;\n            }\n            \n            .tutorial-button {\n                background-color: #00aaff;\n                color: white;\n                border: none;\n                padding: 10px 20px;\n                border-radius: 4px;\n                cursor: pointer;\n                font-family: --tp-base-font-family, Roboto Mono, Source Code Pro, Menlo, Courier, monospace;\n                font-size: 10px;\n                letter-spacing: 1px;\n                transition: all 0.2s ease;\n            }\n            \n            .tutorial-button:hover {\n                background-color: #0088cc;\n            }\n            \n            .tutorial-button.secondary {\n                background-color: #555;\n            }\n            \n            .tutorial-button.secondary:hover {\n                background-color: #444;\n            }\n            \n            .tutorial-highlight {\n                position: absolute;\n                border: 3px dashed #00aaff;\n                border-radius: 5px;\n                box-shadow: 0 0 15px rgba(0, 170, 255, 0.4);\n                pointer-events: none;\n                z-index: 2001;\n                animation: pulse 2s infinite;\n            }\n            \n            @keyframes pulse {\n                0% { box-shadow: 0 0 15px rgba(0, 170, 255, 0.4); }\n                50% { box-shadow: 0 0 20px rgba(0, 170, 255, 0.7); }\n                100% { box-shadow: 0 0 15px rgba(0, 170, 255, 0.4); }\n            }\n            \n            /* Global Panel Styles - base styles for all devices */\n            .tp-rotv {\n                box-sizing: border-box;\n                position: fixed !important;\n                top: 10px !important;\n                z-index: 1000 !important;\n                width: 300px !important;\n                min-width: 300px !important;\n                max-width: 90vw !important;\n            }\n            \n            /* Mobile styles (default) - centered positioning */\n            @media (max-width: 1023px) {\n                .tp-rotv {\n                    right: auto !important;\n                    left: 50% !important;\n                    transform: translateX(-50%) !important;\n                }\n                \n                /* Hide waveform visualizer on mobile */\n                #visualizer-container {\n                    display: none !important;\n                }\n                \n                #synth-panel-backdrop {\n                    position: fixed;\n                    top: 0;\n                    left: 0;\n                    width: 100vw;\n                    height: 100vh;\n                    background-color: rgba(0, 0, 0, 0.7);\n                    z-index: 1499;\n                }\n                \n                /* This targets the Sound Controls panel specifically */\n                .tp-rotv[data-synth-panel=\"true\"] {\n                    max-height: 80vh !important;\n                    overflow-y: auto !important;\n                    z-index: 1500 !important;\n                    background-color: rgba(40, 40, 40, 0.95) !important;\n                    border: 1px solid rgba(255, 255, 255, 0.15) !important;\n            }\n            \n                /* Ensure panel's position doesn't get overridden during interactions */\n                .tp-rotv[data-synth-panel=\"true\"] .tp-rotv_c {\n                    position: relative !important;\n                }\n            }\n            \n            /* Desktop styles - right-aligned positioning */\n            @media (min-width: 1024px) {\n                .tp-rotv {\n                    right: 10px !important;\n                    left: auto !important;\n                    transform: none !important;\n                }\n            }\n        ",document.head.appendChild(n)}createUIElements(){this.createStartButton(),this.createNeuronLabel(),this.createNeuronHoverLabel()}createStartButton(){this.startButtonContainer=document.createElement("div"),this.startButtonContainer.className="start-button-container";const e=document.createElement("button");e.className="start-button",e.textContent="START",e.addEventListener("click",(async()=>{e.classList.add("pressed"),setTimeout((async()=>{try{await _(),console.log("Audio is ready"),"function"==typeof window.setupInitialNetwork&&window.setupInitialNetwork(),this.startButtonContainer.style.display="none",this.networkStarted=!0}catch(t){console.error("Error during startup:",t),e.classList.remove("pressed")}}),200)})),this.startButtonContainer.appendChild(e),document.body.appendChild(this.startButtonContainer)}createNeuronLabel(){this.neuronLabelElement=document.createElement("div"),this.neuronLabelElement.id="neuron-label",this.neuronLabelElement.className="sound-control-btn",this.neuronLabelElement.style.bottom="20px",this.neuronLabelElement.style.right="20px",this.neuronLabelElement.style.display="none",document.body.appendChild(this.neuronLabelElement),this.setupNeuronLabelEvents()}createNeuronHoverLabel(){this.neuronHoverLabel=document.createElement("div"),this.neuronHoverLabel.id="neuron-hover-label",this.neuronHoverLabel.style.position="fixed",this.neuronHoverLabel.style.pointerEvents="none",this.neuronHoverLabel.style.padding="5px",this.neuronHoverLabel.style.backgroundColor="transparent",this.neuronHoverLabel.style.color="white",this.neuronHoverLabel.style.borderRadius="4px",this.neuronHoverLabel.style.display="none",this.neuronHoverLabel.style.zIndex="1002",this.neuronHoverLabel.style.fontFamily="--tp-base-font-family, Roboto Mono, Source Code Pro, Menlo, Courier, monospace;",this.neuronHoverLabel.style.fontSize="12px",this.neuronHoverLabel.style.textShadow="0 0 4px rgba(0,0,0,0.8)",document.body.appendChild(this.neuronHoverLabel),this.hoverLabelTimer=null,window.updateNeuronHoverLabel=(e,t,n)=>{if(this.hoverLabelTimer&&(clearTimeout(this.hoverLabelTimer),this.hoverLabelTimer=null),!e||!e.neuron)return this.neuronHoverLabel.style.display="none",void(window.currentHoveredNeuron=null);const o=e.neuron.dcInput.toFixed(2);e.neuron.currentCharge.toFixed(2);const i=e.neuron.id,s=Math.round(100*e.neuron.currentCharge);let r="";e.userData&&e.userData.presetName?r=e.userData.presetName:e.neuron&&e.neuron.getPresetName&&"function"==typeof e.neuron.getPresetName?r=e.neuron.getPresetName():e.neuron&&e.neuron.presetName&&(r=e.neuron.presetName);let a="";if(e.neuron.presetColor){const t=e.neuron.presetColor;a=`color: rgb(${Math.floor(255*t.r)}, ${Math.floor(255*t.g)}, ${Math.floor(255*t.b)}); text-shadow: 0 0 2px rgba(0,0,0,0.8);`}let l="";if(window.soundManager){const t=window.soundManager.getNeuronSynthParams(e.neuron.id);if(t&&t.note){const e=t.note,n=window.musicalNotes&&window.musicalNotes.find((t=>Math.abs(t.freq-e)<.1));l=n?`Note: ${n.name}`:`Note: ${e.toFixed(1)} Hz`}}this.neuronHoverLabel.innerHTML=`\n                ${i}<br><strong style="${a}">${r}</strong><br>\n                ${l?l+"<br>":""}DC: ${o}<br>\n                ${s}%\n            `,e.neuron.isFiring&&(this.neuronHoverLabel.innerHTML+='<br><span style="color:#ffff00">Firing!</span>');const c=window.innerWidth<1024||"ontouchstart"in window||navigator.maxTouchPoints>0;let d=null;if(window.pane&&window.pane.element&&(d=window.pane.element.getBoundingClientRect()),c){const t=e.position.clone().clone().project(this.camera),n=(t.x+1)/2*window.innerWidth,o=-(t.y-1)/2*window.innerHeight;let i=n+40,s=o-70;if(d){const e=document.createElement("div");e.style.position="absolute",e.style.visibility="hidden",e.innerHTML=this.neuronHoverLabel.innerHTML,e.style.width="auto",e.style.padding="5px",document.body.appendChild(e);const t=e.offsetWidth,r=e.offsetHeight;document.body.removeChild(e),i<d.right&&i+t>d.left&&s<d.bottom&&s+r>d.top&&(s=o+70,s<d.bottom&&s+r>d.top&&(i=n-t-20))}this.neuronHoverLabel.style.left=`${i}px`,this.neuronHoverLabel.style.top=`${s}px`,this.neuronHoverLabel.dataset.offsetX=i-n,this.neuronHoverLabel.dataset.offsetY=s-o}else if("none"===this.neuronHoverLabel.style.display&&t&&n){const e=20;let o=t+e,i=n+10;if(d){const s=document.createElement("div");s.style.position="absolute",s.style.visibility="hidden",s.innerHTML=this.neuronHoverLabel.innerHTML,s.style.width="auto",s.style.padding="5px",document.body.appendChild(s);const r=s.offsetWidth,a=s.offsetHeight;document.body.removeChild(s),o<d.right&&o+r>d.left&&i<d.bottom&&i+a>d.top&&(o=t-r-20,(o<d.right&&o+r>d.left&&i<d.bottom&&i+a>d.top||o<10)&&(o=t+e,i=n+a+20))}this.neuronHoverLabel.style.left=`${o}px`,this.neuronHoverLabel.style.top=`${i}px`,this.neuronHoverLabel.dataset.offsetX=o-t,this.neuronHoverLabel.dataset.offsetY=i-n}this.neuronHoverLabel.style.display="block",window.currentHoveredNeuron=e;const u=e===window.draggedNeuron;c&&!u&&(this.hoverLabelTimer=setTimeout((()=>{this.neuronHoverLabel.style.display="none",window.currentHoveredNeuron=null}),1e3))}}setupNeuronLabelEvents(){this.neuronLabelElement.addEventListener("click",(()=>{if(!window.selectedSynthFolder||!window.selectedSynthFolder.element)return;const e=window.selectedSynthFolder.element,t="block"===e.style.display;e.style.display=t?"none":"block",!t&&this.isMobile()&&window.updateSynthPanelMobileView&&window.updateSynthPanelMobileView()})),this.neuronLabelElement.addEventListener("touchstart",(e=>{e.preventDefault(),this.neuronLabelElement.classList.add("active")})),this.neuronLabelElement.addEventListener("touchend",(e=>{if(e.preventDefault(),this.neuronLabelElement.classList.remove("active"),window.selectedSynthFolder&&window.selectedSynthFolder.element){const e=window.selectedSynthFolder.element,t="block"===e.style.display;e.style.display=t?"none":"block",console.log(`Sound panel toggled to (touch): ${e.style.display}`)}else console.error("Sound panel not available for touch!")})),this.neuronLabelElement.addEventListener("mouseenter",(()=>{this.neuronLabelElement.classList.add("hover")})),this.neuronLabelElement.addEventListener("mouseleave",(()=>{this.neuronLabelElement.classList.remove("hover")})),this.neuronLabelElement.addEventListener("mousedown",(()=>{this.neuronLabelElement.classList.add("active")})),this.neuronLabelElement.addEventListener("mouseup",(()=>{this.neuronLabelElement.classList.remove("active")})),window.updateNeuronLabel=e=>{null===e?this.neuronLabelElement.style.display="none":(this.neuronLabelElement.innerHTML=`neuron ${e.toString().padStart(2,"0")} <i class="fa-solid fa-sliders"></i>`,this.neuronLabelElement.classList.contains("sound-control-btn")||(this.neuronLabelElement.className="sound-control-btn"),this.neuronLabelElement.style.display="block",this.neuronLabelElement.title="Click to toggle sound controls")}}positionNeuronLabel(){const e=window.innerWidth;if(e<768)this.neuronLabelElement.style.bottom="25px",this.neuronLabelElement.style.right="auto",this.neuronLabelElement.style.left="50%",this.neuronLabelElement.style.transform="translateX(-50%)";else if(e<1024)this.neuronLabelElement.style.bottom="30px",this.neuronLabelElement.style.right="auto",this.neuronLabelElement.style.left="50%",this.neuronLabelElement.style.transform="translateX(-50%)";else{const e=window.pane?.element;if(e){const t=e.getBoundingClientRect();this.neuronLabelElement.style.top=t.bottom+20+"px",this.neuronLabelElement.style.right="20px",this.neuronLabelElement.style.bottom="auto",this.neuronLabelElement.style.padding="12px 16px"}else this.neuronLabelElement.style.top="80px",this.neuronLabelElement.style.right="20px",this.neuronLabelElement.style.bottom="auto"}}setupEventListeners(){window.addEventListener("resize",this.positionNeuronLabel.bind(this)),window.updateNeuronLabelPosition=()=>{setTimeout((()=>{this.positionNeuronLabel.bind(this)()}),50)},setTimeout((()=>{if(window.pane&&window.pane.element){new MutationObserver(this.positionNeuronLabel.bind(this)).observe(window.pane.element,{attributes:!0,subtree:!0,childList:!0})}}),1e3)}isMobile(){return window.innerWidth<1024}enforcePanelWidth(){if(!window.selectedSynthFolder||!window.selectedSynthFolder.element)return;document.querySelectorAll(".tp-tabv_c, .tp-tbiv_c").forEach((e=>{e.style.width="100%",e.style.minWidth="280px"}));document.querySelectorAll(".tp-tabv").forEach((e=>{if(!e.dataset.hasWidthObserver){new MutationObserver((()=>{e.querySelectorAll(".tp-tbiv_c").forEach((e=>{e.style.width="100%",e.style.minWidth="280px"}))})).observe(e,{childList:!0,subtree:!0}),e.dataset.hasWidthObserver="true"}}))}toggleSynthPanelMobile(){if(!window.selectedSynthFolder||!window.selectedSynthFolder.element)return;const e=window.selectedSynthFolder.element;if("block"===e.style.display)this.hideSynthPanelOnMobile();else{e.dataset.synthPanel="true",e.style.display="block";let t=document.getElementById("synth-panel-backdrop");t||(t=document.createElement("div"),t.id="synth-panel-backdrop",t.addEventListener("click",(e=>{e.preventDefault(),this.hideSynthPanelOnMobile()})),document.body.appendChild(t)),t.style.display="block"}}hideSynthPanelOnMobile(){if(!window.selectedSynthFolder||!window.selectedSynthFolder.element)return;window.selectedSynthFolder.element.style.display="none";const e=document.getElementById("synth-panel-backdrop");e&&(e.style.display="none")}initTweakpane(e){console.log("Tweakpane initialization should be implemented here")}setupBackgroundWaveform(){this.backgroundWaveformCanvas&&(this.backgroundWaveformCanvas.parentNode&&this.backgroundWaveformCanvas.parentNode.removeChild(this.backgroundWaveformCanvas),this.backgroundWaveformCanvas=null),this.backgroundWaveformAnimationFrame&&(cancelAnimationFrame(this.backgroundWaveformAnimationFrame),this.backgroundWaveformAnimationFrame=null);const e=document.getElementById("static-background");e&&e.parentNode&&e.parentNode.removeChild(e),console.log("Using fluid background shader for interactive effects")}startTutorial(){console.log("Starting tutorial"),this.tutorialActive=!0,this.tutorialStep=0,this.showTutorialStep(this.tutorialStep)}showTutorialStep(e){this.clearTutorialUI();const t=[{title:"Creating Neurons",content:"Double-click anywhere on the canvas to create a new neuron.",nextLabel:"Next",skipLabel:"Skip Tutorial",highlight:{type:"canvas"}},{title:"Connecting Neurons",content:"Drag one neuron close to another.",nextLabel:"Next",skipLabel:"Skip"},{title:"Adjusting Connection Weight",content:"Mouse wheel when hovering over the connection arrow increases the amount of charge sent.",nextLabel:"Next",skipLabel:"Skip"},{title:"Setting DC Input",content:"Mouse wheel over a neuron to apply stimuli, so the neuron fires on its own.",nextLabel:"Next",skipLabel:"Skip"},{title:"Adjusting Sound",content:"Use the control panel to adjust its sound properties like pitch, envelope, and effects.",nextLabel:"Next",skipLabel:"Skip",highlight:{type:"controlPanel"}}];if(e>=t.length)return void this.endTutorial();const n=t[e],o=document.createElement("div");o.className="tutorial-overlay",o.style.backgroundColor="transparent",o.style.pointerEvents="none";const i=document.createElement("div");i.className="tutorial-container",i.style.position="absolute",i.style.bottom="10%",i.style.left="50%",i.style.transform="translateX(-50%)",i.style.maxWidth="80%",i.style.width="auto",i.style.backgroundColor="transparent",i.style.borderRadius="10px",i.style.padding="15px",i.style.textAlign="center",i.style.pointerEvents="auto";const s=document.createElement("div");s.className="tutorial-header",s.textContent=n.title,s.style.fontSize="14px",s.style.marginBottom="10px",s.style.color="#ffffff",i.appendChild(s);const r=document.createElement("div");r.className="tutorial-content",r.textContent=n.content,r.style.fontSize="14px",r.style.marginBottom="15px",r.style.color="#ffffff",i.appendChild(r);const a=document.createElement("div");a.className="tutorial-buttons",a.style.display="flex",a.style.justifyContent="center",a.style.gap="10px";const l=document.createElement("button");l.className="tutorial-button",l.textContent="next",l.style.fontSize="12px",l.style.padding="6px 12px",l.addEventListener("click",(()=>this.nextTutorialStep())),a.appendChild(l),i.appendChild(a),o.appendChild(i),document.body.appendChild(o),this.tutorialOverlay=o,n.highlight&&this.addHighlight(n.highlight)}nextTutorialStep(){this.tutorialStep++,this.showTutorialStep(this.tutorialStep)}endTutorial(){this.tutorialActive=!1,this.clearTutorialUI();const e=document.createElement("div");e.className="tutorial-overlay",e.style.backgroundColor="transparent",e.style.pointerEvents="none";const t=document.createElement("div");t.className="tutorial-container",t.style.position="absolute",t.style.bottom="10%",t.style.left="50%",t.style.transform="translateX(-50%)",t.style.maxWidth="80%",t.style.width="auto",t.style.backgroundColor="transparent",t.style.borderRadius="10px",t.style.padding="15px",t.style.textAlign="center",t.style.pointerEvents="auto";const n=document.createElement("div");n.className="tutorial-content",n.textContent="Tutorial completed!",n.style.fontSize="14px",n.style.color="#ffffff",n.style.textShadow="0 0 4px rgba(0,0,0,0.8)",t.appendChild(n),e.appendChild(t),document.body.appendChild(e),setTimeout((()=>{e.parentNode&&document.body.removeChild(e)}),3e3)}clearTutorialUI(){this.tutorialOverlay&&(document.body.removeChild(this.tutorialOverlay),this.tutorialOverlay=null);document.querySelectorAll(".tutorial-highlight").forEach((e=>{document.body.removeChild(e)}))}addHighlight(e){const t=document.createElement("div");if(t.className="tutorial-highlight","canvas"===e.type)t.style.position="fixed",t.style.top="0",t.style.left="0",t.style.width="100%",t.style.height="100%",t.style.border="none",t.style.boxShadow="inset 0 0 30px rgba(0, 170, 255, 0.4)";else if("controlPanel"===e.type&&window.pane&&window.pane.element){const e=window.pane.element.getBoundingClientRect();t.style.top=e.top-5+"px",t.style.left=e.left-5+"px",t.style.width=`${e.width+10}px`,t.style.height=`${e.height+10}px`}document.body.appendChild(t)}showNotification(e,t=3e3){const n=document.createElement("div");n.style.position="fixed",n.style.bottom="20px",n.style.left="50%",n.style.transform="translateX(-50%)",n.style.backgroundColor="#00aaff",n.style.color="white",n.style.padding="10px 20px",n.style.borderRadius="4px",n.style.zIndex="2000",n.style.fontFamily="sans-serif",n.style.boxShadow="0 2px 10px rgba(0, 0, 0, 0.3)",n.textContent=e,document.body.appendChild(n),setTimeout((()=>{n.parentNode&&document.body.removeChild(n)}),t)}}(He,We,Ve);window.uiManager=Ue;const _e=new o(1,1);_e.computeBoundingSphere();const je=new o(6,6);je.computeBoundingSphere();const Ge=new a({color:16777215,side:I,transparent:!1,depthTest:!0,depthWrite:!0,precision:"lowp"}),Qe=new a({color:16711680,transparent:!0,opacity:0,side:I,depthTest:!1,depthWrite:!1});window.settings={selectedNeuron:null,selectedConnection:null,selectedWeight:.5,selectedSpeed:.5,volume:-6,volumeNormalization:1,selectedPitchDecay:.05,selectedDetune:0,selectedNeuronVolume:0,selectedAttack:.002,selectedDecay:.3,selectedSustain:.2,selectedRelease:.8,selectedNote:null,selectedNoteIndex:null,selectedOscillatorType:"triangle",selectedAttackCurve:"exponential",selectedUseSustainedTone:!1,isHarmonyAnchor:!1,harmonyStrength:.5,harmonyDebug:!1,selectedFilterType:"lowpass",selectedFilterFrequency:5e3,selectedFilterQ:1,selectedReverbSend:.2,selectedDelaySend:.15,selectedTremoloFreq:4,selectedTremoloDepth:0,selectedVibratoFreq:5,selectedVibratoDepth:0,previewSounds:!1,spatialAudioEnabled:!1,addNeuron:e=>{const t=Ke(e);return window.circles.push(t),He.add(t),t},masterCompressor:{threshold:-18,ratio:2.5,attack:.02,release:.4,knee:20}};try{function et(){const e=document.getElementById("neuron-grid-container");if(!e)return;for(;e.firstChild;)e.removeChild(e.firstChild);e.style.background="rgba(0, 0, 0, 0.2)",e.style.border="1px solid rgba(255, 255, 255, 0.1)",e.style.borderRadius="4px",e.style.boxShadow="inset 0 0 5px rgba(0, 0, 0, 0.2)",e.style.padding="4px";const t=document.createElement("div");t.style.display="flex",t.style.flexWrap="wrap",t.style.gap="2px",t.style.justifyContent="center",e.appendChild(t),window.circles.forEach((e=>{const n=document.createElement("div");n.style.width="20px",n.style.height="20px",n.style.cursor="pointer",n.style.margin="0",n.style.padding="0",n.style.boxSizing="border-box",n.style.display="inline-block",n.style.border="none",n.style.borderRadius="0",n.style.boxShadow="none",n.style.transition="transform 0.15s, box-shadow 0.15s, border 0.15s, filter 0.15s",e.neuron&&(n.dataset.neuronId=e.neuron.id);const o=e.neuron;if(o){const e=o.presetColor;if(o.isFiring)n.style.backgroundColor="#ffff00",n.style.border="1px solid #aaaa00",n.style.boxShadow="0 0 5px rgba(255, 255, 0, 0.7)",o.presetName?n.title=`${o.presetName} (Neuron ${o.id}) - Firing!`:n.title=`Neuron ${o.id} - Firing!`;else if(e){const t=o.currentCharge||0,i=Math.floor(255*e.r),s=Math.floor(255*e.g),r=Math.floor(255*e.b);if(n.style.backgroundColor=`rgb(${i}, ${s}, ${r})`,n.style.boxShadow=`0 0 3px rgba(${i}, ${s}, ${r}, 0.8)`,n.title=`${o.presetName} (Neuron ${o.id})`,t>0&&(n.title+=` - Charging: ${Math.round(100*t)}%`),o.dcInput>0&&(n.title+=` - DC: ${o.dcInput.toFixed(2)}`),o.dcInput>0&&(n.style.animation="neuronPulse 2s infinite",!document.getElementById("neuronPulseStyle"))){const e=document.createElement("style");e.id="neuronPulseStyle",e.textContent="\n                            @keyframes neuronPulse {\n                                0% { filter: brightness(1); }\n                                50% { filter: brightness(1.3); }\n                                100% { filter: brightness(1); }\n                            }\n                        ",document.head.appendChild(e)}}else{const e=o.currentCharge||0,t=Math.floor(255*Math.min(.2,e));n.style.backgroundColor=`rgb(0, ${t}, 255)`,n.title=`Neuron ${o.id}`,e>0&&(n.title+=` - Charging: ${Math.round(100*e)}%`),o.dcInput>0&&(n.title+=` - DC: ${o.dcInput.toFixed(2)}`),o.dcInput>0&&(n.style.animation="neuronPulse 2s infinite")}}else n.style.backgroundColor="#0000ff",n.title="Default neuron";n.addEventListener("mouseenter",(()=>{n.style.transform="scale(1.2)",n.style.zIndex="10",n.style.boxShadow="0 2px 8px rgba(255, 255, 255, 0.5)",n.style.border="1px solid rgba(255, 255, 255, 0.9)"})),n.addEventListener("mouseleave",(()=>{n.style.transform="scale(1)",n.style.zIndex="1",n.style.boxShadow="none",n.style.border="none"})),n.addEventListener("click",(()=>{Je&&Je.selectNeuron(e)})),t.appendChild(n)}))}pane.element.style.width="300px",pane.element.style.maxWidth="300px",pane.element.style.minWidth="300px",pane.on("change",(()=>{pane.element.style.width="300px",pane.element.style.transform="none"})),setTimeout((()=>{pane.element.querySelectorAll(".tp-sldv_i").forEach((e=>{e.addEventListener("mousedown",(e=>{e.stopPropagation()})),e.addEventListener("mousemove",(e=>{e.stopPropagation()}))}));pane.element.querySelectorAll("input, button, .tp-rotv_c").forEach((e=>{e.addEventListener("mousedown",(e=>{e.stopPropagation()}))}))}),200),setTimeout((()=>{const e=pane.element;if(e){const t=document.createElement("div");t.id="neuron-grid-container",t.style.display="flex",t.style.flexWrap="wrap",t.style.padding="0",t.style.margin="8px 0",t.style.background="rgba(0, 0, 0, 0.2)",t.style.width="280px",t.style.fontSize="0",t.style.lineHeight="0",e.appendChild(t),window.updateNeuronGrid=function(){et()},et()}}),100),window.addEventListener("neuronChargeUpdate",(e=>{const{neuronId:t,charge:n,threshold:o,isFiring:i,dcInput:s}=e.detail;if(window.currentHoveredNeuron&&window.currentHoveredNeuron.neuron&&window.currentHoveredNeuron.neuron.id===t&&Ue.neuronHoverLabel&&"block"===Ue.neuronHoverLabel.style.display){const e=parseInt(Ue.neuronHoverLabel.style.left),t=parseInt(Ue.neuronHoverLabel.style.top),n=e-parseInt(Ue.neuronHoverLabel.dataset.offsetX||30),o=t-parseInt(Ue.neuronHoverLabel.dataset.offsetY||-20);updateNeuronHoverLabel(window.currentHoveredNeuron,n,o)}(0===n||n>=o||100*n%10<.1)&&requestAnimationFrame((()=>{window.updateNeuronGrid&&window.updateNeuronGrid()}))})),window.addEventListener("neuronReset",(e=>{const{neuronId:t}=e.detail;requestAnimationFrame((()=>{window.updateNeuronGrid&&window.updateNeuronGrid()}))})),window.updateNeuronGrid=et,setTimeout((()=>{window.globalControls={},console.log("Global controls initialized:",window.globalControls)}),100);const tt=pane.addFolder({title:"Sound Controls",expanded:!0});tt.element.style.display="none",window.selectedSynthFolder=tt,console.log("Sound controls folder created and assigned to global variable"),window.updateSynthFolderDisplay=function(){if(window.innerWidth>=1024){if(tt&&tt.element){tt.element.style.display="block";const e=document.getElementById("synth-placeholder-msg");e&&e.remove()}}else tt&&tt.element&&(tt.element.style.display=window.soundManager?.selectedNeuronId?"block":"none");window.updateNeuronLabelPosition&&window.updateNeuronLabelPosition()},setTimeout(window.updateSynthFolderDisplay,100),window.addEventListener("resize",window.updateSynthFolderDisplay),setTimeout((()=>{if(tt&&tt.element){tt.element.style.display;tt.element.style.display="block",setTimeout((()=>{window.updateSynthFolderDisplay(),console.log("Sound controls panel initialized")}),10)}}),100);const nt=[{name:"C2",freq:65.41},{name:"D2",freq:73.42},{name:"E2",freq:82.41},{name:"F2",freq:87.31},{name:"G2",freq:98},{name:"A2",freq:110},{name:"B2",freq:123.47},{name:"C3",freq:130.81},{name:"D3",freq:146.83},{name:"E3",freq:164.81},{name:"F3",freq:174.61},{name:"G3",freq:196},{name:"A3",freq:220},{name:"B3",freq:246.94},{name:"C4",freq:261.63},{name:"D4",freq:293.66},{name:"E4",freq:329.63},{name:"F4",freq:349.23},{name:"G4",freq:392},{name:"A4",freq:440},{name:"B4",freq:493.88},{name:"C5",freq:523.25},{name:"D5",freq:587.33},{name:"E5",freq:659.25},{name:"F5",freq:698.46},{name:"G5",freq:783.99},{name:"A5",freq:880},{name:"B5",freq:987.77},{name:"C6",freq:1046.5},{name:"D6",freq:1174.66},{name:"E6",freq:1318.51},{name:"F6",freq:1396.91},{name:"G6",freq:1567.98},{name:"A6",freq:1760},{name:"B6",freq:1975.53}];window.musicalNotes=nt;const ot=document.createElement("div");ot.style.marginBottom="10px",ot.style.marginLeft="auto",ot.style.marginRight="auto",ot.style.padding="5px",ot.style.backgroundColor="#000000",ot.style.borderRadius="0",ot.style.display="flex",ot.style.flexDirection="column",ot.style.gap="0",ot.style.border="2px solid #444444",ot.style.boxShadow="0 0 0 1px #000000, 0 0 0 4px #222222",ot.style.width="286px",ot.style.boxSizing="border-box",ot.style.alignSelf="center";const it=document.createElement("div");it.style.display="grid",it.style.gridTemplateRows="repeat(3, 1fr)",it.style.gridTemplateColumns="repeat(12, 1fr)",it.style.gap="1px",it.style.backgroundColor="#111111",it.style.padding="3px",it.style.border="1px solid #333333",it.style.width="100%",it.style.height="76px",it.style.boxSizing="border-box",it.style.overflow="hidden",ot.appendChild(it);let st=null;function rt(e,t){const n=document.createElement("button");n.textContent=e.name,n.dataset.noteIndex=t,n.dataset.frequency=e.freq,n.style.padding="1px 0",n.style.fontSize="5px",n.style.fontFamily="'Press Start 2P', monospace",n.style.color="#FFFFFF",n.style.textShadow="0px 0px 1px #000000",n.style.borderRadius="0",n.style.cursor="pointer",n.style.transition="all 0.15s ease",n.style.position="relative",n.style.margin="0",n.style.textAlign="center",n.style.boxShadow="inset 0 0 2px rgba(255, 255, 255, 0.3)",n.style.width="100%",n.style.minWidth="0",n.style.height="23px",n.style.lineHeight="1",n.style.overflow="hidden",n.style.boxSizing="border-box";const o=parseInt(e.name.match(/\d+/)[0]);let i,s,r;return o<=1?(i="#3A3A3A",s="#505050",r="#252525"):2===o?(i="#454545",s="#5A5A5A",r="#303030"):3===o?(i="#505050",s="#656565",r="#3A3A3A"):4===o?(i="#606060",s="#757575",r="#454545"):5===o?(i="#707070",s="#858585",r="#555555"):o>=6&&(i="#808080",s="#959595",r="#656565"),(e.name.includes("#")||e.name.length>2&&"b"===e.name[1])&&(i="#202020",s="#3A3A3A",r="#101010",n.style.color="#FFFFFF"),n.style.backgroundColor=i,n.style.borderTop=`2px solid ${s}`,n.style.borderLeft=`2px solid ${s}`,n.style.borderBottom=`2px solid ${r}`,n.style.borderRight=`2px solid ${r}`,n.dataset.original=i,n.dataset.originalBorderTop=s,n.dataset.originalBorderBottom=r,n.addEventListener("click",(o=>{o.preventDefault(),o.stopPropagation(),window.settings.selectedNote=e.freq,window.settings.selectedNoteIndex=t,window.soundManager&&window.soundManager.updateSelectedSynthParam("note",e.freq),st&&(st.style.backgroundColor=st.dataset.original||"#404040",st.style.borderTop=`2px solid ${st.dataset.originalBorderTop||"#505050"}`,st.style.borderLeft=`2px solid ${st.dataset.originalBorderTop||"#505050"}`,st.style.borderBottom=`2px solid ${st.dataset.originalBorderBottom||"#303030"}`,st.style.borderRight=`2px solid ${st.dataset.originalBorderBottom||"#303030"}`,st.style.transform="scale(1)",st.style.boxShadow="inset 0 0 2px rgba(255, 255, 255, 0.3)",st.style.fontWeight="normal",st.style.color="white");const i=e=>{if(e.startsWith("#")){const t=e.replace("#","");let n=parseInt(t.substring(0,2),16),o=parseInt(t.substring(2,4),16),i=parseInt(t.substring(4,6),16);return n=Math.floor(.4*n),o=Math.floor(.4*o),i=Math.floor(.4*i),`#${n.toString(16).padStart(2,"0")}${o.toString(16).padStart(2,"0")}${i.toString(16).padStart(2,"0")}`}return"#222222"},s=i(n.dataset.original),r=i(s);if(n.style.backgroundColor=s,n.style.color="#FFFFFF",n.style.borderTop=`2px solid ${r}`,n.style.borderLeft=`2px solid ${r}`,n.style.borderBottom=`2px solid ${s}`,n.style.borderRight=`2px solid ${s}`,n.style.transform="scale(0.95)",n.style.boxShadow="inset 0 0 5px rgba(0, 0, 0, 0.7)",n.style.fontWeight="bold",!n.scanlines){const e=document.createElement("div");e.style.position="absolute",e.style.top="0",e.style.left="0",e.style.width="100%",e.style.height="100%",e.style.backgroundImage="repeating-linear-gradient(0deg, rgba(0,0,0,0.2), rgba(0,0,0,0.2) 1px, transparent 1px, transparent 2px)",e.style.pointerEvents="none",e.style.zIndex="1",n.appendChild(e),n.scanlines=e}return st=n,window.activeNoteButton=n,console.log(`Note changed to: ${e.name} (${e.freq}Hz)`),!1})),n.addEventListener("touchend",(e=>(e.preventDefault(),n.click(),!1))),n.addEventListener("mouseenter",(()=>{if(n!==st){const e=e=>{if(e.startsWith("#")){const t=parseInt(e.slice(1,3),16),n=parseInt(e.slice(3,5),16),o=parseInt(e.slice(5,7),16);return`#${Math.min(255,t+50).toString(16).padStart(2,"0")}${Math.min(255,n+50).toString(16).padStart(2,"0")}${Math.min(255,o+50).toString(16).padStart(2,"0")}`}return e},t=e(n.dataset.original);if(n.style.backgroundColor=t,n.style.boxShadow="inset 0 0 4px rgba(255, 255, 255, 0.5)",n.style.borderTop=`2px solid ${e(n.dataset.originalBorderTop)}`,n.style.borderLeft=`2px solid ${e(n.dataset.originalBorderTop)}`,n.style.animation="noteButtonPulse 1.5s infinite",!document.getElementById("noteButtonPulseStyle")){const e=document.createElement("style");e.id="noteButtonPulseStyle",e.textContent="\n                        @keyframes noteButtonPulse {\n                            0% { transform: scale(1); }\n                            50% { transform: scale(1.05); }\n                            100% { transform: scale(1); }\n                        }\n                    ",document.head.appendChild(e)}}})),n.addEventListener("mouseleave",(()=>{n!==st&&(n.style.backgroundColor=n.dataset.original,n.style.borderTop=`2px solid ${n.dataset.originalBorderTop}`,n.style.borderLeft=`2px solid ${n.dataset.originalBorderTop}`,n.style.borderBottom=`2px solid ${n.dataset.originalBorderBottom}`,n.style.borderRight=`2px solid ${n.dataset.originalBorderBottom}`,n.style.boxShadow="inset 0 0 2px rgba(255, 255, 255, 0.3)",n.style.animation="none",n.style.transform="scale(1)")})),n}const at=Math.ceil(nt.length/3);[nt.slice(0,at),nt.slice(at,2*at),nt.slice(2*at)].forEach(((e,t)=>{e.forEach(((e,n)=>{const o=rt(e,t*at+n);it.appendChild(o)}))})),window.updateActiveNoteButton=function(e){const t=it.querySelectorAll("button");st&&(st.style.backgroundColor=st.dataset.original||"#404040",st.style.borderTop=`2px solid ${st.dataset.originalBorderTop||"#505050"}`,st.style.borderLeft=`2px solid ${st.dataset.originalBorderTop||"#505050"}`,st.style.borderBottom=`2px solid ${st.dataset.originalBorderBottom||"#303030"}`,st.style.borderRight=`2px solid ${st.dataset.originalBorderBottom||"#303030"}`,st.style.transform="scale(1)",st.style.boxShadow="inset 0 0 2px rgba(255, 255, 255, 0.3)",st.style.fontWeight="normal",st.style.color="white",st.scanlines&&(st.scanlines.remove(),st.scanlines=null),st=null,window.activeNoteButton=null),e&&t.forEach((t=>{const n=parseFloat(t.dataset.frequency);if(Math.abs(n-e)<.1){const e=e=>{if(e.startsWith("#")){const t=e.replace("#","");let n=parseInt(t.substring(0,2),16),o=parseInt(t.substring(2,4),16),i=parseInt(t.substring(4,6),16);return n=Math.floor(.4*n),o=Math.floor(.4*o),i=Math.floor(.4*i),`#${n.toString(16).padStart(2,"0")}${o.toString(16).padStart(2,"0")}${i.toString(16).padStart(2,"0")}`}return"#222222"},n=e(t.dataset.original),o=e(n);if(t.style.backgroundColor=n,t.style.color="#FFFFFF",t.style.borderTop=`2px solid ${o}`,t.style.borderLeft=`2px solid ${o}`,t.style.borderBottom=`2px solid ${n}`,t.style.borderRight=`2px solid ${n}`,t.style.transform="scale(0.95)",t.style.boxShadow="inset 0 0 5px rgba(0, 0, 0, 0.7)",t.style.fontWeight="bold",!t.scanlines){const e=document.createElement("div");e.style.position="absolute",e.style.top="0",e.style.left="0",e.style.width="100%",e.style.height="100%",e.style.backgroundImage="repeating-linear-gradient(0deg, rgba(0,0,0,0.2), rgba(0,0,0,0.2) 1px, transparent 1px, transparent 2px)",e.style.pointerEvents="none",e.style.zIndex="1",t.appendChild(e),t.scanlines=e}st=t,window.activeNoteButton=t}}))},tt.element.insertBefore(ot,tt.element.firstChild);const lt=ot.parentElement;lt&&(lt.style.display="flex",lt.style.flexDirection="column",lt.style.alignItems="center");const ct=document.createElement("div");ct.style.marginTop="10px",ct.style.marginLeft="auto",ct.style.marginRight="auto",ct.style.padding="8px",ct.style.backgroundColor="rgba(0, 0, 0, 0.2)",ct.style.borderRadius="6px",ct.style.display="flex",ct.style.flexDirection="column",ct.style.gap="8px",ct.className="preset-container",ct.style.boxShadow="inset 0 0 5px rgba(0, 0, 0, 0.2)",ct.style.border="1px solid rgba(255, 255, 255, 0.1)",ct.style.width="286px",ct.style.boxSizing="border-box",tt.element.insertBefore(ct,ot.nextSibling);const dt=document.createElement("div");dt.style.display="grid",dt.style.gridTemplateColumns="repeat(3, 1fr)",dt.style.gap="12px",dt.style.padding="4px",dt.style.borderRadius="4px",dt.className="preset-button-grid",ct.appendChild(dt);let ut=null;const ht=tt.addTab({pages:[{title:"Sound"},{title:"Filter"},{title:"FX Sends"},{title:"Modulation"}]});if(window.soundControlsTabs=ht,ht.pages[0].addBinding(window.settings,"selectedDetune",{min:-50,max:50,step:1,label:"Detune"}).on("change",(e=>{window.soundManager?.updateSelectedSynthParam("detune",e.value)})),ht.pages[0].addBinding(window.settings,"selectedNeuronVolume",{min:-12,max:12,step:1,label:"Volume (min=mute)"}).on("change",(e=>{window.soundManager?.updateSelectedSynthParam("neuronVolume",e.value)})),window.soundManager&&window.soundManager.getOscillatorTypes){const St=window.soundManager.getOscillatorTypes();ht.pages[0].addBinding(window.settings,"selectedOscillatorType",{options:St.reduce(((e,t)=>(e[t]=t,e)),{}),label:"Oscillator Type"}).on("change",(e=>{window.soundManager?.updateSelectedSynthParam("oscillatorType",e.value)}))}if(ht.pages[0].addBinding(window.settings,"selectedAttack",{min:.001,max:.5,step:.005,label:"Attack"}).on("change",(e=>{window.soundManager?.updateSelectedSynthParam("attack",e.value),window.forceRenderEnvelope()})),ht.pages[0].addBinding(window.settings,"selectedDecay",{min:.1,max:1.5,step:.05,label:"Decay"}).on("change",(e=>{window.soundManager?.updateSelectedSynthParam("decay",e.value),window.forceRenderEnvelope()})),ht.pages[0].addBinding(window.settings,"selectedSustain",{min:0,max:1,step:.05,label:"Sustain"}).on("change",(e=>{window.soundManager?.updateSelectedSynthParam("sustain",e.value),window.forceRenderEnvelope()})),ht.pages[0].addBinding(window.settings,"selectedRelease",{min:.2,max:3,step:.1,label:"Release"}).on("change",(e=>{window.soundManager?.updateSelectedSynthParam("release",e.value),window.forceRenderEnvelope()})),window.soundManager&&window.soundManager.getEnvelopeCurves){const Mt=window.soundManager.getEnvelopeCurves().reduce(((e,t)=>(e[t]=t,e)),{});ht.pages[0].addBinding(window.settings,"selectedAttackCurve",{options:Mt,label:"Curve Shape"}).on("change",(e=>{window.soundManager?.updateSelectedSynthParam("attackCurve",e.value),window.soundManager?.updateSelectedSynthParam("decayCurve",e.value),window.soundManager?.updateSelectedSynthParam("releaseCurve",e.value)}))}if(ht.pages[0].addBinding(window.settings,"selectedPitchDecay",{min:.01,max:.3,step:.01,label:"Pitch Decay"}).on("change",(e=>{window.soundManager?.updateSelectedSynthParam("pitchDecay",e.value)})),ht.pages[0].addBinding(window.settings,"selectedUseSustainedTone",{label:"Sustain Mode"}).on("change",(e=>{window.soundManager?.updateSelectedSynthParam("useSustainedTone",e.value)})),ht.pages[0].addBinding(window.settings,"isHarmonyAnchor",{label:"Harmony Anchor"}).on("change",(e=>{if(window.soundManager&&null!==window.soundManager.selectedNeuronId){const t=window.soundManager.selectedNeuronId,n=window.circles.find((e=>e&&e.neuron&&e.neuron.id===t));if(n&&n.neuron)if(n.neuron.isHarmonyAnchor=e.value,console.log(`Set neuron ${t} as harmony anchor: ${e.value}`),e.value)if(n.harmonyAnchorIndicator)n.harmonyAnchorIndicator.visible=!0;else{const e=new L(.3,.35,16),t=new a({color:16776960,transparent:!0,opacity:.5,side:E}),o=new h(e,t);o.rotation.x=-Math.PI/2,o.position.copy(n.position),o.position.y+=.05,n.harmonyAnchorIndicator=o,window.scene.add(o)}else n.harmonyAnchorIndicator&&(n.harmonyAnchorIndicator.visible=!1)}})),window.soundManager&&window.soundManager.getFilterTypes){const xt=window.soundManager.getFilterTypes();ht.pages[1].addBinding(window.settings,"selectedFilterType",{options:xt.reduce(((e,t)=>(e[t]=t,e)),{}),label:"Filter Type"}).on("change",(e=>{window.soundManager?.updateSelectedSynthParam("filterType",e.value)}))}ht.pages[1].addBinding(window.settings,"selectedFilterFrequency",{min:50,max:1e4,step:10,label:"Frequency"}).on("change",(e=>{window.soundManager?.updateSelectedSynthParam("filterFrequency",e.value)})),ht.pages[1].addBinding(window.settings,"selectedFilterQ",{min:.1,max:10,step:.1,label:"Resonance (Q)"}).on("change",(e=>{window.soundManager?.updateSelectedSynthParam("filterQ",e.value)})),ht.pages[2].addBinding(window.settings,"selectedReverbSend",{min:0,max:1,step:.01,label:"Reverb"}).on("change",(e=>{window.soundManager?.updateSelectedSynthParam("reverbSend",e.value)})),ht.pages[2].addBinding(window.settings,"selectedDelaySend",{min:0,max:1,step:.01,label:"Delay"}).on("change",(e=>{window.soundManager?.updateSelectedSynthParam("delaySend",e.value)})),ht.pages[3].addBinding(window.settings,"selectedTremoloFreq",{min:.1,max:10,step:.1,label:"Tremolo Rate"}).on("change",(e=>{window.soundManager?.updateSelectedSynthParam("tremoloFreq",e.value)})),ht.pages[3].addBinding(window.settings,"selectedTremoloDepth",{min:0,max:1,step:.01,label:"Tremolo Depth"}).on("change",(e=>{window.soundManager?.updateSelectedSynthParam("tremoloDepth",e.value)})),ht.pages[3].addBinding(window.settings,"selectedVibratoFreq",{min:.1,max:10,step:.1,label:"Vibrato Rate"}).on("change",(e=>{window.soundManager?.updateSelectedSynthParam("vibratoFreq",e.value)})),ht.pages[3].addBinding(window.settings,"selectedVibratoDepth",{min:0,max:1,step:.01,label:"Vibrato Depth"}).on("change",(e=>{window.soundManager?.updateSelectedSynthParam("vibratoDepth",e.value)})),tt.addBinding(window.settings,"previewSounds",{label:"Solo + Preview"}).on("change",(e=>{window.soundManager&&window.soundManager.setPreviewSounds(e.value)})),tt.addBinding(window.settings,"spatialAudioEnabled",{label:"Spatial Audio"}).on("change",(e=>{window.soundManager&&window.soundManager.setSpatialAudio(e.value)}));const pt=Re;function gt(e){const t=document.createElement("button");t.textContent=e.name,t.style.padding="5px 6px",t.style.fontSize="8px",t.style.fontFamily="'Press Start 2P', 'Courier New', monospace",t.style.textTransform="uppercase",t.style.letterSpacing="0.5px",t.style.fontWeight="bold";let n="#666666",o="#333333",i="#000000",s="rgba(255, 255, 255, 0.4)";if(e.name.includes("Synth")||e.name.includes("Analog"))n="#f706cf",o="#2b0f54",i="#000000",s="rgba(247, 6, 207, 0.5)";else if(e.name.includes("Bass"))n="#0080ff",o="#00008b",i="#000000",s="rgba(0, 128, 255, 0.5)";else if(e.name.includes("Piano"))n="#ffffff",o="#101010",i="#000000",s="rgba(255, 255, 255, 0.3)";else if(e.name.includes("Bell")||e.name.includes("Pluck"))n="#ffcc00",o="#332200",i="#000000",s="rgba(255, 204, 0, 0.5)";else if(e.name.includes("Pad"))n="#00aaaa",o="#003333",i="#000000",s="rgba(0, 170, 170, 0.5)";else if(e.name.includes("Drum")||e.name.includes("Percussion"))n="#ff3300",o="#330000",i="#000000",s="rgba(255, 51, 0, 0.5)";else if(e.name.includes("Hi-Hat"))n="#cccc00",o="#1a1a00",i="#000000",s="rgba(204, 204, 0, 0.5)";else if(e.name.includes("Guitar")||e.name.includes("String"))n="#ff8800",o="#331a00",i="#000000",s="rgba(255, 136, 0, 0.5)";else if(e.name.includes("Lead"))n="#ff0000",o="#330000",i="#000000",s="rgba(255, 0, 0, 0.5)";else if(e.name.includes("Brass"))n="#ff8800",o="#331a00",i="#000000",s="rgba(255, 136, 0, 0.5)";else if(e.color){const t=Math.floor(255*e.color.r),r=Math.floor(255*e.color.g),a=Math.floor(255*e.color.b);n=`rgb(${t/4}, ${r/4}, ${a/4})`,o=`rgb(${t}, ${r}, ${a})`,i=`rgb(${Math.min(255,1.5*t)}, ${Math.min(255,1.5*r)}, ${Math.min(255,1.5*a)})`,s=`rgba(${t}, ${r}, ${a}, 0.5)`}function r(e,t){if(e.startsWith("#")){const n=e.replace("#","");let o=parseInt(n.substring(0,2),16),i=parseInt(n.substring(2,4),16),s=parseInt(n.substring(4,6),16);return o=Math.min(255,o+t),i=Math.min(255,i+t),s=Math.min(255,s+t),`#${o.toString(16).padStart(2,"0")}${i.toString(16).padStart(2,"0")}${s.toString(16).padStart(2,"0")}`}if(e.startsWith("rgb")){const n=e.match(/\d+/g);if(n&&n.length>=3){return`rgb(${Math.min(255,parseInt(n[0])+t)}, ${Math.min(255,parseInt(n[1])+t)}, ${Math.min(255,parseInt(n[2])+t)})`}}return e}function a(e,t){if(e.startsWith("#")){const n=e.replace("#","");let o=parseInt(n.substring(0,2),16),i=parseInt(n.substring(2,4),16),s=parseInt(n.substring(4,6),16);return o=Math.max(0,o-t),i=Math.max(0,i-t),s=Math.max(0,s-t),`#${o.toString(16).padStart(2,"0")}${i.toString(16).padStart(2,"0")}${s.toString(16).padStart(2,"0")}`}if(e.startsWith("rgb")){const n=e.match(/\d+/g);if(n&&n.length>=3){return`rgb(${Math.max(0,parseInt(n[0])-t)}, ${Math.max(0,parseInt(n[1])-t)}, ${Math.max(0,parseInt(n[2])-t)})`}}return e}t.style.backgroundColor=n,t.style.color=i,t.style.borderTop=`2px solid ${r(n,50)}`,t.style.borderLeft=`2px solid ${r(n,30)}`,t.style.borderBottom=`2px solid ${a(n,40)}`,t.style.borderRight=`2px solid ${a(n,30)}`,t.style.borderRadius="0",t.style.cursor="pointer",t.style.transition="all 0.2s ease-in-out",t.style.textAlign="center",t.style.boxShadow=`0 0 0 0 ${s}`,t.style.position="relative",t.style.overflow="hidden";const l=document.createElement("div");l.style.position="absolute",l.style.top="0",l.style.left="0",l.style.width="100%",l.style.height="100%",l.style.backgroundImage="repeating-linear-gradient(0deg, rgba(0,0,0,0.15), rgba(0,0,0,0.15) 1px, transparent 1px, transparent 2px)",l.style.pointerEvents="none",t.appendChild(l),t.title=`${e.name} Preset`,t.style.animation="buttonPulse 4s infinite";const c=document.createElement("style");return c.textContent=`\n            @keyframes buttonPulse {\n                0% { box-shadow: 0 0 5px 0 ${s}; }\n                50% { box-shadow: 0 0 8px 1px ${s}; }\n                100% { box-shadow: 0 0 5px 0 ${s}; }\n            }\n        `,document.head.appendChild(c),t.dataset.original=n,t.dataset.originalBorderTop=r(n,50),t.dataset.originalBorderLeft=r(n,30),t.dataset.originalBorderBottom=a(n,40),t.dataset.originalBorderRight=a(n,30),t.dataset.originalText=i,t.dataset.glow=s,t.addEventListener("click",(()=>{applyPreset(e),ut&&(ut.style.backgroundColor=ut.dataset.original||"#333333",ut.style.color=ut.dataset.originalText||"#000000",ut.style.borderTop=`2px solid ${ut.dataset.originalBorderTop||"#333333"}`,ut.style.borderLeft=`2px solid ${ut.dataset.originalBorderLeft||"#333333"}`,ut.style.borderBottom=`2px solid ${ut.dataset.originalBorderBottom||"#333333"}`,ut.style.borderRight=`2px solid ${ut.dataset.originalBorderRight||"#333333"}`,ut.style.transform="scale(1)",ut.style.boxShadow="none",ut.style.animation="buttonPulse 4s infinite",ut.style.fontWeight="normal"),t.style.backgroundColor="#222222",t.style.color="#eeeeee",t.style.borderTop="2px solid #111111",t.style.borderLeft="2px solid #111111",t.style.borderBottom="2px solid #333333",t.style.borderRight="2px solid #333333",t.style.transform="scale(1.05)",t.style.boxShadow="0 0 8px rgba(100, 100, 100, 0.5)",t.style.animation="activePulse 1.5s infinite";const n=document.createElement("style");n.textContent="\n                @keyframes activePulse {\n                    0% { box-shadow: 0 0 8px rgba(100, 100, 100, 0.5); }\n                    50% { box-shadow: 0 0 15px rgba(150, 150, 150, 0.7); }\n                    100% { box-shadow: 0 0 8px rgba(100, 100, 100, 0.5); }\n                }\n            ",document.head.appendChild(n),ut=t})),t.addEventListener("mouseenter",(()=>{if(t!==ut){const e=e=>{const t=e.replace("#","");let n=parseInt(t.substring(0,2),16),o=parseInt(t.substring(2,4),16),i=parseInt(t.substring(4,6),16);return n=Math.min(255,n+50),o=Math.min(255,o+50),i=Math.min(255,i+50),`#${n.toString(16).padStart(2,"0")}${o.toString(16).padStart(2,"0")}${i.toString(16).padStart(2,"0")}`};let o;o=n.startsWith("#")?e(n):"rgba(80, 80, 80, 0.9)",t.style.backgroundColor=o,t.style.borderTop=`2px solid ${r(o,50)}`,t.style.borderLeft=`2px solid ${r(o,30)}`,t.style.borderBottom=`2px solid ${a(o,40)}`,t.style.borderRight=`2px solid ${a(o,30)}`,t.style.boxShadow=`0 0 5px ${t.dataset.glow}`}})),t.addEventListener("mouseleave",(()=>{t!==ut&&(t.style.backgroundColor=t.dataset.original,t.style.borderTop=`2px solid ${t.dataset.originalBorderTop}`,t.style.borderLeft=`2px solid ${t.dataset.originalBorderLeft}`,t.style.borderBottom=`2px solid ${t.dataset.originalBorderBottom}`,t.style.borderRight=`2px solid ${t.dataset.originalBorderRight}`,t.style.boxShadow="none")})),t}window.defaultPresets=pt,pt.forEach((e=>{const t=gt(e);dt.appendChild(t)})),ct.appendChild(dt);const mt=()=>{ut&&(ut.style.backgroundColor=ut.dataset.original||"#333333",ut.style.color=ut.dataset.originalText||"#000000",ut.style.borderTop=`2px solid ${ut.dataset.originalBorderTop||"#333333"}`,ut.style.borderLeft=`2px solid ${ut.dataset.originalBorderLeft||"#333333"}`,ut.style.borderBottom=`2px solid ${ut.dataset.originalBorderBottom||"#333333"}`,ut.style.borderRight=`2px solid ${ut.dataset.originalBorderRight||"#333333"}`,ut.style.transform="scale(1)",ut.style.boxShadow="none",ut.style.animation="buttonPulse 4s infinite",ut.style.fontWeight="normal",ut=null),window.activePreset=null};tt.children.forEach((e=>{!e.label||e.label.includes("Presets")||e.label.includes("Preview")||e.on("change",mt)})),ht&&ht.pages&&(ht.pages[1]&&ht.pages[1].children&&ht.pages[1].children.forEach((e=>{e.on("change",mt)})),ht.pages[2]&&ht.pages[2].children&&ht.pages[2].children.forEach((e=>{e.on("change",mt)})),ht.pages[3]&&ht.pages[3].children&&ht.pages[3].children.forEach((e=>{e.on("change",mt)}))),window.selectedSynthFolder=tt;const wt=document.createElement("div");wt.id="visualizer-container",wt.style.marginTop="10px",wt.style.width="100%",wt.style.height="160px",wt.style.backgroundColor="rgba(0, 0, 0, 0.1)",wt.style.borderRadius="4px",wt.style.overflow="hidden",wt.style.position="relative",wt.style.display="flex",wt.style.flexDirection="column";const ft=document.createElement("div");ft.id="waveform-container",ft.style.width="100%",ft.style.height="100%",ft.style.position="relative";const yt=document.createElement("canvas");yt.id="waveform-canvas",yt.width=280,yt.height=160,yt.style.width="100%",yt.style.height="100%",ft.appendChild(yt),wt.appendChild(ft),CanvasRenderingContext2D.prototype.roundRect||(CanvasRenderingContext2D.prototype.roundRect=function(e,t,n,o,i){return"number"==typeof i?i=[i,i,i,i]:1===i.length?i=[i[0],i[0],i[0],i[0]]:2===i.length&&(i=[i[0],i[1],i[0],i[1]]),this.beginPath(),this.moveTo(e+i[0],t),this.lineTo(e+n-i[1],t),this.quadraticCurveTo(e+n,t,e+n,t+i[1]),this.lineTo(e+n,t+o-i[2]),this.quadraticCurveTo(e+n,t+o,e+n-i[2],t+o),this.lineTo(e+i[3],t+o),this.quadraticCurveTo(e,t+o,e,t+o-i[3]),this.lineTo(e,t+i[0]),this.quadraticCurveTo(e,t,e+i[0],t),this.closePath(),this});const vt=(e,t,n,o,i,s,r,a,l)=>{const c=s+r+.2+l,d=t+o*(s/c),u=d+o*(r/c),h=u+o*(.2/c),p=n+i*(1-a);e.fillStyle="rgba(30, 30, 30, 0.4)",e.fillRect(t,n,o,i),e.strokeStyle="rgba(100, 100, 100, 0.5)",e.lineWidth=.5;for(let g=1;g<5;g++){const s=n+i*g/5;e.beginPath(),e.moveTo(t,s),e.lineTo(t+o,s),e.stroke()}for(let g=1;g<5;g++){const s=t+o*g/5;e.beginPath(),e.moveTo(s,n),e.lineTo(s,n+i),e.stroke()}e.beginPath(),e.moveTo(t,n+i),e.lineTo(t,n+i),e.lineTo(d,n),e.lineTo(u,p),e.lineTo(h,p),e.lineTo(t+o,n+i),e.fillStyle="rgba(160, 160, 160, 0.25)",e.fill(),e.fillStyle="rgba(255, 255, 255, 0.3",e.font="11px monospace",e.textAlign="center",e.fillText(`A: ${s.toFixed(2)}`,(t+d)/2,n+i-8),e.fillText(`D: ${r.toFixed(2)}`,(d+u)/2,n+20),e.fillText(`S: ${a.toFixed(2)}`,(u+h)/2,p-8),e.fillText(`R: ${l.toFixed(2)}`,(h+t+o)/2,n+i-8)};function bt(e){if(!e)return void console.warn("Waveform canvas not found, can't render envelope");const t=e.getContext("2d");if(!t)return void console.warn("Could not get canvas context");let n;if(t.clearRect(0,0,e.width,e.height),void 0!==he&&(n=he.getState("settings")),n||(n=window.settings,n)){if("function"==typeof vt)vt(t,10,10,e.width-20,e.height-20,n.selectedAttack,n.selectedDecay,n.selectedSustain,n.selectedRelease);else{const o=10,i=10,s=e.width-20,r=e.height-20,a=n.selectedAttack,l=n.selectedDecay,c=n.selectedSustain,d=a+l+.1+n.selectedRelease,u=o+s*(a/d),h=u+s*(l/d),p=h+s*(.1/d),g=i+r*(1-c);t.fillStyle="rgba(20, 40, 20, 0.4)",t.fillRect(o,i,s,r),t.beginPath(),t.moveTo(o,i+r),t.lineTo(u,i),t.lineTo(h,g),t.lineTo(p,g),t.lineTo(o+s,i+r),t.fillStyle="rgba(90, 200, 120, 0.3)",t.fill(),t.strokeStyle="rgba(120, 240, 160, 0.8)",t.lineWidth=2,t.stroke()}t.strokeStyle="rgba(255, 255, 255, 0.2)",t.lineWidth=1,t.beginPath(),t.moveTo(0,e.height/2),t.lineTo(e.width,e.height/2),t.stroke()}else console.warn("Settings not available for envelope rendering")}function Ct(){if(void 0!==pe)pe.markCanvasForUpdate();else{const e=document.getElementById("waveform-canvas");e&&bt(e)}}setTimeout((()=>{tt&&tt.element&&tt.element.appendChild(wt)}),100),window.drawVisualizations=function(){if(window.visualizationAnimationFrame&&cancelAnimationFrame(window.visualizationAnimationFrame),window.visualizationAnimationFrame=requestAnimationFrame(window.drawVisualizations),!window.soundManager)return;const e=document.getElementById("visualizer-container");if((!e||"none"!==window.getComputedStyle(e).display)&&window.soundManager.waveformAnalyzer){const e=document.getElementById("waveform-canvas");if(e){const t=e.getContext("2d"),n=window.soundManager.waveformAnalyzer.getValue();if(t.clearRect(0,0,e.width,e.height),window.settings&&vt(t,10,10,e.width-20,e.height-20,window.settings.selectedAttack,window.settings.selectedDecay,window.settings.selectedSustain,window.settings.selectedRelease),t.strokeStyle="rgba(255, 255, 255, 0.2)",t.lineWidth=1,t.beginPath(),t.moveTo(0,e.height/2),t.lineTo(e.width,e.height/2),t.stroke(),null!==window.soundManager.selectedNeuronId){let o=!1;for(let e=0;e<n.length;e++)if(Math.abs(n[e])>.01){o=!0;break}if(o){t.beginPath(),t.strokeStyle="rgba(255, 255, 255, 0.8)",t.lineWidth=1.5;const o=e.width/n.length;let i=0;t.moveTo(i,n[0]*e.height/2+e.height/2);for(let s=1;s<n.length;s++){const r=n[s]*e.height/2+e.height/2;t.lineTo(i+=o,r)}t.stroke()}}}}},window.startVisualizations=function(){window.visualizationAnimationFrame&&cancelAnimationFrame(window.visualizationAnimationFrame),window.visualizationAnimationFrame=requestAnimationFrame(window.drawVisualizations),console.log("Started audio visualizations")},window.stopVisualizations=function(){window.visualizationAnimationFrame&&(cancelAnimationFrame(window.visualizationAnimationFrame),window.visualizationAnimationFrame=null,console.log("Stopped audio visualizations"))},window.setupSpectrumAnalyzer=function(){window.soundManager&&(console.log("Setting up audio visualizer"),window.soundManager.waveformAnalyzer||(console.log("Creating waveform analyzer"),window.soundManager.waveformAnalyzer=new D("waveform",128),z.connect(window.soundManager.waveformAnalyzer)),window.startVisualizations())},window.setupAudioVisualizer=window.setupSpectrumAnalyzer,window.playTestTone=function(){if(window.soundManager&&null!==window.soundManager.selectedNeuronId){console.log("Playing test tone for neuron:",window.soundManager.selectedNeuronId),re&&U&&"running"!==U.state&&U.resume();const e=window.settings?.previewSounds;window.settings&&(window.settings.previewSounds=!0),window.soundManager.playNeuronFiring(.7,.5,window.soundManager.selectedNeuronId,!0,!0,0),window.settings&&(window.settings.previewSounds=e);const t=document.querySelector("#visualizer-container button");if(t){const e=t.style.backgroundColor;t.style.backgroundColor="rgba(180, 255, 200, 0.9)",t.style.boxShadow="0 0 8px rgba(100,255,150,0.8)",setTimeout((()=>{t.style.backgroundColor="rgba(200, 255, 220, 1.0)",t.style.boxShadow="0 0 12px rgba(120,255,170,0.9)"}),50),setTimeout((()=>{t.style.backgroundColor=e,t.style.boxShadow="0 2px 4px rgba(0,0,0,0.2)"}),300)}window.drawVisualizations&&window.drawVisualizations()}else console.warn("Cannot play test tone - no neuron selected")},setTimeout((()=>{const e=window.InputManager;if(e&&e.prototype.toggleSynthPanel){const t=e.prototype.toggleSynthPanel;e.prototype.toggleSynthPanel=function(e,n=null){if(t.call(this,e,n),e&&n){window.settings.isHarmonyAnchor=n.isHarmonyAnchor||!1,window.selectedSynthFolder&&window.selectedSynthFolder.refresh();const e=window.circles.find((e=>e&&e.neuron&&e.neuron.id===window.soundManager?.selectedNeuronId));if(e&&e.neuron&&e.neuron.isHarmonyAnchor)if(e.harmonyAnchorIndicator)e.harmonyAnchorIndicator.visible=!0;else{const t=new L(.3,.35,16),n=new a({color:16776960,transparent:!0,opacity:.5,side:E}),o=new h(t,n);o.rotation.x=-Math.PI/2,o.position.copy(e.position),o.position.y+=.05,e.harmonyAnchorIndicator=o,window.scene.add(o)}}const o=window.innerWidth>=1024;if(window.selectedSynthFolder&&window.selectedSynthFolder.element){const t=window.selectedSynthFolder.element;if(e){o||(t.style.display="block"),t.offsetWidth,Array.from(t.children).forEach((e=>{e&&(e.style.display="block",e.children&&Array.from(e.children).forEach((e=>{e&&(e.style.display="block")})))}));const e=document.getElementById("synth-placeholder-msg");e&&e.remove(),window.selectedSynthFolder.refresh&&setTimeout((()=>{window.selectedSynthFolder.refresh(),console.log("Sound controls refreshed after showing")}),50)}else if(o){if(t.style.display="block",!document.getElementById("synth-placeholder-msg")){const e=document.createElement("div");e.id="synth-placeholder-msg",e.style.padding="10px",e.style.textAlign="center",e.style.color="#aaa",e.style.fontStyle="italic",e.innerHTML="Select a neuron to edit sound parameters",t.insertBefore(e,t.firstChild)}}else t.style.display="none";console.log(`InputManager: Sound panel display set to ${t.style.display}, isDesktop: ${o}`)}if(window.globalControls&&!o){const t=e?"none":"";try{console.log("Toggling global controls visibility:",t);for(const e in window.globalControls)window.globalControls[e]&&(console.log(`Setting ${e} display to ${t}`),window.globalControls[e].style.display=t)}catch(i){console.error("Error toggling control visibility:",i)}}else console.log("Global controls not toggled (desktop mode or not found)");e&&n&&window.drawVisualizations&&(console.log("Starting audio visualizations for neuron:",n.id),window.setupSpectrumAnalyzer?window.setupSpectrumAnalyzer():console.error("setupSpectrumAnalyzer function not found!"),Ct(),window.activeNoteButton&&null!==window.activeNoteButton&&(window.activeNoteButton.style.backgroundColor=window.activeNoteButton.dataset.original||"rgba(50, 50, 50, 0.7)",window.activeNoteButton.style.transform="scale(1)",window.activeNoteButton.style.boxShadow="none",window.activeNoteButton.style.fontWeight="normal",window.activeNoteButton=null)),window.updateNeuronLabelPosition&&window.updateNeuronLabelPosition()},console.log("Successfully patched InputManager.toggleSynthPanel")}else console.warn("Could not patch InputManager.toggleSynthPanel - not available")}),1e3);try{he&&window.soundManager&&he.registerComponent("soundManager",{...window.soundManager,renderEnvelope:bt})}catch(Ze){console.warn("Could not register soundManager with stateManager:",Ze)}window.forceRenderEnvelope=Ct,setTimeout((()=>{window.setupSpectrumAnalyzer&&window.setupSpectrumAnalyzer(),window.selectedSynthFolder&&"none"!==window.selectedSynthFolder.element.style.display&&Ct()}),1e3),pane.addBinding(window.settings,"volumeNormalization",{min:0,max:2,step:.1,label:"Volume Balance"}).on("change",(e=>{window.soundManager&&window.soundManager.setVolumeNormalization(e.value)})),window.globalControls={},console.log("Global controls initialized:",window.globalControls),window.updateSynthControls=function(e){e&&(Object.keys(e).forEach((t=>{t in window.settings&&(window.settings[t]=e[t])})),pane&&pane.refresh&&pane.refresh())},window.highlightPresetButton=function(e){ut&&(ut.style.backgroundColor=ut.dataset.original||"#333333",ut.style.color=ut.dataset.originalText||"#000000",ut.style.transform="scale(1)",ut.style.boxShadow="none",ut.style.borderTop=`2px solid ${ut.dataset.originalBorderTop||"#333333"}`,ut.style.borderLeft=`2px solid ${ut.dataset.originalBorderLeft||"#333333"}`,ut.style.borderBottom=`2px solid ${ut.dataset.originalBorderBottom||"#333333"}`,ut.style.borderRight=`2px solid ${ut.dataset.originalBorderRight||"#333333"}`,ut.style.animation="",ut.style.fontWeight="normal");const t=dt.querySelectorAll("button");let n=null;if(t.forEach((t=>{t.textContent===e&&(n=t)})),n){const t=n.dataset.original||"#333333";let o;if(t.startsWith("#")){const e=t.replace("#","");let n=parseInt(e.substring(0,2),16),i=parseInt(e.substring(2,4),16),s=parseInt(e.substring(4,6),16);n=Math.floor(.3*n),i=Math.floor(.3*i),s=Math.floor(.3*s),o=`#${n.toString(16).padStart(2,"0")}${i.toString(16).padStart(2,"0")}${s.toString(16).padStart(2,"0")}`}else if(t.startsWith("rgb")){const e=t.match(/\d+/g);if(e&&e.length>=3){o=`rgb(${Math.floor(.3*parseInt(e[0]))}, ${Math.floor(.3*parseInt(e[1]))}, ${Math.floor(.3*parseInt(e[2]))})`}else o="#111111"}else o="#111111";n.style.backgroundColor=o,n.style.color="#d8d8d8",n.style.transform="scale(0.92)",n.style.fontWeight="bold",n.style.boxShadow="0 0 8px rgba(80, 80, 80, 0.4)",n.style.borderTop="3px solid #000000",n.style.borderLeft="3px solid #000000",n.style.borderBottom="3px solid #222222",n.style.borderRight="3px solid #222222";const i=document.createElement("style");let s="rgba(60, 60, 60, 0.3)",r="rgba(80, 80, 80, 0.4)";if(t.startsWith("#")){const e=t.replace("#","");let n=parseInt(e.substring(0,2),16),o=parseInt(e.substring(2,4),16),i=parseInt(e.substring(4,6),16);n=Math.floor(.25*n),o=Math.floor(.25*o),i=Math.floor(.25*i),s=`rgba(${n}, ${o}, ${i}, 0.3)`,r=`rgba(${n}, ${o}, ${i}, 0.4)`}i.textContent=`\n            @keyframes activePulse {\n                0% { box-shadow: 0 0 3px ${s}; }\n                50% { box-shadow: 0 0 5px ${r}; }\n                100% { box-shadow: 0 0 3px ${s}; }\n            }\n        `,document.head.appendChild(i),n.style.animation="activePulse 1.2s infinite",n.style.position="relative",ut=n,console.log(`Highlighted preset button: ${e}`)}},window.unhighlightActivePreset=function(){ut&&(ut.style.backgroundColor=ut.dataset.original||"#333333",ut.style.color=ut.dataset.originalText||"#000000",ut.style.transform="scale(1)",ut.style.boxShadow="none",ut.style.borderTop=`2px solid ${ut.dataset.originalBorderTop||"#333333"}`,ut.style.borderLeft=`2px solid ${ut.dataset.originalBorderLeft||"#333333"}`,ut.style.borderBottom=`2px solid ${ut.dataset.originalBorderBottom||"#333333"}`,ut.style.borderRight=`2px solid ${ut.dataset.originalBorderRight||"#333333"}`,ut.style.animation="",ut.style.fontWeight="normal",ut=null),window.activePreset=null},window.applyAndRememberPreset=function(e,t=null){return!!e&&(console.log(`%c[PRESET SYSTEM] Remembering preset "${e.name}" for future neurons`,"color: #00ff00; font-weight: bold;"),window.activePreset=e,window.lastSelectedPreset=JSON.parse(JSON.stringify(e)),e.color&&e.color.isColor&&(window.lastSelectedPreset.color=new r,window.lastSelectedPreset.color.copy(e.color)),null===t||!window.soundManager||(applyPreset(e,t),!0))},window.adjustVolumeForInstrumentType=function(e){if(!e)return e;const t=e.name?.toLowerCase()||"";return t.includes("lead")||t.includes("organ")||t.includes("pad")?console.log(`%c[VOLUME ADJUSTMENT] Using preset value for ${e.name}`,"color: #ff8800;"):(t.includes("brass")||t.includes("string"))&&(console.log(`%c[VOLUME ADJUSTMENT] Setting volume to -8dB for ${e.name}`,"color: #ff8800;"),e.neuronVolume=-8),e},window.applyPreset=function(e,t){if(!e)return!1;if(!t&&window.soundManager&&(t=window.soundManager.selectedNeuronId),!t||!window.soundManager)return console.error("[PRESET SYSTEM] No neuron selected or provided"),!1;console.log(`%c[PRESET SYSTEM] Applying preset "${e.name}" to neuron ${t}`,"color: #00ff00; font-weight: bold;");const n=window.circles.find((e=>e&&e.neuron&&e.neuron.id===t));if(!n)return console.error(`[PRESET SYSTEM] Could not find neuron ${t}`),!1;if(e.color){const t=n.material.color.clone(),i=e.color.clone();if(n.neuron.presetColor=e.color.clone(),ae.to(t,{r:i.r,g:i.g,b:i.b,duration:.5,ease:"power2.out",onUpdate:function(){n.material.color.setRGB(t.r,t.g,t.b)},onComplete:function(){n.material.color.copy(i)}}),n.neuron&&"function"==typeof n.neuron.createParticleExplosion)n.neuron.createParticleExplosion({color:e.color,count:25,speed:1.2,scale:.2,duration:1200}),setTimeout((()=>{n.neuron.createParticleExplosion({color:e.color,count:15,speed:.9,scale:.15,duration:1e3})}),150);else{((t,i,s,r)=>{const l=new o(i,i),c=e.color.clone();c.r=Math.min(1.2,1.1*c.r),c.g=Math.min(1.2,1.1*c.g),c.b=Math.min(1.2,1.1*c.b);const d=new a({color:c,transparent:!0,opacity:1,side:E,depthTest:!1,depthWrite:!1});for(let e=0;e<t;e++){const o=new h(l,d.clone()),i=e/t*Math.PI*2,a=.1;o.position.set(n.position.x+Math.cos(i)*a,n.position.y+.05,n.position.z+Math.sin(i)*a),o.rotation.x=-Math.PI/2,o.renderOrder=9999,He.add(o),ae.to(o.position,{x:n.position.x+Math.cos(i)*(a*s*13),y:o.position.y+.1,z:n.position.z+Math.sin(i)*(a*s*13),duration:r/1e3,ease:"power2.out"}),ae.to(o.material,{opacity:0,duration:r/1e3,ease:"power1.out",onComplete:()=>{He.remove(o),o.material.dispose(),o.geometry.dispose()}})}})(8,.15,.75,800)}window.updateNeuronGrid&&window.updateNeuronGrid()}try{n.neuron.presetName=e.name}catch(s){console.log("Using alternative method to store preset name"),n.userData||(n.userData={}),n.userData.presetName=e.name}const i={...e,envelope:{attack:e.attack||.002,decay:e.decay||.3,sustain:e.sustain||.2,release:e.release||.8},oscillator:{type:e.oscillatorType||"triangle"},filter:{type:e.filterType||"lowpass",frequency:e.filterFrequency||5e3,Q:e.filterQ||1},effects:{reverbSend:e.reverbSend||.2,delaySend:e.delaySend||.15},modulation:{tremoloFreq:e.tremoloFreq||4,tremoloDepth:e.tremoloDepth||0,vibratoFreq:e.vibratoFreq||5,vibratoDepth:e.vibratoDepth||0}};return window.soundManager.neuronSoundOverrides.set(t,i),window.lastSelectedPreset=JSON.parse(JSON.stringify(e)),e.color&&e.color.isColor&&(window.lastSelectedPreset.color=new r,window.lastSelectedPreset.color.copy(e.color)),window.refreshSoundControls&&window.refreshSoundControls(),window.settings&&window.settings.previewSounds&&window.soundManager&&setTimeout((()=>{window.soundManager.playNeuronFiring(.5,.7,t,!0,!1,0)}),100),!0}}catch(Ze){console.error("Error setting up Tweakpane controls:",Ze)}const Ye=document.getElementById("neuron-grid-container");Ye&&Ye.parentNode&&Ye.parentNode.removeChild(Ye);const Xe=new class{constructor(e,t,n){this.scene=e,this.camera=t,this.renderer=n,this.connections=new Map,this.soundManager=window.soundManager,console.log("SoundManager available:",!!this.soundManager),this.soundManager&&(console.log("WaveformAnalyzer available:",!!this.soundManager.waveformAnalyzer),setTimeout((()=>this.logSoundManagerInfo()),2e3)),this.arrowPositionCache=new Map,this.lastSourcePositions=new Map,this.lastTargetPositions=new Map,this.lastSourceDC=new Map,this.lastTargetDC=new Map,this.lastConnectionSpeed=new Map,this.lastConnectionWeight=new Map,this.raycaster=new g,this.raycaster.params.Line.threshold=10,this.mouse=new m,this.isDraggingArrow=!1,this.isDraggingNeuron=!1,this.selectedArrow=null,this.selectedConnection=null,this.isDraggingBeforeStart=!1,this.lastTapTime=0,this.doubleTapDelay=300,this.lastTapPosition={x:0,y:0},this.tapDistanceThreshold=30,this.longPressTimeout=null,this.longPressDelay=700,this.isLongPressing=!1,this.longPressStartPosition={x:0,y:0},this.longPressThreshold=15,this.frameCount=0,this.updateInterval=1,this.needsUpdate=!0,this.lastUpdateTime=0,this.updateThreshold=1e3/120,this.arrowsCache=[],this.lastConnectionCount=0,this.cachedRect=this.renderer.domElement.getBoundingClientRect(),this.lastRectUpdate=0,this.rectUpdateInterval=1e3,this.waveformResolution=30,this.waveformHeight=5.5,this.waveformThickness=.025,this.defaultWaveform=this.generateDefaultWaveform(),this.activeOpacity=.95,this.inactiveOpacity=.25,this.fadeDuration=500,this.setupGeometry(),this.setupEventListeners(),this.validationInterval=setInterval((()=>this.validateConnections()),5e3),this.lastDoubleClickTime=0,this.isCreatingNeuron=!1,this.scrollingConnections=new Set}generateDefaultWaveform(){const e=[];for(let t=0;t<this.waveformResolution;t++)e.push(0);return e}getWaveformForNeuron(e){if(!window.soundManager||!window.soundManager.waveformAnalyzer)return this.defaultWaveform;try{const e=window.soundManager.waveformAnalyzer.getValue();let t=!1;if(e)for(let n=0;n<e.length;n++)if(Math.abs(e[n])>.01){t=!0;break}return e&&t?e:this.defaultWaveform}catch(Ze){return console.warn("Error getting waveform data:",Ze),this.defaultWaveform}}getDirectWaveform(e){if(!window.soundManager)return null;try{if("function"==typeof window.soundManager.getWaveformForNeuron)return window.soundManager.getWaveformForNeuron(e);if(window.soundManager.oscillators&&window.soundManager.oscillators[e]){const t=window.soundManager.oscillators[e];if(t&&t.waveform)return t.waveform}if(window.soundManager.waveformAnalyzer)return window.soundManager.waveformAnalyzer.getValue()}catch(Ze){console.warn(`Error getting direct waveform for neuron ${e}:`,Ze)}return null}setupGeometry(){window;this.arrowShape=new f,this.arrowShape.moveTo(.7,0),this.arrowShape.lineTo(-.35,.525),this.arrowShape.lineTo(-.35,-.525),this.arrowShape.lineTo(.5,0);this.arrowGeometry=new y(this.arrowShape,{steps:1,depth:.2,bevelEnabled:!1}),this.arrowGeometry.computeBoundingSphere(),this.arrowGeometry.computeBoundingBox(),this.arrowMaterial=new a({color:65280,transparent:!0,opacity:.005,depthTest:!0,depthWrite:!0,precision:"lowp"})}setupEventListeners(){const e=this.renderer.domElement;if(this.handlePointerDown=this.handlePointerDown.bind(this),this.handlePointerMove=this.handlePointerMove.bind(this),this.handlePointerUp=this.handlePointerUp.bind(this),this.handleWheel=this.handleWheel.bind(this),this.handleRightClick=this.handleRightClick.bind(this),window.eventManager){const t="connectionManager";window.eventManager.registerComponent(t,this),window.eventManager.addEventListener(e,"mousedown",this.handlePointerDown,{},t),window.eventManager.addThrottledEventListener(e,"mousemove",this.handlePointerMove,16,{},t),window.eventManager.addEventListener(e,"mouseup",this.handlePointerUp,{},t),window.eventManager.addThrottledEventListener(e,"wheel",this.handleWheel,50,{passive:!1},t),window.eventManager.addEventListener(e,"touchstart",this.handlePointerDown,{passive:!1},t),window.eventManager.addThrottledEventListener(e,"touchmove",this.handlePointerMove,16,{passive:!1},t),window.eventManager.addEventListener(e,"touchend",this.handlePointerUp,{},t),window.eventManager.addEventListener(e,"contextmenu",this.handleRightClick,{},t),window.eventManager.addEventListener(e,"mouseleave",(()=>this.hideWeightLabel()),{},t)}else e.addEventListener("mousedown",this.handlePointerDown),e.addEventListener("mousemove",this.handlePointerMove),e.addEventListener("mouseup",this.handlePointerUp),e.addEventListener("wheel",this.handleWheel,{passive:!1}),e.addEventListener("mouseleave",(()=>this.hideWeightLabel())),e.addEventListener("touchstart",this.handlePointerDown),e.addEventListener("touchmove",this.handlePointerMove),e.addEventListener("touchend",this.handlePointerUp),e.addEventListener("contextmenu",this.handleRightClick);e.style.touchAction="none"}updateMousePosition(e){const t=performance.now();if(t-this.lastRectUpdate>this.rectUpdateInterval&&(this.cachedRect=this.renderer.domElement.getBoundingClientRect(),this.lastRectUpdate=t),e.touches){const t=e.touches[0];this.mouse.x=(t.clientX-this.cachedRect.left)/this.cachedRect.width*2-1,this.mouse.y=-(t.clientY-this.cachedRect.top)/this.cachedRect.height*2+1}else this.mouse.x=(e.clientX-this.cachedRect.left)/this.cachedRect.width*2-1,this.mouse.y=-(e.clientY-this.cachedRect.top)/this.cachedRect.height*2+1}checkProximityConnection(e){if(!e||!e.position||!e.parent)return;(window.circles||[]).forEach((t=>{if(!t||!t.position||!t.parent)return;if(e===t)return;if(!e.neuron||!t.neuron)return;const n=e.position.distanceTo(t.position);let i=null,s=null,l=null;if(this.connections.forEach(((n,o)=>{n.source&&n.target&&(n.source===e&&n.target===t&&(i=n),n.source===t&&n.target===e&&(s=n,l=o))})),n<.5){if(i)return;if(s){const n=e=>{const t=e.material.color.clone();e.scale.clone(),ae.timeline().to(e.material.color,{r:1,g:.5,b:0,duration:.2},0).to(e.material.color,{r:t.r,g:t.g,b:t.b,duration:.2},.2)};n(e),n(t);const o=s.weight,i=s.speed,r=window.circles.indexOf(e);t.neuron.removeConnection(r),this.disposeConnection(s,l);const a=this.createConnection(e,t);if(a){const n=this.connections.get(a);if(n){n.weight=o,n.speed=i;const s=window.circles.indexOf(t);e.neuron.updateConnectionWeight(s,o),e.neuron.updateConnectionSpeed(s,i),this.updateConnection(a)}}if(window.soundManager&&"function"==typeof window.soundManager.playSmallSound)try{window.soundManager.playSmallSound(.8,.2,.2)}catch(Ze){console.warn("Error playing connection reversal sound:",Ze)}return}{const n=e=>{const t=e.material.color.clone(),n=e.scale.clone();ae.timeline().to(e.scale,{x:1.3*n.x,y:1.3*n.y,z:1.3*n.z,duration:.2,ease:"power2.out"},0).to(e.material.color,{r:0,g:1,b:0,duration:.2},0).to(e.scale,{x:n.x,y:n.y,z:n.z,duration:.2,ease:"power2.in"},.2).to(e.material.color,{r:t.r,g:t.g,b:t.b,duration:.2},.2)},i=e=>{if(!e||!e.position)return;const t=new o(.1,.1),n=new a({color:new r(0,1.5,1.5),transparent:!0,opacity:.9});for(let o=0;o<8;o++){const i=new h(t,n.clone()),s=o/8*Math.PI*2,r=.2;i.position.set(e.position.x+Math.cos(s)*r,e.position.y,e.position.z+Math.sin(s)*r),i.rotation.x=-Math.PI/2,this.scene.add(i),ae.to(i.position,{x:e.position.x+Math.cos(s)*(4*r),z:e.position.z+Math.sin(s)*(4*r),duration:1,ease:"power2.out"}),ae.to(i.material,{opacity:0,duration:1,ease:"power2.out",onComplete:()=>{this.scene.remove(i),i.material.dispose(),i.geometry.dispose()}})}};n(e),n(t),i(t),this.createConnection(e,t)}}}))}updateConnectionProperties(e,t){if(this.selectedConnection){if(void 0!==e){this.selectedConnection.weight=e;const t=window.circles.indexOf(this.selectedConnection.target);this.selectedConnection.source?.neuron&&this.selectedConnection.source.neuron.updateConnectionWeight(t,e)}if(void 0!==t){this.selectedConnection.speed=t;const e=window.circles.indexOf(this.selectedConnection.target);if(this.selectedConnection.source?.neuron&&this.selectedConnection.source.neuron.updateConnectionSpeed(e,t),this.selectedConnection.arrow){const e=this.selectedConnection.source.position,n=this.selectedConnection.target.position,o=(new p).lerpVectors(e,n,.2+.6*t);this.selectedConnection.arrow.position.copy(o),this.selectedConnection.arrow.position.y=.5}}window.settings&&(window.settings.selectedConnection=this.selectedConnection,void 0!==e&&(window.settings.selectedWeight=e),void 0!==t&&(window.settings.selectedSpeed=t));const n=Array.from(this.connections.entries()).find((([e,t])=>t===this.selectedConnection))?.[0];n&&this.updateConnection(n),this.weightLabel&&this.selectedConnection.arrow&&this.showWeightLabel(this.selectedConnection.arrow,this.selectedConnection.weight)}}shouldUpdateArrow(e,t){if(this.isDraggingArrow)return!0;if(this.isDraggingNeuron&&(window.draggedNeuron===t.source||window.draggedNeuron===t.target)){const e=t.source?.neuron?.id+"_"+t.target?.neuron?.id;return e&&this.arrowPositionCache.delete(e),!0}if(this.frameCount%60==0)return!0;const n=t.source?.neuron,o=t.target?.neuron;if(!n||!o)return!0;const i=t.source.position,s=this.lastSourcePositions.get(n.id);if(!s||s.x!==i.x||s.z!==i.z)return this.lastSourcePositions.set(n.id,i.clone()),!0;const r=t.target.position,a=this.lastTargetPositions.get(o.id);if(!a||a.x!==r.x||a.z!==r.z)return this.lastTargetPositions.set(o.id,r.clone()),!0;const l=n.dcInput||0,c=this.lastSourceDC.get(n.id);if(void 0===c||Math.abs(c-l)>.001)return this.lastSourceDC.set(n.id,l),!0;const d=o.dcInput||0,u=this.lastTargetDC.get(o.id);if(void 0===u||Math.abs(u-d)>.001)return this.lastTargetDC.set(o.id,d),!0;const h=t.weight||.5,p=t.speed||.5,g=this.lastConnectionWeight.get(e),m=this.lastConnectionSpeed.get(e);return void 0===g||Math.abs(g-h)>.001?(this.lastConnectionWeight.set(e,h),!0):(void 0===m||Math.abs(m-p)>.001)&&(this.lastConnectionSpeed.set(e,p),!0)}updateArrowsCache(){return this.connections.size===this.lastConnectionCount&&this.arrowsCache.length||(this.arrowsCache=Array.from(this.connections.values()).map((e=>e.arrow)).filter(Boolean),this.lastConnectionCount=this.connections.size),this.arrowsCache}showWeightLabel(e,t){this.weightLabel||(this.weightLabel=document.createElement("div"),this.weightLabel.style.position="absolute",this.weightLabel.style.backgroundColor="rgba(0, 0, 0, 0.3)",this.weightLabel.style.padding="5px",this.weightLabel.style.color="white",this.weightLabel.style.borderRadius="3px",this.weightLabel.style.fontSize="14px",this.weightLabel.style.fontFamily="Consolas, monospace",this.weightLabel.style.pointerEvents="none",document.body.appendChild(this.weightLabel));let n=0;this.connections.forEach((t=>{t.arrow===e&&(n=t.speed)})),this.weightLabel.innerHTML=`Weight: ${t.toFixed(1)}<br>Speed: ${n.toFixed(1)}`;const o=new p;e.getWorldPosition(o),o.project(this.camera);const i=(.5*o.x+.5)*this.renderer.domElement.clientWidth,s=(.5*-o.y+.5)*this.renderer.domElement.clientHeight;this.weightLabel.style.left=`${i}px`,this.weightLabel.style.top=s-50+"px"}hideWeightLabel(){this.weightLabel&&(document.body.removeChild(this.weightLabel),this.weightLabel=null)}handlePointerDown(e){const t="touchstart"===e.type;if(t){this.longPressTimeout&&clearTimeout(this.longPressTimeout);const t=e.touches[0];this.longPressStartPosition={x:t.clientX,y:t.clientY},this.longPressTimeout=setTimeout((()=>{this.selectedConnection&&(this.isLongPressing=!0,this.handleLongPress(this.selectedConnection))}),this.longPressDelay)}if(!t&&1===e.button)return;if(!t&&0!==e.button)return;if(this.isDraggingArrow)return;const n=t?e.touches[0]:e;if(t){const e=(new Date).getTime(),t=Math.sqrt(Math.pow(n.clientX-this.lastTapPosition.x,2)+Math.pow(n.clientY-this.lastTapPosition.y,2));e-this.lastTapTime<this.doubleTapDelay&&t<this.tapDistanceThreshold&&console.log("Double tap detected!"),this.lastTapTime=e,this.lastTapPosition={x:n.clientX,y:n.clientY}}this.updateMousePosition(e),this.raycaster.setFromCamera(this.mouse,this.camera);const o=this.raycaster.params.Line?this.raycaster.params.Line.threshold:1;this.raycaster.params.Line&&(this.raycaster.params.Line.threshold=t?8:5);const i=this.updateArrowsCache(),s=this.raycaster.intersectObjects(i,!1);if(this.raycaster.params.Line&&(this.raycaster.params.Line.threshold=o),s.length>0){e.preventDefault(),e.stopPropagation(),console.log("Arrow intersected, starting drag operation");const t=s[0].object;for(const[e,n]of this.connections.entries())if(n.arrow===t){console.log("Selected connection for arrow:",n.source?.neuron?.id,"->",n.target?.neuron?.id),this.isDraggingArrow=!0,this.isDraggingBeforeStart=!0,this.selectedArrow=t,this.selectedConnection=n,t.material.opacity=1,t.material.color.setHex(65280),this.showWeightLabel(t,n.weight),window.settings&&(window.settings.selectedConnection=n,window.settings.selectedWeight=n.weight||.5,window.settings.selectedSpeed=n.speed||.5,window.pane&&window.pane.refresh()),this.updateConnection(e),setTimeout((()=>{this.isDraggingArrow&&this.selectedConnection===n&&this.updateConnection(e)}),50);break}}}handlePointerMove(e){const t="touchmove"===e.type,n=t?e.touches[0]:e;if(this.longPressTimeout&&t){Math.sqrt(Math.pow(n.clientX-this.longPressStartPosition.x,2)+Math.pow(n.clientY-this.longPressStartPosition.y,2))>this.longPressThreshold&&(clearTimeout(this.longPressTimeout),this.longPressTimeout=null)}if(!this.isDraggingArrow||!this.selectedArrow||!this.selectedConnection){this.updateMousePosition(e),this.raycaster.setFromCamera(this.mouse,this.camera);const n=this.raycaster.params.Line?this.raycaster.params.Line.threshold:1;this.raycaster.params.Line&&(this.raycaster.params.Line.threshold=t?8:5);const o=this.updateArrowsCache(),i=this.raycaster.intersectObjects(o,!1);if(this.raycaster.params.Line&&(this.raycaster.params.Line.threshold=n),i.length>0){const e=i[0].object,t=Array.from(this.connections.values()).find((t=>t.arrow===e));t&&this.showWeightLabel(e,t.weight)}else this.hideWeightLabel();return}if(this.isDraggingArrow&&(e.preventDefault(),e.stopPropagation()),!this.selectedArrow||!this.selectedArrow.material)return console.warn("Arrow lost during drag operation"),void(this.isDraggingArrow=!1);this.selectedArrow.material.opacity=1,this.selectedArrow.material.color.setHex(65280);const o=this.renderer.domElement.getBoundingClientRect(),i=n.clientX-o.left,s=n.clientY-o.top;if(!this.selectedConnection.source||!this.selectedConnection.target)return console.warn("Connection endpoints lost during dragging"),void(this.isDraggingArrow=!1);const r=this.selectedConnection.source.position.clone(),a=this.selectedConnection.target.position.clone();r.project(this.camera),a.project(this.camera);const l={x:(r.x+1)*o.width/2,y:(1-r.y)*o.height/2},c={x:(a.x+1)*o.width/2,y:(1-a.y)*o.height/2},d=this.calculateDragPosition(i,s,l,c),u=new p;u.copy(this.selectedConnection.source.position);const h=(new p).subVectors(this.selectedConnection.target.position,this.selectedConnection.source.position).normalize(),g=this.selectedConnection.source.position.distanceTo(this.selectedConnection.target.position);u.add(h.multiplyScalar(d.percentage*g)),u.y=.5,this.selectedArrow.position.copy(u),this.selectedConnection.speed=d.normalizedSpeed,window.settings&&(window.settings.selectedSpeed=d.normalizedSpeed),this.needsUpdate=!0;const m=window.circles.indexOf(this.selectedConnection.target);this.selectedConnection.source?.neuron&&this.selectedConnection.source.neuron.updateConnectionSpeed(m,d.normalizedSpeed),this.showWeightLabel(this.selectedArrow,this.selectedConnection.weight);const w=Array.from(this.connections.entries()).find((([e,t])=>t===this.selectedConnection))?.[0];w&&this.updateConnection(w)}handlePointerUp(e){if(this.longPressTimeout&&(clearTimeout(this.longPressTimeout),this.longPressTimeout=null),this.isDraggingArrow){if(e.preventDefault(),e.stopPropagation(),this.selectedConnection){const e=this.selectedConnection.speed;console.log("Arrow drag ended, final speed:",e);const t=window.circles.indexOf(this.selectedConnection.target);this.selectedConnection.source?.neuron&&this.selectedConnection.source.neuron.updateConnectionSpeed(t,e),window.settings&&(window.settings.selectedConnection=this.selectedConnection,window.settings.selectedWeight=this.selectedConnection.weight,window.settings.selectedSpeed=e,window.pane&&window.pane.refresh());const n=Array.from(this.connections.entries()).find((([e,t])=>t===this.selectedConnection))?.[0];n&&this.updateConnection(n)}this.selectedConnection&&this.selectedArrow&&(console.log("Keeping arrow visible after drag"),this.selectedArrow.material.color.setHex(65280),this.selectedArrow.material.opacity=1),this.isDraggingArrow=!1,this.isDraggingBeforeStart=!1,this.hideWeightLabel()}}handleWheel(e){if(this.isDraggingArrow)return;e.preventDefault(),this.updateMousePosition(e),this.raycaster.setFromCamera(this.mouse,this.camera);const t=this.raycaster.params.Line?this.raycaster.params.Line.threshold:1;this.raycaster.params.Line&&(this.raycaster.params.Line.threshold=5);const n=this.updateArrowsCache(),o=this.raycaster.intersectObjects(n);if(this.raycaster.params.Line&&(this.raycaster.params.Line.threshold=t),o.length>0){const t=o[0].object;let n=null;this.connections.forEach(((o,i)=>{if(o.arrow===t){this.selectConnection(o),n=i,o.source.neuron&&(o.source.neuron.isScrolling=!0,o.source.neuron.scrollTimeout&&clearTimeout(o.source.neuron.scrollTimeout)),this.scrollingConnections.add(o),o.arrow.material.opacity=1;const s=e.deltaY>0?-.1:.1,r=o.weight??.5;let a=Math.max(0,Math.min(1,r+s));o.weight=a,window.settings&&(window.settings.selectedWeight=a,window.pane&&window.pane.refresh());const l=window.circles.indexOf(o.target);o.source.neuron.updateConnectionWeight(l,a),this.updateConnection(i),this.showWeightLabel(t,a),o.source.neuron&&(o.source.neuron.scrollTimeout=setTimeout((()=>{o.source.neuron&&(o.source.neuron.isScrolling=!1),this.scrollingConnections.delete(o)}),500))}})),n&&setTimeout((()=>{this.updateConnection(n)}),50)}}handleDoubleClick(e){if(e.preventDefault(),console.log("Double click event received"),this.isCreatingNeuron)return void console.log("Already creating a neuron, ignoring additional click");this.isCreatingNeuron=!0,this.updateMousePosition(e),this.raycaster.setFromCamera(this.mouse,this.camera);const t=new w(new p(0,1,0),0),n=new p;this.raycaster.ray.intersectPlane(t,n);if(0===this.raycaster.intersectObjects(window.circles).length){console.log("Creating new neuron at",n.x,n.z);const e=window.settings.addNeuron(n);e&&(e.position.copy(n),e.position.y=.1,e.touchArea&&(e.touchArea.position.copy(e.position),e.touchArea.position.y=.1),console.log("Created neuron:",e.neuron.id))}setTimeout((()=>{this.isCreatingNeuron=!1}),300)}calculateDragPosition(e,t,n,o){const i=o.x-n.x,s=o.y-n.y,r=e-n.x,a=t-n.y,l=Math.sqrt(i*i+s*s);let c=(r*i+a*s)/(l*l);const d=this.selectedConnection.source.neuron?this.selectedConnection.source.neuron.baseScale+.2*this.selectedConnection.source.neuron.dcInput:.2,u=1-(this.selectedConnection.target.neuron?this.selectedConnection.target.neuron.baseScale+.2*this.selectedConnection.target.neuron.dcInput:.2);c=Math.max(d,Math.min(u,c));const h=(c-d)/(u-d);return{percentage:c,normalizedSpeed:Math.max(0,Math.min(1,h))}}updateAllConnections(){const e=performance.now(),t=e-this.lastUpdateTime;if(this.isDraggingArrow||this.needsUpdate||t>this.updateThreshold){this.lastUpdateTime=e,this.needsUpdate=!1,this.connections.size!==this.lastConnectionCount&&(this.arrowsCache=this.updateArrowsCache(),this.lastConnectionCount=this.connections.size);let t=null,n=null;for(const[e,o]of this.connections.entries())try{"03"===o.source?.neuron?.id&&"01"===o.target?.neuron?.id&&(t=o,n=e);this.shouldUpdateArrow(e,o)&&this.updateConnection(e),this.frameCount%1==0&&this.updateConnectionWaveform(o)}catch(Ze){console.warn("Error updating connection:",Ze)}if(t&&n&&t.arrow&&t.arrow.material.opacity<.2){console.log("Fixing problematic connection (neuron 03 to neuron 01)"),t.arrow.material.opacity=.4;const e=t.source?.neuron?.id+"_"+t.target?.neuron?.id;e&&(this.arrowPositionCache.delete(e),this.updateConnection(n))}this.frameCount++,this.isDraggingNeuron&&!window.draggedNeuron&&(this.isDraggingNeuron=!1)}}updateConnectionWaveform(e){if(!e||!e.waveformLine)return;const t=e.source.position,n=e.target.position;let o=!1;if(e.source.neuron){const t=performance.now();o=e.source.neuron.isFiring||t-(e.source.neuron.lastFiredTime||0)<200,e.isActive=o}const i=n.x-t.x,s=n.z-t.z,a=Math.sqrt(i*i+s*s),l=new r(65280),c=new r(8421504),d=Math.min(1,Math.max(0,(a-2)/8));e.waveformLine.material.color.lerpColors(l,c,d),e.lastActiveTime||(e.lastActiveTime=0),o&&(e.lastActiveTime=performance.now());const u=performance.now()-e.lastActiveTime,h=o?1:Math.max(0,1-u/this.fadeDuration);e.fadeFactor=h;let p=[];const g=e.source.neuron?e.source.neuron.id:null,m=e.speed||.5,w=m>=.99;if(h>.001){const t=this.getDirectWaveform(g);if(t&&t.length>0){const n=Math.floor(t.length/this.waveformResolution);for(let o=0;o<this.waveformResolution;o++){const i=o*n;if(i<t.length){const n=this.waveformHeight*h*(e.weight||.5);p.push(t[i]*n)}else p.push(0)}}else if(window.soundManager&&window.soundManager.waveformAnalyzer)try{const t=window.soundManager.waveformAnalyzer.getValue();if(t&&t.length>0){const n=Math.floor(t.length/this.waveformResolution);for(let o=0;o<this.waveformResolution;o++){const i=o*n;if(i<t.length){const n=this.waveformHeight*h*(e.weight||.5);p.push(t[i]*n)}else p.push(0)}}}catch(Ze){console.warn("Error getting waveform data:",Ze),p=[]}}if(0===p.length&&h>.01){const t=performance.now()/1e3*(w?12:2+6*m)%(2*Math.PI),n=e.weight||.5,o=h*(.5+1.5*n);for(let e=0;e<this.waveformResolution;e++){const i=e/(this.waveformResolution-1),s=w?4+4*n:2+3*n,r=t-i*Math.PI*2,a=Math.sin(i*s*Math.PI*2+r),l=.5+.5*Math.sin((i-.5)*Math.PI);p.push(a*o*(.8+.2*l))}}else if(0===p.length)for(let r=0;r<this.waveformResolution;r++)p.push(0);const f=n.x-t.x,y=n.z-t.z,b=Math.sqrt(f*f+y*y),C=-(y/b),S=f/b;if(e.waveformLine.userData.points&&e.waveformLine.userData.path){const n=e.waveformLine.userData.points;for(let e=0;e<this.waveformResolution;e++){const o=e/(this.waveformResolution-1),i=t.x+f*o,s=t.z+y*o,r=p[e];n[e].set(i+C*r,-10,s+S*r)}e.waveformLine.userData.path.points=n;const o=new v(e.waveformLine.userData.path,this.waveformResolution,this.waveformThickness*(w?1.5:1),8,!1);e.waveformLine.geometry.dispose(),e.waveformLine.geometry=o}else if(console.warn("Using legacy line geometry update - tube geometry not found"),e.waveformLine.geometry.attributes&&e.waveformLine.geometry.attributes.position){const n=e.waveformLine.geometry.attributes.position.array;for(let e=0;e<this.waveformResolution;e++){const o=e/(this.waveformResolution-1),i=t.x+f*o,s=t.z+y*o,r=p[e],a=3*e;n[a]=i+C*r,n[a+1]=.5,n[a+2]=s+S*r}e.waveformLine.geometry.attributes.position.needsUpdate=!0}if(e.arrow&&e.arrow.material&&e.arrow.material.color.copy(e.waveformLine.material.color),e.waveformLine&&e.waveformLine.material){if(this.scrollingConnections.has(e))e.waveformLine.material.opacity=1,e.arrow&&e.arrow.material&&(e.arrow.material.opacity=1);else{const t=this.inactiveOpacity,n=t+(this.activeOpacity-t)*h*(e.weight||.5)*1.2;e.waveformLine.material.opacity=n,e.arrow&&e.arrow.material&&(e.arrow.material.opacity=n)}}h>0&&(this.needsUpdate=!0)}updateConnection(e){const t=this.connections.get(e);if(!t)return;const{source:n,target:o,line:i,arrow:s,waveformLine:a}=t;if(!(n&&o&&i&&s))return void console.warn("Connection has missing elements:",!!n,!!o,!!i,!!s);const l=i.geometry.attributes.position.array;l[0]=n.position.x,l[1]=-10,l[2]=n.position.z,l[3]=o.position.x,l[4]=-10,l[5]=o.position.z,i.geometry.attributes.position.needsUpdate=!0;const c=(new p).subVectors(o.position,n.position).normalize(),d=n.neuron?n.neuron.baseScale+.2*n.neuron.dcInput:.2,u=1-(o.neuron?o.neuron.baseScale+.2*o.neuron.dcInput:.2),h=t.weight??.1,g=.1,m=t.speed??.5,w=m>=.99;if(this.isDraggingArrow&&s===this.selectedArrow)s.material.opacity=1,s.material.color.setHex(65280),s.scale.setScalar(.3),a&&(a.material.opacity=1,a.material.color.setHex(65535));else{n.neuron&&n.neuron.isFiring;let e=!1;if(window.harmonicSystem&&n.neuron&&o.neuron){const t=n.position.distanceTo(o.position);if(window.harmonicSystem.isInHarmonicProximity(t)){const t=window.harmonicSystem.getHarmonicRelationship(n.neuron.id,o.neuron.id);if(t){const n=new r(65535),o=new r(65535),i=Math.min(1,3*t.strength);s.material.color.lerpColors(o,n,i),e=!0}}}e||(w?s.material.color.setHex(4251903):s.material.color.setHex(8421504));const t=w?Math.max(.5,g+.9*h):Math.max(.3,g+.9*h);s.material.opacity=t;const i=w?.2:.15,a=i+h*((w?.45:.35)-i);s.scale.setScalar(a)}if(!this.isDraggingArrow||s!==this.selectedArrow){const e=t.source?.neuron?.id+"_"+t.target?.neuron?.id;if(!this.arrowPositionCache.has(e)||this.frameCount%60==0||this.isDraggingNeuron||window.draggedNeuron===t.source||window.draggedNeuron===t.target){let t;if(w)t=.75;else{t=d+Math.round(1e3*m)/1e3*(u-d)}const i=new p;i.lerpVectors(n.position,o.position,t),i.x=Math.round(1e3*i.x)/1e3,i.z=Math.round(1e3*i.z)/1e3,i.y=.5,this.arrowPositionCache.set(e,i.clone()),s.position.copy(i)}else s.position.copy(this.arrowPositionCache.get(e))}const f=Math.atan2(c.z,c.x);s.rotation.set(-Math.PI/2,0,-f),i.material.opacity=0}createConnection(t,n){if(!(t&&t.position&&n&&n.position))return console.warn("Invalid neurons for connection"),null;const i=.3+.5*Math.random(),s=new b,l=new C(new e,new a({color:11184810,transparent:!0,opacity:0,depthTest:!0,depthWrite:!0})),c=new Float32Array(6);l.geometry.setAttribute("position",new S(c,3));const d=[];for(let e=0;e<this.waveformResolution;e++){const t=e/(this.waveformResolution-1);d.push(new p(t,0,0))}const u=new M(d),g=new v(u,this.waveformResolution,this.waveformThickness,8,!1),m=new h(g,new a({color:8421504,transparent:!0,opacity:0,depthTest:!0,depthWrite:!0}));m.userData.path=u,m.userData.points=d;const w=new h(this.arrowGeometry,this.arrowMaterial.clone());w.userData.isConnectionArrow=!0,w.matrixAutoUpdate=!0,w.raycast=h.prototype.raycast,w.material.opacity=0,w.material.color.setHex(8421504),w.position.y=.5,s.add(l),s.add(m),s.add(w);const f={source:t,target:n,line:l,waveformLine:m,arrow:w,weight:.4,speed:i};this.connections.set(s,f),this.updateConnectionWaveform(f),this.scene.add(s);const y=window.circles.indexOf(n);if(console.log(`[ConnectionManager] Creating connection from ${t?.neuron?.id} to ${n?.neuron?.id}`),console.log(`[ConnectionManager] Checking for centralized system: ${!!window.neuralSystem}`),window.neuralSystem){const e=t.neuronId||(t.neuron?t.neuron.id:null),o=n.neuronId||(n.neuron?n.neuron.id:null);if(console.log(`[ConnectionManager] Using centralized system - sourceId: ${e}, targetId: ${o}`),null!==e&&null!==o){const i=this.ensureNeuronExists(e,t),s=this.ensureNeuronExists(o,n);i&&s?(window.neuralSystem.adapter.createConnection(e,o,f.weight,f.speed),console.log("[ConnectionManager] Connection created via centralized system")):(console.warn(`[ConnectionManager] Failed to ensure neurons exist: source=${i}, target=${s}`),t.neuron.addConnection(y,f.weight,f.speed))}else console.warn("[ConnectionManager] Cannot use centralized system - invalid IDs"),t.neuron.addConnection(y,f.weight,f.speed)}else console.log("[ConnectionManager] Using legacy connection method"),t.neuron.addConnection(y,f.weight,f.speed);const x=.1+.9*(f.weight??.5);ae.to(w.material,{opacity:x,duration:.3,ease:"power1.inOut"}),ae.to(m.material,{opacity:x,duration:.3,ease:"power1.inOut"});const T=e=>{if(!e||!e.material)return;ae.killTweensOf(e.scale),ae.killTweensOf(e.material.color);const t=e.material.color.clone(),n=e.scale.clone();ae.timeline().to(e.scale,{x:1.5*n.x,y:1.5*n.y,z:1.5*n.z,duration:.25,ease:"power3.out"},0).to(e.material.color,{r:0,g:1.5,b:1.5,duration:.25},0).to(e.scale,{x:n.x,y:n.y,z:n.z,duration:.4,ease:"elastic.out(1.1, 0.5)"},.25).to(e.material.color,{r:t.r,g:t.g,b:t.b,duration:.4},.25)};return T(t),T(n),(e=>{if(!e||!e.position)return;const t=new o(.1,.1),n=new a({color:new r(0,1.5,1.5),transparent:!0,opacity:.9});for(let o=0;o<8;o++){const i=new h(t,n.clone()),s=o/8*Math.PI*2,r=.2;i.position.set(e.position.x+Math.cos(s)*r,e.position.y,e.position.z+Math.sin(s)*r),i.rotation.x=-Math.PI/2,this.scene.add(i),ae.to(i.position,{x:e.position.x+Math.cos(s)*(4*r),z:e.position.z+Math.sin(s)*(4*r),duration:1,ease:"power2.out"}),ae.to(i.material,{opacity:0,duration:1,ease:"power2.out",onComplete:()=>{this.scene.remove(i),i.material.dispose(),i.geometry.dispose()}})}})(n),s}validateConnections(){for(const[e,t]of this.connections)t.arrow&&t.arrow.parent||(console.warn("Invalid connection found:",t),this.connections.delete(e),this.lastConnectionCount=this.connections.size)}disposeConnection(e,t){let n=null,o=null;if(e.source&&e.source.neuron&&e.target){n=e.source.neuron.id;const t=window.circles.indexOf(e.target);if(-1!==t){e.target.neuron&&(o=e.target.neuron.id),e.source.neuron.removeConnection(t);const i=`${n}_${o}`;window.Neuron&&window.Neuron.pendingChargeDeliveries&&window.Neuron.pendingChargeDeliveries.has(i)&&(console.log(`Canceling pending charge delivery timeout for ${i}`),clearTimeout(window.Neuron.pendingChargeDeliveries.get(i)),window.Neuron.pendingChargeDeliveries.delete(i))}}if(window.Neuron&&"function"==typeof window.Neuron.cleanupConnectionParticles){const e=window.Neuron.cleanupConnectionParticles(n,o);console.log(`Cleaned up ${e||0} particles for connection from ${n} to ${o}`)}if(window.Neuron&&window.Neuron.allParticles&&window.Neuron.allParticles.length>0){console.log(`Checking ${window.Neuron.allParticles.length} particles for manual cleanup`);const e=[...window.Neuron.allParticles];let t=0;e.forEach((e=>{if(e&&e.parent&&e.sourceNeuronId===n&&e.targetNeuronId===o){e.timeoutId&&clearTimeout(e.timeoutId),e.parent.remove(e),e.material&&e.material.dispose(),e.geometry&&e.geometry.dispose();const n=window.Neuron.allParticles.indexOf(e);-1!==n&&(window.Neuron.allParticles.splice(n,1),t++)}})),t>0&&console.log(`Manually removed ${t} additional particles for connection ${n} -> ${o}`)}e.line&&(e.line.geometry.dispose(),e.line.material.dispose()),e.waveformLine&&(e.waveformLine.geometry.dispose(),e.waveformLine.material.dispose()),e.arrow&&(e.arrow.geometry.dispose(),e.arrow.material.dispose()),this.scene.remove(t),this.connections.delete(t),setTimeout((()=>{window.Neuron&&"function"==typeof window.Neuron.cleanupOrphanedParticles&&window.Neuron.cleanupOrphanedParticles()}),100)}dispose(){const e="connectionManager";if(window.eventManager)window.eventManager.cleanupComponent(e);else{const e=this.renderer.domElement;e.removeEventListener("mousedown",this.handlePointerDown),e.removeEventListener("mousemove",this.handlePointerMove),e.removeEventListener("mouseup",this.handlePointerUp),e.removeEventListener("wheel",this.handleWheel),e.removeEventListener("mouseleave",(()=>this.hideWeightLabel())),e.removeEventListener("touchstart",this.handlePointerDown),e.removeEventListener("touchmove",this.handlePointerMove),e.removeEventListener("touchend",this.handlePointerUp),e.removeEventListener("contextmenu",this.handleRightClick)}window.timerManager?window.timerManager.clearGroup(e):(this.longPressTimeout&&(clearTimeout(this.longPressTimeout),this.longPressTimeout=null),this.validationInterval&&(clearInterval(this.validationInterval),this.validationInterval=null)),this.hideWeightLabel(),window.resourceManager?window.resourceManager.cleanupOwner(e):(this.arrowGeometry&&this.arrowGeometry.dispose(),this.arrowMaterial&&this.arrowMaterial.dispose(),this.connections.forEach(this.disposeConnection.bind(this)))}selectConnection(e){if(this.selectedConnection&&this.selectedConnection!==e&&(this.selectedConnection.arrow.material.color.setHex(65535),this.selectedConnection.arrow.scale.setScalar(.25)),this.selectedConnection=e,e){this.selectedArrow=e.arrow,window.settings&&(window.settings.selectedConnection=e,window.settings.selectedWeight!==e.weight&&(window.settings.selectedWeight=e.weight||.5),window.settings.selectedSpeed!==e.speed&&(window.settings.selectedSpeed=e.speed||.5),window.pane&&window.pane.refresh()),e.arrow.material.color.setHex(65280),e.arrow.scale.setScalar(.3),e.arrow.material.opacity=1;const t=Array.from(this.connections.entries()).find((([t,n])=>n===e))?.[0];t&&this.updateConnection(t)}}deselectConnection(){this.selectedConnection&&(this.selectedConnection.arrow.material.color.setHex(65535),this.selectedConnection.arrow.scale.setScalar(.25),this.selectedConnection=null,this.selectedArrow=null,window.settings&&(window.settings.selectedConnection=null,window.settings.selectedWeight=.5,window.settings.selectedSpeed=.5,window.pane&&window.pane.refresh()))}handleRightClick(e){e.preventDefault(),this.updateMousePosition(e),this.raycaster.setFromCamera(this.mouse,this.camera);const t=this.raycaster.params.Line?this.raycaster.params.Line.threshold:1;this.raycaster.params.Line&&(this.raycaster.params.Line.threshold=15);const n=[],o=[];this.connections.forEach((e=>{e.arrow&&n.push(e.arrow),e.waveformLine&&o.push(e.waveformLine)}));let i=this.raycaster.intersectObjects(n,!1);if(0===i.length&&(i=this.raycaster.intersectObjects(o,!1)),this.raycaster.params.Line&&(this.raycaster.params.Line.threshold=t),i.length>0){let e=null,t=null;const n=i[0].object;for(const[o,i]of this.connections.entries())if(i.arrow===n||i.waveformLine===n){e=i,t=o;break}if(e&&t){const n=e.source,o=e.target;if(n&&o){const e=e=>{if(!e||!e.material)return;const t=e.material.color.clone();ae.timeline().to(e.material.color,{r:1,g:0,b:0,duration:.2}).to(e.material.color,{r:t.r,g:t.g,b:t.b,duration:.2})};e(n),e(o)}if(e.arrow&&e.arrow.material&&(e.arrow.material.color.set(16711680),e.arrow.material.opacity=1),e.waveformLine&&e.waveformLine.material&&(e.waveformLine.material.color.set(16711680),e.waveformLine.material.opacity=1),window.soundManager&&"function"==typeof window.soundManager.playSmallSound)try{window.soundManager.playSmallSound(.2,.8,.5)}catch(Ze){console.warn("Error playing connection deletion sound:",Ze)}setTimeout((()=>{e&&t&&(this.selectedConnection===e&&(this.selectedConnection=null,this.selectedArrow=null,window.settings&&(window.settings.selectedConnection=null,window.settings.selectedWeight=.5,window.settings.selectedSpeed=.5,window.pane&&window.pane.refresh())),this.disposeConnection(e,t),this.needsUpdate=!0)}),50)}}}handleLongPress(e){if(!e||!e.source||!e.target)return;let t=null;for(const[s,r]of this.connections.entries())if(r===e){t=s;break}if(!t)return;this.longPressTimeout=null;const n=e.source,o=e.target,i=e=>{if(!e||!e.material)return;const t=e.material.color.clone(),n=e.scale.clone();ae.timeline().to(e.scale,{x:1.3*n.x,y:1.3*n.y,z:1.3*n.z,duration:.2,ease:"power2.out"},0).to(e.material.color,{r:1,g:0,b:0,duration:.2},0).to(e.scale,{x:n.x,y:n.y,z:n.z,duration:.2,ease:"power2.in"},.2).to(e.material.color,{r:t.r,g:t.g,b:t.b,duration:.2},.2)};if(i(n),i(o),window.soundManager&&"function"==typeof window.soundManager.playSmallSound)try{window.soundManager.playSmallSound(.2,.8,.5)}catch(Ze){console.warn("Error playing connection deletion sound:",Ze)}this.disposeConnection(e,t),this.selectedConnection===e&&(this.selectedConnection=null,this.selectedArrow=null,window.settings&&(window.settings.selectedConnection=null,window.settings.selectedWeight=.5,window.settings.selectedSpeed=.5,window.pane&&window.pane.refresh()))}logSoundManagerInfo(){if(window.soundManager){if(console.log("SoundManager inspection:"),window.soundManager.oscillators){console.log("Oscillators available:",Object.keys(window.soundManager.oscillators).length);const e=Object.keys(window.soundManager.oscillators)[0];if(e){const t=window.soundManager.oscillators[e];console.log("Sample oscillator structure:",Object.keys(t)),console.log("Has waveform property:",!!t.waveform)}}else console.log("No oscillators property found");if(window.soundManager.waveformAnalyzer){console.log("WaveformAnalyzer available"),console.log("Analyzer methods:",Object.keys(window.soundManager.waveformAnalyzer));try{const e=window.soundManager.waveformAnalyzer.getValue();console.log("Sample waveform data:",e?`Length: ${e.length}`:"No data"),e&&e.length>0&&console.log("First few values:",e.slice(0,5))}catch(Ze){console.log("Error getting analyzer data:",Ze)}}console.log("Has getWaveformForNeuron method:","function"==typeof window.soundManager.getWaveformForNeuron)}else console.log("No soundManager available")}setWaveformThickness(e){return e<.1&&(e=.1),e>2&&(e=2),this.waveformThickness=e,this.connections.forEach(((e,t)=>{if(e.waveformLine&&e.waveformLine.userData&&e.waveformLine.userData.path){const t=new v(e.waveformLine.userData.path,this.waveformResolution,this.waveformThickness,8,!1);e.waveformLine.geometry.dispose(),e.waveformLine.geometry=t}})),console.log(`Waveform thickness set to: ${e}`),e}forceUpdateConnectionsForNeuron(e){if(!e||!e.neuron)return;this.isDraggingNeuron=!0;const t=new Set;this.connections.forEach(((n,o)=>{if(n.source===e||n.target===e){const e=n.source?.neuron?.id+"_"+n.target?.neuron?.id;e&&this.arrowPositionCache.delete(e),n.source?.neuron&&this.lastSourcePositions.delete(n.source.neuron.id),n.target?.neuron&&this.lastTargetPositions.delete(n.target.neuron.id),t.has(o)||(this.updateConnection(o),t.add(o))}})),this.frameCount%2!=0&&this.connections.forEach((t=>{t.source!==e&&t.target!==e||this.updateConnectionWaveform(t)})),this.needsUpdate=!0}debugNeuronFiring(){const e=window.circles||[];console.log(`----- Neuron Firing States (${e.length} neurons) -----`);let t=0;e.forEach(((e,n)=>{if(!e.neuron)return;e.neuron.isFiring&&(t++,console.log(`Neuron ${e.neuron.id}: FIRING`))})),console.log(`Total firing neurons: ${t}/${e.length}`),console.log(`----- Connection Status (${this.connections.size} connections) -----`);let n=0;this.connections.forEach((e=>{const t=e.source?.neuron,o=t?t.id:"unknown";if(!!t&&t.isFiring){n++;const t=e.target?.neuron,i=t?t.id:"unknown";console.log(`Connection ${o} -> ${i}: ACTIVE`)}})),console.log(`Active connections: ${n}/${this.connections.size}`)}ensureNeuronExists(e,t){if(!window.neuralSystem||!e)return!1;if(window.neuralEngine.getNeuron(e))return!0;console.log(`[ConnectionManager] Creating missing neuron ${e} in centralized system`);const n=t.neuron||{};return window.neuralEngine.createNeuron({id:e,mesh:t,position:{x:t.position.x,y:t.position.y,z:t.position.z},baseScale:n.baseScale||.2,maxScale:n.maxScale||1,originalColor:n.originalColor||255,firingColor:n.firingColor||16776960,presetColor:n.presetColor||null,presetName:n.presetName||null,dcInput:n.dcInput||0}),window.neuronAdapter&&window.neuronAdapter.neuronMeshes.set(e,t),t.neuronId=e,!0}}(He,We,Ve),Je=new class{constructor(e,t,n){this.camera=e,this.renderer=t,this.connectionManager=n,this.raycaster=new g,this.mouse=new m,this.draggedNeuron=null,this.isDragging=!1,this.isRightClickDragging=!1,this.dragPlane=new w(new p(0,1,0),0),this.dragOffset=new p,this.lastPosition=new p,this.velocity=new p,this.lastMousePosition=new m,this.canvasDragVelocity=new p,this.maxDragDistance=5,this.initialTouchPosition=new p,this.touchTargetNeuron=null,this.touchSelectionConfirmed=!1,this.neuronSelectionThreshold=3.5,this.isMobile="ontouchstart"in window||navigator.maxTouchPoints>0,this.lastTouchDistance=0,this.isMultiTouch=!1,this.lastTapTime=0,this.doubleTapDelay=300,this.lastTapPosition={x:0,y:0},this.tapDistanceThreshold=30,this.debugTouchAreas=!1,this.debugTouchAreas&&this.isMobile&&setTimeout((()=>{window.circles.forEach((e=>{e.touchArea&&(e.touchArea.material.opacity=.2,e.touchArea.visible=!0)}))}),1e3),this.ui={synthFolder:null,neuronLabel:null,refreshFunctions:{}},setTimeout((()=>this.initializeUI()),500),this.isMobile&&(this.selectedConnection=null,this.mobileControls=null,this.createMobileControls()),this.lastClickTime=0,this.doubleClickDelay=300,this.lastClickPosition={x:0,y:0},this.clickDistanceThreshold=30,this.canvasDragSpeed=.01,this.vector3Pool=[];for(let o=0;o<10;o++)this.vector3Pool.push(new p);this.state={current:"idle",context:{}},this.onMouseDownBound=this.onMouseDown.bind(this),this.onMouseMoveBound=this.onMouseMove.bind(this),this.onMouseUpBound=this.onMouseUp.bind(this),this.onMouseLeaveBound=this.onMouseLeave.bind(this),this.onTouchStartBound=this.onTouchStart.bind(this),this.onTouchMoveBound=this.onTouchMove.bind(this),this.onTouchEndBound=this.onTouchEnd.bind(this),this.onWheelBound=this.onWheel.bind(this),this.onDoubleClickBound=this.onDoubleClick.bind(this),this.handleRightClickBound=this.handleRightClick.bind(this),t.domElement.addEventListener("mousedown",this.onMouseDownBound,!1),t.domElement.addEventListener("mousemove",this.onMouseMoveBound,!1),t.domElement.addEventListener("mouseup",this.onMouseUpBound,!1),t.domElement.addEventListener("mouseleave",this.onMouseLeaveBound,!1),this.isMobile?(t.domElement.addEventListener("touchstart",this.onTouchStartBound,{passive:!1}),t.domElement.addEventListener("touchmove",this.onTouchMoveBound,{passive:!1}),t.domElement.addEventListener("touchend",this.onTouchEndBound,{passive:!1}),t.domElement.addEventListener("contextmenu",(e=>e.preventDefault()))):(t.domElement.addEventListener("wheel",this.onWheelBound,{passive:!1}),t.domElement.addEventListener("dblclick",this.onDoubleClickBound)),this.lastAudioTime=0,t.domElement.addEventListener("contextmenu",this.handleRightClickBound)}createMobileControls(){this.mobileControls=document.createElement("div"),this.mobileControls.style.position="fixed",this.mobileControls.style.bottom="20px",this.mobileControls.style.left="50%",this.mobileControls.style.transform="translateX(-50%)",this.mobileControls.style.backgroundColor="rgba(0, 0, 0, 0.8)",this.mobileControls.style.padding="15px",this.mobileControls.style.borderRadius="10px",this.mobileControls.style.display="none",this.mobileControls.style.zIndex="1000",this.mobileControls.style.width="80%",this.mobileControls.style.maxWidth="300px";const e=document.createElement("div");e.textContent="Synapse Control",e.style.color="white",e.style.textAlign="center",e.style.marginBottom="15px",e.style.fontSize="18px",this.mobileControls.appendChild(e);const t=this.createSliderContainer("Weight");this.mobileControls.appendChild(t);const n=this.createSliderContainer("Speed");this.mobileControls.appendChild(n),document.body.appendChild(this.mobileControls)}createSliderContainer(e){const t=document.createElement("div");t.style.marginBottom="20px";const n=document.createElement("div");n.style.color="white",n.style.marginBottom="10px",n.style.display="flex",n.style.justifyContent="space-between",n.style.alignItems="center";const o=document.createElement("span");o.textContent=e,o.style.fontSize="16px",n.appendChild(o);const i=document.createElement("span");i.textContent="0.50",i.style.backgroundColor="rgba(255, 255, 255, 0.1)",i.style.padding="4px 8px",i.style.borderRadius="4px",i.style.fontSize="14px",n.appendChild(i);const s=document.createElement("input");s.type="range",s.min="0",s.max="1",s.step="0.01",s.value="0.5",s.style.width="100%",s.style.height="20px",s.style.webkitAppearance="none",s.style.appearance="none",s.style.background="rgba(255, 255, 255, 0.1)",s.style.outline="none",s.style.borderRadius="10px",s.style.transition="background 0.2s";if(!document.getElementById("sliderStyles")){const e=document.createElement("style");e.id="sliderStyles",e.textContent='\n            input[type="range"]::-webkit-slider-thumb {\n                -webkit-appearance: none;\n                appearance: none;\n                width: 24px;\n                height: 24px;\n                background: #4CAF50;\n                border-radius: 50%;\n                cursor: pointer;\n                transition: background 0.2s;\n            }\n            input[type="range"]::-webkit-slider-thumb:hover {\n                background: #45a049;\n            }\n            input[type="range"]::-moz-range-thumb {\n                width: 24px;\n                height: 24px;\n                background: #4CAF50;\n                border-radius: 50%;\n                cursor: pointer;\n                border: none;\n                transition: background 0.2s;\n            }\n            input[type="range"]::-moz-range-thumb:hover {\n                background: #45a049;\n            }\n        ',document.head.appendChild(e)}return s.addEventListener("input",(t=>{i.textContent=parseFloat(t.target.value).toFixed(2),"Weight"===e?this.updateConnectionWeight(t.target.value):this.updateConnectionSpeed(t.target.value)})),t.appendChild(n),t.appendChild(s),t}updateMousePosition(e){const t=this.renderer.domElement.getBoundingClientRect();this.mouse.x=(e.clientX-t.left)/t.width*2-1,this.mouse.y=-(e.clientY-t.top)/t.height*2+1}updateTouchPosition(e){if(!e)return;const t=this.renderer.domElement.getBoundingClientRect();if("ontouchstart"in window||navigator.maxTouchPoints>0){const n=e.clientX,o=e.clientY;this.mouse.x=(n-t.left)/t.width*2-1,this.mouse.y=-(o-t.top)/t.height*2+1}else this.mouse.x=(e.clientX-t.left)/t.width*2-1,this.mouse.y=-(e.clientY-t.top)/t.height*2+1}getTouchDistance(e){if(!e||e.length<2)return 0;const t=e[0].clientX-e[1].clientX,n=e[0].clientY-e[1].clientY;return Math.sqrt(t*t+n*n)}getIntersectionPoint(e){this.raycaster.setFromCamera(e,this.camera);const t=new p;return this.raycaster.ray.intersectPlane(this.dragPlane,t),t}updateConnectionWeight(e){if(!this.isMobile||!this.selectedConnection)return;const t=parseFloat(e);this.selectedConnection.weight=t;const n=window.circles.indexOf(this.selectedConnection.target);this.selectedConnection.source?.neuron&&this.selectedConnection.source.neuron.updateConnectionWeight(n,t)}updateConnectionSpeed(e){if(!this.isMobile||!this.selectedConnection)return;const t=parseFloat(e);this.selectedConnection.speed=t;const n=window.circles.indexOf(this.selectedConnection.target);this.selectedConnection.source?.neuron&&this.selectedConnection.source.neuron.updateConnectionSpeed(n,t)}onTouchStart(e){e.preventDefault(),this.touchSelectionConfirmed=!1,this.touchTargetNeuron=null;const t=(new Date).getTime(),n=e.touches[0];if(2===e.touches.length){this.isMultiTouch=!0,this.lastTouchDistance=this.getTouchDistance(e.touches);const t={x:(e.touches[0].clientX+e.touches[1].clientX)/2,y:(e.touches[0].clientY+e.touches[1].clientY)/2};if(this.draggedNeuron)return this.updateTouchPosition({clientX:t.x,clientY:t.y}),this.touchTargetNeuron=this.draggedNeuron,this.touchSelectionConfirmed=!0,void console.log("Using previously selected neuron for pinch:",this.draggedNeuron.neuron?.id);this.updateTouchPosition({clientX:t.x,clientY:t.y}),this.raycaster.setFromCamera(this.mouse,this.camera),this.raycaster.params.Mesh=this.raycaster.params.Mesh||{};const n=this.raycaster.params.Mesh.threshold||0;this.raycaster.params.Mesh.threshold=this.neuronSelectionThreshold;const o=[];window.circles.forEach((e=>{e.touchArea&&o.push(e.touchArea),o.push(e)}));const i=this.raycaster.intersectObjects(o);if(this.raycaster.params.Mesh.threshold=n,i.length>0){let e=i[0].object;e.isHitArea&&e.parentCircle&&(e=e.parentCircle),this.touchTargetNeuron=e,this.touchSelectionConfirmed=!0,this.selectNeuron(e),console.log("Selected neuron for pinch:",this.touchTargetNeuron.neuron?.id)}return}this.isMultiTouch=!1,this.updateTouchPosition(n);const o=this.getIntersectionPoint(this.mouse);this.initialTouchPosition.copy(o);const i={x:n.clientX,y:n.clientY},s=t-this.lastTapTime,r=Math.sqrt(Math.pow(i.x-this.lastTapPosition.x,2)+Math.pow(i.y-this.lastTapPosition.y,2));if(this.lastTapTime=t,this.lastTapPosition=i,s<this.doubleTapDelay&&r<this.tapDistanceThreshold){this.raycaster.setFromCamera(this.mouse,this.camera);const e=new w(new p(0,1,0),0),t=new p;this.raycaster.ray.intersectPlane(e,t);if(0===this.raycaster.intersectObjects(window.circles).length){console.log("Double tap detected, creating neuron at",t);const e=window.settings.addNeuron(t);e&&(e.position.copy(t),e.position.y=.1,e.touchArea&&(e.touchArea.position.copy(e.position),e.touchArea.position.y=.1),this.selectNeuron(e),this.touchTargetNeuron=e,this.touchSelectionConfirmed=!0,ae.from(e.scale,{x:.05,y:.05,z:.05,duration:.3,ease:"back.out(1.7)"}))}return}if(this.raycaster.setFromCamera(this.mouse,this.camera),this.isClickingOnArrow(e))return void this.deselectNeuron();this.raycaster.params.Mesh=this.raycaster.params.Mesh||{};const a=this.raycaster.params.Mesh.threshold||0;this.raycaster.params.Mesh.threshold=this.neuronSelectionThreshold;const l=[];window.circles.forEach((e=>{e.touchArea&&l.push(e.touchArea),l.push(e)}));const c=this.raycaster.intersectObjects(l);if(this.raycaster.params.Mesh.threshold=a,c.length>0){let e=c[0].object;e.isHitArea&&e.parentCircle&&(e=e.parentCircle),this.selectNeuron(e),this.touchTargetNeuron=e,this.touchSelectionConfirmed=!0,this.setState("neuronDragging",{neuron:e}),this.dragOffset.copy(e.position).sub(o),this.lastPosition.copy(e.position),console.log("Touch selected neuron:",e.neuron?.id)}else this.setState("idle"),console.log("Touch on empty space - deselected all")}onDoubleClick(e){e.preventDefault(),this.updateMousePosition(e),this.raycaster.setFromCamera(this.mouse,this.camera);const t=new w(new p(0,1,0),0),n=new p;this.raycaster.ray.intersectPlane(t,n);if(0===this.raycaster.intersectObjects(window.circles).length){const e=window.settings.addNeuron(n);if(e){e.position.copy(n),e.position.y=.1,e.touchArea&&(e.touchArea.position.copy(e.position),e.touchArea.position.y=.1);const t=e.scale.clone();ae.from(e.scale,{x:.05,y:.05,z:.05,duration:.3,ease:"back.out(1.7)",onComplete:()=>{e.scale.copy(t)}}),this.selectNeuron(e)}}}onTouchMove(e){if(e.preventDefault(),"connection"===this.state&&e.touches.length>1)return;const t=e.touches[0];if(2===e.touches.length){this.velocity.set(0,0,0);const t=this.getTouchDistance(e.touches),n=.005*(t-this.lastTouchDistance),o={x:(e.touches[0].clientX+e.touches[1].clientX)/2,y:(e.touches[0].clientY+e.touches[1].clientY)/2};if(this.touchTargetNeuron?.neuron){const e=this.touchTargetNeuron.neuron.dcInput||0,t=Math.max(0,Math.min(1,e+n));if(Math.abs(t-e)>.01){this.touchTargetNeuron.neuron.setDCInput(t);const e=this.touchTargetNeuron.neuron.baseScale+(this.touchTargetNeuron.neuron.maxScale-this.touchTargetNeuron.neuron.baseScale)*t;if(ae.to(this.touchTargetNeuron.scale,{x:e,y:e,z:e,duration:.2,ease:"power2.out"}),this.touchTargetNeuron.touchArea){const t="ontouchstart"in window||navigator.maxTouchPoints>0?.1:1;ae.to(this.touchTargetNeuron.touchArea.scale,{x:t*e/.2,y:t*e/.2,z:t*e/.2,duration:.2,ease:"power2.out"})}}}return this.lastTouchDistance=t,void(this.lastMidpoint=o)}if(this.updateTouchPosition(t),!this.touchSelectionConfirmed||!this.touchTargetNeuron)return;const n=this.getIntersectionPoint(this.mouse);if(this.initialTouchPosition.distanceTo(n)>.1&&this.setState("neuronDragging",{neuron:this.touchTargetNeuron}),"neuronDragging"!==this.state.current)return;const o=this.getVector3().copy(n).add(this.dragOffset);o.y=.1,this.velocity.subVectors(o,this.lastPosition),this.touchTargetNeuron.position.copy(o),this.touchTargetNeuron.touchArea&&this.touchTargetNeuron.touchArea.position.copy(this.touchTargetNeuron.position),this.lastPosition.copy(o),window.updateNeuronHoverLabel&&window.updateNeuronHoverLabel(this.draggedNeuron,e.clientX,e.clientY),window.draggedNeuron=this.touchTargetNeuron,this.connectionManager&&this.connectionManager.forceUpdateConnectionsForNeuron&&(this.connectionManager.arrowPositionCache&&this.connectionManager.connections.forEach((e=>{if(e.source===this.touchTargetNeuron||e.target===this.touchTargetNeuron){const t=e.source?.neuron?.id+"_"+e.target?.neuron?.id;t&&this.connectionManager.arrowPositionCache.delete(t)}})),this.connectionManager.forceUpdateConnectionsForNeuron(this.touchTargetNeuron)),this.connectionManager.checkProximityConnection(this.touchTargetNeuron)}onTouchEnd(e){if(!this.touchSelectionConfirmed&&!this.isMultiTouch)return;e.preventDefault(),this.isMultiTouch&&(this.isMultiTouch=!1,this.lastTouchDistance=0,this.lastMidpoint=null);const t="neuronDragging"===this.state.current,n=this.touchTargetNeuron;if(t&&this.touchTargetNeuron){if(this.velocity.length()>Fe.dragThreshold){const e=(new p).copy(this.touchTargetNeuron.position).add(this.velocity.multiplyScalar(ke.momentumMultiplier));e.y=.1;const t=this.touchTargetNeuron;ae.to(t.position,{x:e.x,z:e.z,duration:ke.momentumDuration,ease:"power2.out",onUpdate:()=>{if(t&&t.touchArea&&t.parent)t.touchArea.position.copy(t.position),this.connectionManager.checkProximityConnection(t);else{const e=ae.getTweenById(this);e&&e.kill()}}})}}this.setState("idle"),this.touchSelectionConfirmed=!1,this.touchTargetNeuron=null,this.velocity.set(0,0,0),window.draggedNeuron=null;if((window.innerWidth<1024||"ontouchstart"in window||navigator.maxTouchPoints>0)&&t&&n){const e=document.getElementById("neuron-hover-label");e&&"block"===e.style.display&&setTimeout((()=>{e&&e.style&&(e.style.display="none"),window.currentHoveredNeuron=null}),1e3)}}onMouseDown(e){if(this.updateMousePosition(e),"touchstart"===e.type&&(this.touchStartTime=Date.now()),this.isDragOperation=!1,2===e.button){if(this.isClickingOnArrow(e))return;return void this.setState("rightClickDragging",{startPosition:this.mouse.clone()})}this.raycaster.setFromCamera(this.mouse,this.camera);const t=this.raycaster.intersectObjects(window.circles.flatMap((e=>[e,e.touchArea].filter((e=>e)))),!1);if(t.length>0){this.setState("neuronDragging",{neuron:t[0].object});let e=t[0].object;e.isHitArea&&e.parentCircle&&(e=e.parentCircle),this.selectNeuron(e);const n=this.getIntersectionPoint(this.mouse);this.dragOffset.copy(this.draggedNeuron.position).sub(n),this.lastPosition.copy(this.draggedNeuron.position)}else window.soundManager&&window.selectedSynthFolder&&(window.soundManager.deselectNeuron(),this.toggleSynthPanel(!1)),this.connectionManager&&!this.isClickingOnArrow(e)&&this.connectionManager.deselectConnection()}onMouseMove(e){if("rightClickDragging"===this.state.current){this.updateMousePosition(e);const t=this.mouse.x-this.state.context.startPosition.x,n=-(this.mouse.y-this.state.context.startPosition.y),o=this.renderer.domElement.getBoundingClientRect(),i=o.width/2*this.canvasDragSpeed,s=o.height/2*this.canvasDragSpeed,r=new p(t*i,0,n*s);return this.canvasDragVelocity.copy(r),window.circles.forEach((e=>{e&&e.position&&(e.position.add(r),e.touchArea&&e.touchArea.position.copy(e.position))})),void this.state.context.startPosition.copy(this.mouse)}if("idle"===this.state.current){this.updateMousePosition(e),this.raycaster.setFromCamera(this.mouse,this.camera);const t=window.circles.flatMap((e=>[e,e.touchArea].filter((e=>e)))),n=this.raycaster.intersectObjects(t,!1);if(n.length>0){let t=n[0].object;t.isHitArea&&t.parentCircle&&(t=t.parentCircle),window.updateNeuronHoverLabel&&window.updateNeuronHoverLabel(t,e.clientX,e.clientY)}else window.updateNeuronHoverLabel&&window.updateNeuronHoverLabel(null)}if("neuronDragging"!==this.state.current)return;this.updateMousePosition(e);const t=this.getIntersectionPoint(this.mouse),n=this.getVector3().copy(t).add(this.dragOffset);n.y=.1,this.velocity.subVectors(n,this.lastPosition),this.draggedNeuron.position.copy(n),this.draggedNeuron.touchArea&&this.draggedNeuron.touchArea.position.copy(this.draggedNeuron.position),this.lastPosition.copy(n),window.updateNeuronHoverLabel&&window.updateNeuronHoverLabel(this.draggedNeuron,e.clientX,e.clientY),window.draggedNeuron=this.draggedNeuron,this.connectionManager&&this.connectionManager.forceUpdateConnectionsForNeuron&&(this.connectionManager.arrowPositionCache&&this.connectionManager.connections.forEach((e=>{if(e.source===this.draggedNeuron||e.target===this.draggedNeuron){const t=e.source?.neuron?.id+"_"+e.target?.neuron?.id;t&&this.connectionManager.arrowPositionCache.delete(t)}})),this.connectionManager.forceUpdateConnectionsForNeuron(this.draggedNeuron));(window.circles||[]).forEach((e=>{if(!e||e===this.draggedNeuron)return;const t=this.draggedNeuron.position.distanceTo(e.position);let n=!1;if(this.connectionManager.connections.forEach((t=>{(t.source===this.draggedNeuron&&t.target===e||t.source===e&&t.target===this.draggedNeuron)&&(n=!0)})),t<.5&&!n){const t=this.draggedNeuron,n=t.material.color.clone();ae.to(t.material.color,{r:0,g:1,b:0,duration:.2,onComplete:()=>{t.parent&&ae.to(t.material.color,{r:n.r,g:n.g,b:n.b,duration:.2})}});const o=e.material.color.clone();ae.to(e.material.color,{r:0,g:1,b:0,duration:.2,onComplete:()=>{e.parent&&ae.to(e.material.color,{r:o.r,g:o.g,b:o.b,duration:.2})}})}})),this.connectionManager.checkProximityConnection(this.draggedNeuron)}onMouseUp(e){if("rightClickDragging"===this.state.current)return this.setState("idle"),void this.canvasDragVelocity.set(0,0,0);const t="neuronDragging"===this.state.current&&this.velocity.length()<Fe.dragThreshold;if("neuronDragging"===this.state.current&&this.draggedNeuron){if(this.velocity.length()>Fe.dragThreshold){const e=(new p).copy(this.draggedNeuron.position).add(this.velocity.multiplyScalar(ke.momentumMultiplier));e.y=.1;const t=this.draggedNeuron;ae.to(t.position,{x:e.x,z:e.z,duration:ke.momentumDuration,ease:"power2.out",onUpdate:()=>{if(t&&t.touchArea&&t.parent)t.touchArea.position.copy(t.position),this.connectionManager.checkProximityConnection(t);else{const e=ae.getTweenById(this);e&&e.kill()}}})}else t&&this.draggedNeuron&&this.draggedNeuron.neuron&&(console.log("Neuron clicked, updated neuron label:",this.draggedNeuron.neuron.id),window.updateNeuronLabel&&window.updateNeuronLabel(this.draggedNeuron.neuron.id))}this.setState("idle"),this.draggedNeuron=null,window.draggedNeuron=null,this.velocity.set(0,0,0)}onWheel(e){e.preventDefault(),this.updateMousePosition(e),this.raycaster.setFromCamera(this.mouse,this.camera);const t=this.raycaster.intersectObjects(window.circles);if(t.length>0){const n=t[0].object,o=e.deltaY>0?-.01:.01;if(n.neuron){const e=performance.now();if(e-(n.neuron.lastDCChangeTime||0)<50)return;let t=(n.neuron.dcInput||0)+o;t=Math.max(0,Math.min(1,t)),n.neuron.lastDCChangeTime=e,0===t&&n.neuron.reset(),n.neuron.setDCInput(t);const i=n.neuron.baseScale+(n.neuron.maxScale-n.neuron.baseScale)*t;ae.to(n.scale,{x:i,y:i,z:i,duration:.2,ease:"power2.out"})}}}cleanup(){this.isMobile?(this.renderer.domElement.removeEventListener("touchstart",this.onTouchStartBound),this.renderer.domElement.removeEventListener("touchmove",this.onTouchMoveBound),this.renderer.domElement.removeEventListener("touchend",this.onTouchEndBound),this.renderer.domElement.removeEventListener("contextmenu",(e=>e.preventDefault())),this.mobileControls?.parentNode&&(this.mobileControls.parentNode.removeChild(this.mobileControls),this.mobileControls=null)):(this.renderer.domElement.removeEventListener("mousedown",this.onMouseDownBound),this.renderer.domElement.removeEventListener("mousemove",this.onMouseMoveBound),this.renderer.domElement.removeEventListener("mouseup",this.onMouseUpBound),this.renderer.domElement.removeEventListener("mouseleave",this.onMouseLeaveBound),this.renderer.domElement.removeEventListener("wheel",this.onWheelBound),this.renderer.domElement.removeEventListener("dblclick",this.onDoubleClickBound)),this.renderer.domElement.removeEventListener("contextmenu",this.handleRightClickBound)}toggleSynthPanel(e,t=null){const n=window.selectedSynthFolder;if(n)if(e){console.log("InputManager: Showing synth panel");if(window.innerWidth>=1024||(n.element.dataset.synthPanel="true",n.element.style.display="block"),t&&t.neuron){window.updateNeuronLabel&&window.updateNeuronLabel(t.neuron.id);setTimeout((()=>{window.refreshSoundControls&&window.refreshSoundControls(),window.forceRenderEnvelope&&window.forceRenderEnvelope(),window.updateActiveNoteButton&&window.settings.selectedNote&&window.updateActiveNoteButton(window.settings.selectedNote),console.log("Synth panel fully refreshed")}),10)}}else{window.innerWidth>=1024?(console.log("InputManager: Desktop mode - panel remains visible but shows placeholder"),window.updateSynthFolderDisplay&&window.updateSynthFolderDisplay()):(console.log("InputManager: Hiding synth panel"),n.element.style.display="none"),window.updateNeuronLabel&&window.updateNeuronLabel(null),window.updateActiveNoteButton&&window.updateActiveNoteButton(null)}else console.warn("InputManager: selectedSynthFolder not available");window.updateNeuronLabelPosition&&setTimeout((()=>window.updateNeuronLabelPosition()),20)}selectNeuron(e){if(this.draggedNeuron!==e&&(this.deselectNeuron(),this.draggedNeuron=e,this.draggedNeuron&&this.draggedNeuron.neuron)){if(console.log("Selected Neuron:",this.draggedNeuron.neuron.id),window.updateNeuronLabel&&window.updateNeuronLabel(this.draggedNeuron.neuron.id),window.soundManager){window.soundManager.selectedNeuronId=this.draggedNeuron.neuron.id;window.soundManager.getNeuronSoundParameters(this.draggedNeuron.neuron.id)&&(window.innerWidth>=1024&&this.toggleSynthPanel(!0,this.draggedNeuron.neuron),window.refreshSoundControls&&window.refreshSoundControls(),this.draggedNeuron.neuron.presetName&&window.highlightPresetButton?window.highlightPresetButton(this.draggedNeuron.neuron.presetName):window.unhighlightActivePreset&&window.unhighlightActivePreset(),window.soundManager.previewDebounceTimeout&&clearTimeout(window.soundManager.previewDebounceTimeout))}window.updateNeuronGrid&&window.updateNeuronGrid()}}deselectNeuron(){null!==this.draggedNeuron&&(this.draggedNeuron.originalColor&&(this.draggedNeuron.material.color.copy(this.draggedNeuron.originalColor),this.draggedNeuron.neuron&&this.draggedNeuron.neuron.presetColor&&this.draggedNeuron.material.color.copy(this.draggedNeuron.neuron.presetColor)),window.soundManager&&(window.soundManager.selectedNeuronId=null),window.updateNeuronLabel&&window.updateNeuronLabel(null),this.toggleSynthPanel(!1),this.draggedNeuron=null,window.updateNeuronGrid&&window.updateNeuronGrid())}handleOutsideClick(e){e.target!==this.renderer.domElement&&(window.pane&&window.pane.element.contains(e.target)||this.deselectNeuron())}findOutgoingConnections(e){if(!e||!this.connectionManager)return[];const t=[];return this.connectionManager.connections.forEach((n=>{n.source===e&&t.push(n)})),t}isClickingOnArrow(e){e.touches?this.updateTouchPosition(e.touches[0]):this.updateMousePosition(e);const t=new g;if(t.setFromCamera(this.mouse,this.camera),e.touches&&(t.params.Line=t.params.Line||{},t.params.Line.threshold=15),!this.connectionManager)return!1;const n=Array.from(this.connectionManager.connections.values()).map((e=>e.arrow)).filter(Boolean);return t.intersectObjects(n).length>0}showTouchDebug(e,t){const n=document.getElementById("touch-debug");n&&document.body.removeChild(n);const o=document.createElement("div");o.id="touch-debug",o.style.position="absolute",o.style.left=e-10+"px",o.style.top=t-10+"px",o.style.width="20px",o.style.height="20px",o.style.borderRadius="50%",o.style.backgroundColor="rgba(255, 0, 0, 0.5)",o.style.pointerEvents="none",o.style.zIndex="10000",document.body.appendChild(o),setTimeout((()=>{o.parentNode&&document.body.removeChild(o)}),1e3)}toggleTouchAreaVisibility(e){return this.debugTouchAreas=void 0!==e?e:!this.debugTouchAreas,window.circles.forEach((e=>{e.touchArea&&(this.debugTouchAreas?(e.touchArea.material.opacity=.2,e.touchArea.visible=!0):e.touchArea.visible=!1)})),console.log("Touch areas are now "+(this.debugTouchAreas?"visible":"hidden")),this.debugTouchAreas}getVector3(){return this.vector3Pool.pop()||new p}releaseVector3(e){this.vector3Pool.length<20&&(e.set(0,0,0),this.vector3Pool.push(e))}setState(e,t={}){console.log(`State transition: ${this.state.current} -> ${e}`),this.state.current=e,this.state.context={...this.state.context,...t}}initializeUI(){this.ui=this.ui||{},this.ui.synthFolder=window.selectedSynthFolder,this.ui.neuronLabel=document.getElementById("neuron-label"),this.ui.refreshFunctions=this.ui.refreshFunctions||{},this.ui.refreshFunctions.soundControls=window.refreshSoundControls,this.ui.refreshFunctions.activeNoteButton=window.updateActiveNoteButton,this.ui.refreshFunctions.neuronLabel=window.updateNeuronLabel,this.ui.refreshFunctions.envelope=window.forceRenderEnvelope,console.log("UI references initialized:",this.ui)}getUIElement(e){const t=e.split(".");let n=this.ui;for(const o of t){if(!n||void 0===n[o])return null;n=n[o]}return n}handleRightClick(e){if(e.preventDefault(),this.updateMousePosition(e),this.raycaster.setFromCamera(this.mouse,this.camera),window.Neuron&&window.Neuron.allParticles){const e=this.raycaster.intersectObjects(window.Neuron.allParticles);if(e.length>0){const t=e[0].object;return void this.deleteSignalParticle(t)}}const t=window.circles.map((e=>e.touchArea)).filter(Boolean),n=this.raycaster.intersectObjects(t,!1);if(n.length>0){const e=n[0].object;if(e.parentCircle&&e.isHitArea){const t=e.parentCircle;this.deleteNeuron(t)}}}deleteNeuron(e){if(!e)return;console.log("Deleting neuron:",e.neuron?.id);(e=>{if(!e||!e.position)return;const t=new o(.1,.1),n=new a({color:new r(1.5,0,0),transparent:!0,opacity:.9});for(let o=0;o<12;o++){const i=new h(t,n.clone()),s=o/12*Math.PI*2,r=.2;i.position.set(e.position.x+Math.cos(s)*r,e.position.y,e.position.z+Math.sin(s)*r),i.rotation.x=-Math.PI/2,window.scene?window.scene.add(i):e.parent&&e.parent.add(i),ae.to(i.position,{x:e.position.x+Math.cos(s)*(5*r),z:e.position.z+Math.sin(s)*(5*r),duration:.8,ease:"power2.out"}),ae.to(i.material,{opacity:0,duration:.8,ease:"power2.out",onComplete:()=>{i.parent&&i.parent.remove(i),i.material&&i.material.dispose(),i.geometry&&i.geometry.dispose();const e=window.Neuron.allParticles.indexOf(i);-1!==e&&window.Neuron.allParticles.splice(e,1)}})}})(e);const t=e.neuron?.id;if(e.material){const t=e.material.color.clone();e.scale.clone();const n=ae.timeline(),o=void 0!==e.material.emissive,i=o?e.material.emissive.clone():null;n.to(e.material.color,{r:1.6,g:0,b:0,duration:.15,onStart:()=>{o&&e.material.emissive.set(16711680)}}).to(e.material.color,{r:t.r,g:t.g,b:t.b,duration:.15,onStart:()=>{o&&i&&e.material.emissive.copy(i)}}).to(e.material.color,{r:1.6,g:0,b:0,duration:.15,onStart:()=>{o&&e.material.emissive.set(16711680)}})}setTimeout((()=>{if(this.draggedNeuron===e&&this.deselectNeuron(),this.connectionManager)for(const[t,o]of this.connectionManager.connections.entries())o.source!==e&&o.target!==e||this.connectionManager.disposeConnection(o,t);if(window.Neuron&&window.Neuron.allParticles&&t){const e=[...window.Neuron.allParticles];for(const n of e)n.targetNeuronId!==t&&n.sourceNeuronId!==t||ae.to(n.material.color,{r:1,g:0,b:0,duration:.1,onComplete:()=>{n.parent&&n.parent.remove(n),n.material&&n.material.dispose();const e=window.Neuron.allParticles.indexOf(n);-1!==e&&window.Neuron.allParticles.splice(e,1)}})}e.neuron&&e.neuron.cleanup(),e.touchArea&&e.touchArea.parent&&(e.touchArea.parent.remove(e.touchArea),e.touchArea.geometry.dispose(),e.touchArea.material.dispose()),e.parent&&e.parent.remove(e);const n=window.circles.indexOf(e);if(n>-1&&window.circles.splice(n,1),e.geometry&&e.geometry.dispose(),e.material&&e.material.dispose(),window.soundManager&&t)try{"function"==typeof window.soundManager.silenceNeuron&&window.soundManager.silenceNeuron(t)}catch(Ze){console.warn("Error silencing neuron during deletion:",Ze)}if(0===window.circles.length&&window.soundManager)try{"function"==typeof window.soundManager.silenceAllNeurons&&window.soundManager.silenceAllNeurons()}catch(Ze){console.warn("Error silencing all sounds after deleting last neuron:",Ze)}if(window.soundManager&&"function"==typeof window.soundManager.playSmallSound)try{window.soundManager.playSmallSound(.5,.3,.7)}catch(Ze){console.warn("Error playing neuron deletion sound:",Ze)}window.updateNeuronGrid&&window.updateNeuronGrid()}),350)}onMouseLeave(){window.updateNeuronHoverLabel&&window.updateNeuronHoverLabel(null),window.currentHoveredNeuron=null}deleteSignalParticle(e){e&&(console.log("Deleting signal particle"),ae.to(e.material.color,{r:1,g:0,b:0,duration:.1,onComplete:()=>{if(e.parent&&e.parent.remove(e),e.material&&e.material.dispose(),window.Neuron&&window.Neuron.allParticles){const t=window.Neuron.allParticles.indexOf(e);-1!==t&&window.Neuron.allParticles.splice(t,1)}if(window.soundManager&&"function"==typeof window.soundManager.playSmallSound)try{window.soundManager.playSmallSound(.3,.6,.2)}catch(Ze){console.warn("Error playing particle deletion sound:",Ze)}}}))}}(We,Ve,Xe);function Ke(e=null,t=null){const n=Ge.clone(),o=new h(_e,n);o.rotation.x=-Math.PI/2,e?o.position.set(e.x,.1,e.z):o.position.set(10*(Math.random()-.5),.1,10*(Math.random()-.5)),o.scale.setScalar(.2),o.matrixAutoUpdate=!0;let i=new r(255);if(window.lastSelectedPreset&&window.lastSelectedPreset.color)if(window.lastSelectedPreset.color.isColor)i.copy(window.lastSelectedPreset.color);else if("object"==typeof window.lastSelectedPreset.color){const e=void 0!==window.lastSelectedPreset.color.r?window.lastSelectedPreset.color.r:0,t=void 0!==window.lastSelectedPreset.color.g?window.lastSelectedPreset.color.g:0,n=void 0!==window.lastSelectedPreset.color.b?window.lastSelectedPreset.color.b:1;i.setRGB(e,t,n)}else i.set(window.lastSelectedPreset.color);else window.activePreset&&window.activePreset.color&&(window.activePreset.color.isColor?i.copy(window.activePreset.color):i.set(window.activePreset.color));n.color.copy(i),o.userData.originalColor=i.clone();const s=new h(je,Qe);s.rotation.x=-Math.PI/2,s.position.copy(o.position);const a="ontouchstart"in window||navigator.maxTouchPoints>0?.1:.2;s.scale.setScalar(a),s.matrixAutoUpdate=!0,s.visible=!1,s.isHitArea=!0,s.parentCircle=o,He.add(s),o.touchArea=s;const l=new Ae(o);if(o.neuron=l,He.add(o),window.soundManager){if(window.soundManager.assignFrequencyRange(l.id),window.soundManager.neuronSoundOverrides){let e;if(window.lastSelectedPreset){if(e=JSON.parse(JSON.stringify(window.lastSelectedPreset)),window.adjustVolumeForInstrumentType&&window.adjustVolumeForInstrumentType(e),window.lastSelectedPreset.color)if(window.lastSelectedPreset.color.isColor)e.color=window.lastSelectedPreset.color;else if("object"==typeof window.lastSelectedPreset.color){const t=void 0!==window.lastSelectedPreset.color.r?window.lastSelectedPreset.color.r:0,n=void 0!==window.lastSelectedPreset.color.g?window.lastSelectedPreset.color.g:0,o=void 0!==window.lastSelectedPreset.color.b?window.lastSelectedPreset.color.b:1;e.color=new r(t,n,o)}else e.color=new r(window.lastSelectedPreset.color);l.presetColor=o.material.color.clone(),l.presetName=e.name||"Remembered Preset"}else if(window.soundManager.lastSelectedNeuronParams){if(e=JSON.parse(JSON.stringify(window.soundManager.lastSelectedNeuronParams)),e.color){if("object"==typeof e.color&&e.color.isColor)o.material.color.copy(e.color),l.presetColor=e.color.clone?e.color.clone():new r(e.color);else if("object"==typeof e.color){const t=new r(void 0!==e.color.r?e.color.r:0,void 0!==e.color.g?e.color.g:0,void 0!==e.color.b?e.color.b:1);o.material.color.copy(t),l.presetColor=t}l.presetName=e.name||"Custom Sound"}}else{const t=Math.floor(Math.random()*defaultPresets.length),n=defaultPresets[t];e=n,n.color&&(o.material.color.copy(n.color),l.presetColor=n.color.clone(),l.presetName=n.name)}const t={...e,envelope:{attack:e.attack||(e.envelope?e.envelope.attack:void 0)||.002,decay:e.decay||(e.envelope?e.envelope.decay:void 0)||.3,sustain:e.sustain||(e.envelope?e.envelope.sustain:void 0)||.2,release:e.release||(e.envelope?e.envelope.release:void 0)||.8,attackCurve:e.attackCurve||(e.envelope?e.envelope.attackCurve:void 0)||"exponential",decayCurve:e.decayCurve||(e.envelope?e.envelope.decayCurve:void 0)||"exponential",releaseCurve:e.releaseCurve||(e.envelope?e.envelope.releaseCurve:void 0)||"exponential"},oscillator:{type:e.oscillatorType||(e.oscillator?e.oscillator.type:void 0)||"triangle"},filter:{type:e.filterType||(e.filter?e.filter.type:void 0)||"lowpass",frequency:e.filterFrequency||(e.filter?e.filter.frequency:void 0)||5e3,Q:e.filterQ||(e.filter?e.filter.Q:void 0)||1},effects:{reverbSend:e.reverbSend||(e.effects?e.effects.reverbSend:void 0)||.2,delaySend:e.delaySend||(e.effects?e.effects.delaySend:void 0)||.15},modulation:{tremoloFreq:e.tremoloFreq||(e.modulation?e.modulation.tremoloFreq:void 0)||4,tremoloDepth:e.tremoloDepth||(e.modulation?e.modulation.tremoloDepth:void 0)||0,vibratoFreq:e.vibratoFreq||(e.modulation?e.modulation.vibratoFreq:void 0)||5,vibratoDepth:e.vibratoDepth||(e.modulation?e.modulation.vibratoDepth:void 0)||0},name:e.name};window.soundManager.neuronSoundOverrides.set(l.id,t)}window.settings&&window.settings.previewSounds&&setTimeout((()=>{window.soundManager.playNeuronFiring(.5,.7,l.id,!0,t>0,0)}),100)}return null!==t&&(l.dcInput=t,l.currentCharge=t,1===t&&setTimeout((()=>{l.fire()}),200)),window.updateNeuronGrid&&setTimeout((()=>window.updateNeuronGrid()),200),o.neuron.createParticleExplosion(),o}window.inputManager=Je,console.log("Initializing OptimizedSoundManager with oscillator bank for phase synchronization"),window.soundManager=new class{constructor(e,t,n){this.scene=e,this.camera=t,this.renderer=n,this.ensureAudioContext(),this.volume=-6,this.volumeNormalization=1,this.baseFrequency=440,this.spatialAudioEnabled=!1,this.spatialAudioPanners=new Map,this.spatialAudioNodes=new Map,this.neuronSoundOverrides=new Map,this.neuronFrequencies=new Map,this.neuronBusAssignments=new Map,this.lastSelectedNeuronParams=null,this.activeVoices=new Set,this.maxVoices=48,this.voiceTimeout=1e3,this.voicePriorities=new Map,this.lastPlayTime=0,this.minTimeBetweenNotes=15,this.neuronLastPlayTime=new Map,this.lastPlayedNotes=[],this.recentSoundTypes={bass:{lastPlayed:0,isPlaying:!1},hihat:{lastPlayed:0,isPlaying:!1}},this.stats={totalOscillators:0,activeOscillators:0,oscillatorsCreated:0,oscillatorsDisposed:0,lastStatsTime:Date.now(),peakOscillatorCount:0},this.selectedNeuronId=null,this.playPreviewSounds=!1,this.melodicPattern=[0,2,4,7,9,12,11,9,7,4,2,0],this.currentPatternIndex=0,this.lastFreqIndex=0,this.melodyDirection=1,this.frequencyRanges={low:["C2","D2","E2","G2","A2","C3"],mid:["C3","D3","E3","G3","A3","C4"],high:["C4","D4","E4","G4","A4","C5"],veryHigh:["C5","D5","E5","G5","A5","C6"],ultra:["C6","D6","E6","G6","A6"]},this.lastAudioTime=0,this.initializeAudioBuses(),this.oscillatorTypes=["sine","triangle","sawtooth","square","sine3","triangle3","sawtooth3","square3","noise"],this.envelopeCurves=["linear","exponential","sine","cosine","bounce","ripple","step"],this.filterTypes=["lowpass","highpass","bandpass","notch","lowshelf","highshelf","allpass"],this.waveformAnalyzer=new D("waveform",1024),z.connect(this.waveformAnalyzer),this.oscillatorBank=new Map,this.pendingOscillators=new Map,this._cleanupScheduled=!1,this.initializeOscillatorBank()}initializeOscillatorBank(){console.log("%c[OSCILLATOR BANK] Initializing optimized oscillator bank with lazy loading","color: #00ff00; font-weight: bold;");const e=["sine","triangle"],t=["C3","E3","G3","C4"].map((e=>R(e).toFrequency()));this.oscillatorTypes.forEach((e=>{this.oscillatorBank.set(e,new Map)})),e.forEach((e=>{t.forEach((t=>{this._createOscillator(e,t)}))})),console.log(`%c[OSCILLATOR BANK] Created initial bank with ${e.length} types × ${t.length} frequencies = ${e.length*t.length} oscillators`,"color: #00ff00; font-weight: bold;"),console.log("%c[OSCILLATOR BANK] Lazy oscillator creation ENABLED","color: #00ff00; font-weight: bold; font-size: 14px;"),setInterval((()=>this.cleanupUnusedOscillators()),6e4),this._cleanupScheduled=!0}_getOrCreateOscillator(e,t){if(this.oscillatorBank.has(e)&&this.oscillatorBank.get(e).has(t)){const n=this.oscillatorBank.get(e).get(t);return n.lastUsed=Date.now(),n}return this._createOscillator(e,t)}_createOscillator(e,t){let n;this.oscillatorBank.has(e)||this.oscillatorBank.set(e,new Map),"noise"===e?(n=new q("white"),n.start()):n=new B({frequency:t,type:e}).start();const o=new O(0);n.connect(o);const i={oscillator:n,gain:o,activeNeurons:new Set,lastUsed:Date.now()};return this.stats.oscillatorsCreated++,this.stats.totalOscillators++,this.stats.peakOscillatorCount=Math.max(this.stats.peakOscillatorCount,this.stats.totalOscillators),this.oscillatorBank.get(e).set(t,i),i}cleanupUnusedOscillators(){const e=Date.now();let t=0,n=0;for(const[i,s]of this.oscillatorBank.entries()){n+=s.size;for(const[n,i]of s.entries())if(!(i.activeNeurons.size>0||e-i.lastUsed<3e4)){if(i.oscillator)try{i.oscillator.stop(),i.oscillator.dispose()}catch(o){console.warn(`Error disposing oscillator: ${o}`)}if(i.gain)try{i.gain.dispose()}catch(o){console.warn(`Error disposing gain: ${o}`)}s.delete(n),t++,this.stats.oscillatorsDisposed++,this.stats.totalOscillators--}}t>0&&console.log(`Cleaned up ${t} unused oscillators, keeping ${n-t}/${n}`)}createSimplePanner(e=0){const t=new H(2),n=new W,o=new O(1),i=new O(1),s=new V(0),r=new V(0),a=new O(1),l=new O(1);a.connect(t),t.connect(s,0),s.connect(o),o.connect(n,0,0),t.connect(r,1),r.connect(i),i.connect(n,0,1),n.connect(l);const c=[a,l,t,n,o,i,s,r],d=e=>{const t=Math.max(-1,Math.min(1,e));o.gain.value=.6+.4*Math.max(0,-t),i.gain.value=.6+.4*Math.max(0,t);const n=4e-4;s.delayTime.value=Math.max(0,n*t),r.delayTime.value=Math.max(0,-4e-4*t),console.log(`Simplified panner set to ${t.toFixed(2)}`)};return d(e),{input:a,output:l,updatePosition:e=>{d(e)},dispose:()=>{c.forEach((e=>{e&&"function"==typeof e.dispose&&e.dispose()}))},allNodes:c}}calculateSpatialPosition(e){if(!window.circles)return 0;const t=Array.from(window.circles).find((t=>t&&t.neuron&&t.neuron.id===e));if(!t)return 0;const n=t.position,o=this.camera.position,i=n.x-o.x,s=Math.max(-1,Math.min(1,.8*i));return console.log(`Neuron ${e} spatial position: pan = ${s.toFixed(2)}`),s}setSpatialAudio(e){this.spatialAudioEnabled!==e&&(console.log((e?"Enabling":"Disabling")+" spatial audio"),this.spatialAudioEnabled=e,e?(Object.values(this.buses).forEach((e=>{if(!e.spatialPanner)if(e.spatialPanner=this.createSimplePanner(0),this.spatialAudioNodes.set(e.id,e.spatialPanner),e.gain)try{const t=e.originalDestination||this.finalMixer||z;e.gain.disconnect(),e.gain.connect(e.spatialPanner.input),e.spatialPanner.output.connect(t),e.originalDestination=t,console.log(`Successfully connected spatial panner for bus ${e.id}`)}catch(Ze){console.error(`Error setting up panner for bus ${e.id}:`,Ze)}else console.warn(`No gain node for bus ${e.id}, skipping panner setup`)})),window.circles&&window.circles.forEach((e=>{if(e&&e.neuron){const t=e.neuron.id;this.updateNeuronSpatialPosition(t)}}))):(Object.values(this.buses).forEach((e=>{if(e.spatialPanner)try{e.gain.disconnect();const t=e.originalDestination||this.finalMixer||z;e.gain.connect(t),e.spatialPanner.dispose(),e.spatialPanner=null}catch(Ze){console.error(`Error disconnecting panner for bus ${e.id}:`,Ze)}})),this.spatialAudioNodes.forEach((e=>{e&&"function"==typeof e.dispose&&e.dispose()})),this.spatialAudioNodes.clear(),this.spatialAudioPanners.clear()))}updateNeuronSpatialPosition(e){if(!this.spatialAudioEnabled)return;const t=this.calculateSpatialPosition(e),n=this.neuronBusAssignments.get(e);if(n&&this.buses[n]&&this.buses[n].spatialPanner)try{this.buses[n].spatialPanner.updatePosition(t),this.spatialAudioPanners.set(e,t)}catch(Ze){console.error(`Error updating spatial position for neuron ${e}:`,Ze)}}logPerformanceStats(){console.log(`%c[OSCILLATOR STATS] Total: ${this.stats.totalOscillators} | Active: ${this.stats.activeOscillators} | Created: ${this.stats.oscillatorsCreated} | Disposed: ${this.stats.oscillatorsDisposed} | Peak: ${this.stats.peakOscillatorCount}`,"color: #00cc00; background: #111; padding: 3px; border-radius: 2px;");const e=30*this.oscillatorTypes.length,t=this.stats.totalOscillators,n=e-t,o=Math.round(n/e*100);o>0&&console.log(`%c[OPTIMIZATION] Using ${t} oscillators instead of ~${e} (${o}% reduction)`,"color: #00ffaa; background: #111; padding: 3px; border-radius: 2px;")}startPerformanceMonitoring(e=3e4){return this._perfMonitoringInterval&&clearInterval(this._perfMonitoringInterval),this._perfMonitoringInterval=setInterval((()=>{this.logPerformanceStats()}),e),console.log(`%c[OSCILLATOR BANK] Performance monitoring started (${e/1e3}s interval)`,"color: #00cc00;"),this}getOscillatorStats(){return{...this.stats}}getClosestFrequency(e){const t=Math.round(12*Math.log2(e/440))+49;return 440*Math.pow(2,(t-49)/12)}ensureAudioContext(){"running"!==U.state&&_().then((()=>{console.log("Audio context started successfully"),j.start()})).catch((e=>{console.warn("Error starting audio context:",e)}))}initializeAudioBuses(){console.log("Initializing audio buses with compression and limiter for improved sound quality");try{this.masterLimiter=new G(-2),this.masterLimiter.toDestination(),this.masterCompressor=new Q({threshold:-22,ratio:4,attack:.005,release:.15,knee:12}),this.masterCompressor.connect(this.masterLimiter),this.finalMixer=new O(.92),this.finalMixer.connect(this.masterCompressor),this.splitter=new H(2),this.splitter.connect(this.finalMixer,0),this.hiHatFilter=new Y({type:"highpass",frequency:3800,rolloff:-24,Q:.7}),this.hiHatCompressor=new Q({threshold:-20,ratio:4,attack:.001,release:.08,knee:8}),this.splitter.connect(this.hiHatFilter,1),this.hiHatSplitter=new H(2),this.hiHatFilter.connect(this.hiHatSplitter),this.hiHatWet=new O(.5),this.hiHatDry=new O(.5),this.hiHatSplitter.connect(this.hiHatCompressor,0),this.hiHatCompressor.connect(this.hiHatWet),this.hiHatWet.connect(this.finalMixer),this.hiHatSplitter.connect(this.hiHatDry,1),this.hiHatDry.connect(this.finalMixer),this.isHiHatSound=e=>e&&"highpass"===e.filterType&&e.filterFrequency>2e3||e.name&&e.name.toLowerCase().includes("hi-hat")||"triangle"===e.oscillatorType&&e.decay<.15&&0===e.sustain||"noise"===e.oscillatorType,this.buses={};try{this.buses.low=this.createAudioBus("low",{eq:{low:0,mid:-3,high:-6},reverb:{decay:2,wet:.15},delay:{delayTime:.25,feedback:.2,wet:.1}})}catch(e){console.error("Failed to create low bus:",e),this.buses.low={id:"low",gain:new O(1).toDestination()}}try{this.buses.mid=this.createAudioBus("mid",{eq:{low:-3,mid:0,high:-3},reverb:{decay:1.5,wet:.12},delay:{delayTime:.2,feedback:.15,wet:.08}})}catch(e){console.error("Failed to create mid bus:",e),this.buses.mid={id:"mid",gain:new O(1).toDestination()}}try{this.buses.high=this.createAudioBus("high",{eq:{low:-6,mid:-3,high:0},reverb:{decay:1,wet:.1},delay:{delayTime:.15,feedback:.1,wet:.06}})}catch(e){console.error("Failed to create high bus:",e),this.buses.high={id:"high",gain:new O(1).toDestination()}}try{this.buses.highPerc=this.createAudioBus("highPerc",{eq:{low:-2,mid:0,high:2},reverb:{decay:1.2,wet:.18},delay:{delayTime:.18,feedback:.25,wet:.15}})}catch(e){console.error("Failed to create highPerc bus:",e),this.buses.highPerc={id:"highPerc",gain:new O(1).toDestination()}}try{this.buses.hiHat=this.createAudioBus("hiHat",{eq:{low:-12,mid:-2,high:2},filterType:"highpass",filterFrequency:1200,reverb:{decay:.8,wet:.1},delay:{delayTime:.08,feedback:.05,wet:.04},useParallelCompression:!0})}catch(e){console.error("Failed to create hiHat bus:",e),this.buses.hiHat={id:"hiHat",gain:new O(1).toDestination()}}try{this.buses.organ=this.createAudioBus("organ",{eq:{low:-2,mid:2,high:1},filterType:"lowpass",filterFrequency:3500,filterQ:.7,reverb:{decay:3,wet:.35},delay:{delayTime:.15,feedback:.1,wet:.05},compression:{threshold:-20,ratio:2.5,attack:.03,release:.3,knee:10},useOrganism:!0})}catch(e){console.error("Failed to create organ bus:",e),this.buses.organ={id:"organ",gain:new O(1).toDestination()}}Object.keys(this.buses).forEach((e=>{const t=this.buses[e];t.filter||(t.filter=new Y(1e3,"allpass").connect(t.gain||z)),t.eq||(t.eq=new X(0,0,0).connect(t.filter))})),this.synths={},this.createSynthsForBuses()}catch(Ze){if(console.error("Error initializing audio buses:",Ze),!this.buses||0===Object.keys(this.buses).length){this.buses={fallback:{id:"fallback",gain:new O(1).toDestination(),filter:new Y(1e3,"allpass").toDestination(),eq:new X(0,0,0).toDestination()}};try{this.buses.fallback.eq.connect(this.buses.fallback.filter),this.buses.fallback.filter.connect(this.buses.fallback.gain)}catch(e){console.error("Failed to connect fallback bus:",e)}console.warn("Created emergency fallback audio bus")}this.synths={},this.createSynthsForBuses()}}createAudioBus(e,t={}){console.log(`Creating audio bus: ${e} with options:`,t);try{const r={id:e,eq:new X(t.eq?.low||0,t.eq?.mid||0,t.eq?.high||0),filter:new Y({type:t.filterType||"allpass",frequency:t.filterFrequency||1e3,rolloff:-12,Q:t.filterQ||1}),gain:new O(1)};r.reverb=new J({decay:t.reverb?.decay||1.5,wet:t.reverb?.wet||.2,preDelay:.01}),r.reverb&&r.reverb.wet&&(r.reverb.wet.value=t.reverb?.wet||.2);try{r.reverb.generate()}catch(n){console.warn(`Error generating reverb impulse for bus ${e}:`,n)}if(r.delay=new K({delayTime:t.delay?.delayTime||.2,feedback:t.delay?.feedback||.2,wet:t.delay?.wet||.15,maxDelay:1}),r.delay&&r.delay.wet&&(r.delay.wet.value=t.delay?.wet||.15),t.compression&&(r.compressor=new Q({threshold:t.compression.threshold||-20,ratio:t.compression.ratio||3,attack:t.compression.attack||.02,release:t.compression.release||.3,knee:t.compression.knee||10}),console.log(`Added compressor to bus ${e}`)),t.useOrganism){r.saturation=new Z({distortion:.08,wet:.3}),r.chorus=new ee({frequency:.6,delayTime:4,depth:.3,type:"sine",spread:40,wet:.15});try{r.chorus.start()}catch(n){console.warn(`Error starting chorus for bus ${e}:`,n)}console.log(`Added organ-specific processing to bus ${e}`)}try{if(t.useOrganism&&r.saturation&&r.chorus){try{r.filter.connect(r.saturation)}catch(o){console.warn("Connection error 1:",o)}try{r.saturation.connect(r.eq)}catch(o){console.warn("Connection error 2:",o)}if(r.compressor){try{r.eq.connect(r.compressor)}catch(o){console.warn("Connection error 3:",o)}try{r.compressor.connect(r.chorus)}catch(o){console.warn("Connection error 4:",o)}}else try{r.eq.connect(r.chorus)}catch(o){console.warn("Connection error 5:",o)}try{r.chorus.connect(r.delay)}catch(o){console.warn("Connection error 6:",o)}console.log(`Connected specialized organ chain for bus ${e}`)}else{try{r.filter.connect(r.eq)}catch(o){console.warn("Connection error 7:",o)}if(r.compressor){try{r.eq.connect(r.compressor)}catch(o){console.warn("Connection error 8:",o)}try{r.compressor.connect(r.delay)}catch(o){console.warn("Connection error 9:",o)}}else try{r.eq.connect(r.delay)}catch(o){console.warn("Connection error 10:",o)}console.log(`Connected standard chain for bus ${e}`)}try{r.delay.connect(r.reverb),console.log(`Connected delay to reverb for bus ${e}`)}catch(o){console.warn("Error connecting delay to reverb:",o);try{r.delay.connect(r.gain)}catch(n){console.warn("Fallback connection failed:",n)}}try{r.reverb.connect(r.gain),console.log(`Connected reverb to gain for bus ${e}`)}catch(o){console.warn("Error connecting reverb to gain:",o)}if(t.useParallelCompression)if(console.log(`Using parallel compression for ${e} bus`),this.hiHatFilter)try{r.gain.connect(this.hiHatFilter),console.log(`Connected ${e} bus to hiHatFilter for parallel processing`)}catch(o){console.warn("Error connecting to hiHatFilter:",o);try{r.gain.connect(this.finalMixer||z)}catch(n){console.warn("Fallback connection failed:",n);try{r.gain.toDestination()}catch(i){console.error("Emergency connection failed:",i)}}}else{console.warn(`hiHatFilter not available for bus ${e}, connecting to main output`);try{r.gain.connect(this.finalMixer||z)}catch(o){console.warn("Error connecting to finalMixer:",o);try{r.gain.toDestination()}catch(n){console.error("Emergency connection failed:",n)}}}else{console.log(`Using standard routing for ${e} bus`);try{r.gain.connect(this.finalMixer||z),console.log(`Connected ${e} bus gain directly to finalMixer`)}catch(o){console.warn("Error connecting to finalMixer:",o);try{r.gain.toDestination(),console.log("Emergency connection to destination successful")}catch(n){console.error("Emergency connection failed:",n)}}}}catch(s){console.error(`Error in connecting audio nodes for bus ${e}:`,s);try{r.filter.toDestination(),console.log("Emergency direct connection established")}catch(o){console.error("Failed all connection attempts:",o)}}return r}catch(Ze){console.error(`Error creating audio bus ${e}:`,Ze);const i={id:e,eq:new X(0,0,0),gain:new O(1)};try{i.eq.connect(i.gain),i.gain.connect(this.finalMixer||z)}catch(o){console.error("Failed to connect fallback bus:",o);try{i.eq.toDestination()}catch(n){console.error("Failed all fallback connection attempts:",n)}}return console.log(`Created fallback bus for ${e} due to error`),i}}createSynthsForBuses(){console.log("Creating synths for audio buses with error handling...");try{this.synths={};const e=this.finalMixer||z;this.synths.defaultTone=new te(ne,{maxPolyphony:8,oscillator:{type:"triangle"},envelope:{attack:.002,decay:.3,sustain:.2,release:.8},volume:this.volume||-6}).toDestination(),Object.keys(this.buses).forEach((t=>{try{const o=this.buses[t];if(!o||!o.id)return void console.warn(`Skipping invalid bus: ${t}`);let i;o.filter&&void 0!==o.filter.input?i=o.filter:o.eq&&void 0!==o.eq.input?i=o.eq:o.gain&&void 0!==o.gain.input?i=o.gain:(i=e,console.warn(`Using fallback output for ${t} synths`));const s=o.highQuality||!1,r=s?16:8;if(console.log(`Creating synths for bus ${t} with destination:`,i),"organ"===t)try{this.synths[t+"Tone"]=new te(ne,{maxPolyphony:24,oscillator:{type:"sine"},envelope:{attack:.1,decay:.4,sustain:.8,release:2.5,attackCurve:"linear"},volume:this.volume-4});try{this.synths[t+"Tone"].connect(i)}catch(n){console.warn(`Failed to connect ${t+"Tone"} to bus, using fallback:`,n),this.synths[t+"Tone"].toDestination()}this.synths[t+"OctaveUp"]=new te(ne,{maxPolyphony:24,oscillator:{type:"sine"},envelope:{attack:.15,decay:.3,sustain:.7,release:2.2,attackCurve:"linear"},volume:this.volume-10});try{this.synths[t+"OctaveUp"].connect(i)}catch(n){console.warn(`Failed to connect ${t+"OctaveUp"} to bus, using fallback:`,n),this.synths[t+"OctaveUp"].toDestination()}this.synths[t+"Fifth"]=new te(ne,{maxPolyphony:24,oscillator:{type:"sine"},envelope:{attack:.12,decay:.35,sustain:.75,release:2.3,attackCurve:"linear"},volume:this.volume-12});try{this.synths[t+"Fifth"].connect(i)}catch(n){console.warn(`Failed to connect ${t+"Fifth"} to bus, using fallback:`,n),this.synths[t+"Fifth"].toDestination()}this.synths[t+"Air"]=new q({type:"pink",volume:this.volume-24});try{this.synths[t+"Air"].start()}catch(n){console.warn(`Failed to start ${t+"Air"} noise:`,n)}console.log(`Created specialized organ synths for ${t} bus`)}catch(n){console.error(`Failed to create organ synths for ${t}:`,n)}else if(t.includes("Perc"))try{this.synths[t+"Membrane"]=new oe({pitchDecay:.05,octaves:2,envelope:{attack:.002,decay:.3,sustain:.2,release:.8,attackCurve:"exponential"},volume:this.volume});try{this.synths[t+"Membrane"].connect(i)}catch(n){console.warn(`Failed to connect ${t+"Membrane"} to bus, using fallback:`,n),this.synths[t+"Membrane"].toDestination()}this.synths[t+"Tone"]=new te(ne,{maxPolyphony:r,oscillator:{type:"sine",partials:[1,.3,.1]},envelope:{attack:.002,decay:.3,sustain:.2,release:.8},volume:this.volume-5});try{this.synths[t+"Tone"].connect(i)}catch(n){console.warn(`Failed to connect ${t+"Tone"} to bus, using fallback:`,n),this.synths[t+"Tone"].toDestination()}}catch(n){console.error(`Failed to create percussion synths for ${t}:`,n)}else try{this.synths[t+"Tone"]=new te(ne,{maxPolyphony:r,oscillator:{type:"triangle",count:s?3:2,spread:s?10:5},envelope:{attack:.002,decay:.3,sustain:.2,release:.8},volume:this.volume});try{this.synths[t+"Tone"].connect(i)}catch(n){console.warn(`Failed to connect ${t+"Tone"} to bus, using fallback:`,n),this.synths[t+"Tone"].toDestination()}this.synths[t+"Sustain"]=new te(ne,{maxPolyphony:Math.max(4,Math.floor(r/2)),oscillator:{type:"sine",partials:[1,.5,.2]},envelope:{attack:.4,decay:.8,sustain:.8,release:2},volume:this.volume-8});try{this.synths[t+"Sustain"].connect(i)}catch(n){console.warn(`Failed to connect ${t+"Sustain"} to bus, using fallback:`,n),this.synths[t+"Sustain"].toDestination()}}catch(n){console.error(`Failed to create tonal synths for ${t}:`,n)}}catch(o){console.error(`Error processing bus ${t}:`,o)}})),console.log(`Created synths for ${Object.keys(this.buses).length} buses`)}catch(Ze){console.error("Error initializing synths:",Ze),this.synths&&0!==Object.keys(this.synths).length||(console.warn("Creating emergency fallback synth"),this.synths={emergencyTone:new te(ne,{maxPolyphony:8,volume:-10}).toDestination()})}}getBusForNeuron(e,t,n,o={}){const i=this.isHiHatSound(o),s=this.isOrganSound(o);if(n||t)return s?(console.log(`Routing selected organ sound for neuron ${e} through organ bus`),this.buses.organ):this.buses.highPerc;if(s)return console.log(`Routing organ sound for neuron ${e} through specialized organ bus`),this.buses.organ;if(i)return console.log(`Routing hi-hat sound for neuron ${e} through special hi-hat bus`),this.buses.hiHat;switch(e%3){case 0:return this.buses.low;case 1:default:return this.buses.mid;case 2:return this.buses.high}}isOrganSound(e){if(!e)return!1;if(e.name){if(e.name.toLowerCase().includes("organ"))return!0;if(e.name.toLowerCase().includes("synth lead"))return!1}const t=e.attack>.05&&e.sustain>.7&&e.release>1.5,n="sine"===e.oscillatorType,o=!0===e.useSustainedTone;return t&&(n||o)}isHiHatSound(e){return!!e&&(e.name&&e.name.toLowerCase().includes("hi-hat")||"highpass"===e.filterType&&e.filterFrequency>2e3||"noise"===e.oscillatorType||"triangle"===e.oscillatorType&&e.decay<.15&&0===e.sustain)}createNoisyHiHat(e,t,n,o){try{const i=this.buses[n]||this.buses.hiHat||this.buses.highPerc;if(!i)return;const s=new q({type:"white",volume:-12}).start(),r=new Y({type:"bandpass",frequency:t.filterFrequency||8e3,Q:t.filterQ||1}),a=new Y({type:"highpass",frequency:7e3,rolloff:-48}),l=new Y({type:"notch",frequency:500,Q:1.2,gain:-12}),c=new Y({type:"peaking",frequency:9e3,Q:2,gain:5}),d=new ie({attack:t.attack||.001,decay:t.decay||.08,sustain:0,release:t.release||.05});s.connect(r),r.connect(a),a.connect(l),l.connect(c),c.connect(d),d.connect(i.filter||i.gain||z);const u=se();return d.attackCurve="exponential",d.releaseCurve="exponential",s.volume.value=14*e-17,d.triggerAttackRelease(o,u),setTimeout((()=>{s.stop(),s.dispose(),r.dispose(),a.dispose(),l.dispose(),c.dispose(),d.dispose()}),1e3*o+200),!0}catch(Ze){return console.error("Error creating hi-hat sound:",Ze),!1}}canPlaySound(e,t,n){if(e===this.selectedNeuronId)return!0;if(this.playPreviewSounds&&null!==this.selectedNeuronId)return!1;if(this.activeVoices.size>=this.maxVoices){return this.calculateNeuronPriority(e,t,n)>=50}return!0}calculateNeuronPriority(e,t,n){let o=50;return t&&(o+=25),n&&(o-=15),this.activeVoices.has(e)&&(o-=20),Math.max(0,Math.min(100,o))}trackActiveVoice(e){this.activeVoices.add(e),setTimeout((()=>{this.activeVoices.delete(e)}),this.voiceTimeout)}playNeuronFiring(e=.5,t=.5,n,o=!1,i=!1,s=0){if(this.spatialAudioEnabled&&n&&this.updateNeuronSpatialPosition(n),!this.canPlaySound(n,i,o))return!1;if(U&&"running"===U.state)try{const t=performance.now();if(t-this.lastPlayTime<this.minTimeBetweenNotes)return;if(i&&n){const e=t-(this.neuronLastPlayTime.get(n)||0);if(e<(i?50:25))return void console.log(`Skipping too-frequent sound for neuron ${n} (${e.toFixed(1)}ms)`);this.neuronLastPlayTime.set(n,t)}this.lastPlayTime=t;const o=this.getNeuronSynthParams(n);if(!o)return void console.error(`No parameters found for neuron ${n}`);if(void 0!==o.neuronVolume&&o.neuronVolume<=-12)return void console.log(`Neuron ${n} is muted (volume at minimum)`);const s=this.isHiHatSound(o),l=this.isOrganSound(o),c=o&&o.name&&o.name.toLowerCase().includes("bass")||"lowpass"===o.filterType&&o.filterFrequency<400;s&&(this.recentSoundTypes.hihat.lastPlayed=performance.now()),c&&(this.recentSoundTypes.bass.lastPlayed=performance.now()),this.trackSoundTypeActivity();const d=this.getBusForNeuron(n,n===this.selectedNeuronId,i,o);if(!d)return void console.error(`No bus found for neuron ${n}`);const u=d.id;this.neuronBusAssignments.set(n,u),this.trackActiveVoice(n),this.applyNeuronParametersToBus(n,d,o);let h=o.note,p=Math.min(.9,Math.max(.3,.8*e));if(c&&(p*=.75),s&&(p*=.85),void 0!==o.neuronVolume){const e=o.useSustainedTone||o.sustain>.5||o.name?.toLowerCase().includes("pad")||o.name?.toLowerCase().includes("organ")||o.name?.toLowerCase().includes("synth"),t=o.name?.toLowerCase().includes("pad");let n;if(o.neuronVolume>=0)n=Math.pow(10,o.neuronVolume/20);else{const e=1-Math.min(1,Math.abs(o.neuronVolume)/12);n=Math.pow(10,o.neuronVolume/20)*(.3+.7*e)}if(p*=n,t&&(p*=.7),e&&!t&&(p*=.8),o.neuronVolume<=-9){p*=Math.max(0,(o.neuronVolume+12)/3)}}p*=this.volumeNormalization,void 0!==o.volumeScaling&&(p*=o.volumeScaling);const g=o.oscillator?.type||o.oscillatorType||"triangle",m=this.getClosestFrequency(h),w=this._getOrCreateOscillator(g,m);w.activeNeurons.add(n),setTimeout((()=>{w.activeNeurons.delete(n)}),2e3);const f=o.envelope?.attack||o.attack||.002,y=o.envelope?.decay||o.decay||.3,v=o.envelope?.sustain||o.sustain||.2,b=o.envelope?.release||o.release||.8,C=Math.max(.1,f+y+(v>.01?.8*b:0)),S=se()+.01;if(s){if(this.createNoisyHiHat(p,o,u,C))return}let M=null;if(l&&"organ"===u){const e=this.synths[u+"Tone"],t=this.synths[u+"OctaveUp"],o=this.synths[u+"Fifth"],i=this.synths[u+"Air"];if(e&&t&&o){this.managePolyphonyOverflow(e),this.managePolyphonyOverflow(t),this.managePolyphonyOverflow(o);const s=2*m,l=1.5*m,c=.6*p,u=.4*p;try{const n=Object.values(this.synths).filter((e=>e&&e._activeVoices&&e._activeVoices.size)).reduce(((e,t)=>e+t._activeVoices.size),0),i=n>15;e.triggerAttackRelease(m,C,S,p),i||t.triggerAttackRelease(s,.9*C,S+.02,c),n<12&&o.triggerAttackRelease(l,.85*C,S+.03,u)}catch(r){console.warn(`Organ harmonics error, falling back to base note: ${r.message}`);try{e.triggerAttackRelease(m,C,S,p)}catch(a){console.error(`Failed to play even base organ note: ${a.message}`)}}if(i){const e=new O(0).connect(d.filter);i.connect(e),e.gain.cancelScheduledValues(S),e.gain.setValueAtTime(0,S),e.gain.linearRampToValueAtTime(.02*p,S+.5*f),e.gain.linearRampToValueAtTime(.01*p,S+f+y),e.gain.linearRampToValueAtTime(0,S+C),setTimeout((()=>{e.dispose()}),1e3*(C+.1))}console.log(`Played layered organ sound for neuron ${n} - base: ${m.toFixed(1)}Hz, octave: ${s.toFixed(1)}Hz, fifth: ${l.toFixed(1)}Hz`)}else M=this.synths[u+"Tone"]||this.synths.midTone,M?(this.managePolyphonyOverflow(M),M.triggerAttackRelease(m,C,S,p)):console.error(`No synth available for neuron ${n}`)}else M=o.useMembrane||f<.01&&y<.1&&v<.1?this.synths[u+"Membrane"]||this.synths.midMembrane||this.synths[u+"Tone"]:o.useSustainedTone||v>.5?this.synths[u+"Sustain"]||this.synths.midSustain||this.synths[u+"Tone"]:this.synths[u+"Tone"]||this.synths.midTone,M?(this.managePolyphonyOverflow(M),M.triggerAttackRelease(m,C,S,p)):console.error(`No synth available for neuron ${n}`)}catch(Ze){console.error("Error playing neuron firing sound:",Ze)}else console.warn("Audio context not running, can't play sound")}setMembraneSynthParams(e,t,n,o,i){let s=i;s-=Math.max(0,Math.min(8,Math.abs(i)/1.5)),e.set({pitchDecay:(t.pitchDecay||.05)*(1-o+1),oscillator:{type:t.oscillator?.type||"triangle"},envelope:{attack:t.envelope?.attack||.002,decay:(t.envelope?.decay||.3)*n,sustain:Math.min(1,Math.max(0,t.envelope?.sustain||.2)),release:t.envelope?.release||.8,attackCurve:t.envelope?.attackCurve||"exponential"},volume:s})}setTonalSynthParams(e,t,n,o){let i=o;i-=Math.max(0,Math.min(6,Math.abs(o)/2));const s=t.name?.toLowerCase().includes("synth lead");i-=s?3:5,e.set({detune:t.detune||0,oscillator:{type:t.oscillator?.type||"sine"},envelope:{attack:t.envelope?.attack||.002,decay:(t.envelope?.decay||.3)*(1+.5*(1-n)),sustain:Math.min(1,Math.max(0,t.envelope?.sustain||.2)),release:t.envelope?.release||.8,attackCurve:t.envelope?.attackCurve||"exponential",decayCurve:t.envelope?.decayCurve||"exponential",releaseCurve:t.envelope?.releaseCurve||"exponential"},volume:i})}setSustainSynthParams(e,t,n){let o=n-6;const i=t.name?.toLowerCase().includes("pad");i&&(o-=2),e.set({oscillator:{type:t.oscillator?.type||"sine"},envelope:{attack:2*(t.envelope?.attack||.002),decay:2*(t.envelope?.decay||.3),sustain:Math.min(1,Math.max(0,1.2*(t.envelope?.sustain||.2))),release:2.5*(t.envelope?.release||.8)},volume:o})}applyNeuronParametersToBus(e,t,n){if(this.activeVoices.has(e))return;if(!t||!t.eq)return void console.warn("Cannot apply parameters to bus - invalid bus or missing components");let o=se();o<=this.lastAudioTime&&(o=this.lastAudioTime+.01),this.lastAudioTime=o;try{if(n.filter||n.filterType&&n.filterFrequency){const e=n.filter?.type||n.filterType||"lowpass",i=n.filter?.frequency||n.filterFrequency||5e3,s=n.filter?.q||n.filterQ||1;t.filter.type=e,t.filter.frequency.cancelScheduledValues(o),t.filter.frequency.setValueAtTime(t.filter.frequency.value,o),t.filter.frequency.linearRampToValueAtTime(i,o+.05),t.filter.Q.cancelScheduledValues(o),t.filter.Q.setValueAtTime(t.filter.Q.value,o),t.filter.Q.linearRampToValueAtTime(s,o+.05)}if(n.eq&&t.eq&&(t.eq.low.value=n.eq.low||0,t.eq.mid.value=n.eq.mid||0,t.eq.high.value=n.eq.high||0),n.effects||void 0!==n.reverbSend||void 0!==n.delaySend){const e=n.effects?.reverbSend??n.reverbSend??.2,i=n.effects?.delaySend??n.delaySend??.15;t.reverb&&t.reverb.wet&&(t.reverb.wet.cancelScheduledValues(o),t.reverb.wet.setValueAtTime(t.reverb.wet.value,o),t.reverb.wet.linearRampToValueAtTime(e,o+.05)),t.delay&&t.delay.wet&&(t.delay.wet.cancelScheduledValues(o),t.delay.wet.setValueAtTime(t.delay.wet.value,o),t.delay.wet.linearRampToValueAtTime(i,o+.05))}if(n.modulation||void 0!==n.tremoloFreq||void 0!==n.tremoloDepth||void 0!==n.vibratoFreq||void 0!==n.vibratoDepth){const e=n.modulation?.tremoloFreq??n.tremoloFreq??4,o=n.modulation?.tremoloDepth??n.tremoloDepth??0,i=n.modulation?.vibratoFreq??n.vibratoFreq??5,s=n.modulation?.vibratoDepth??n.vibratoDepth??0;t.tremolo&&(t.tremolo.frequency.value=e,t.tremolo.depth.value=o,t.tremolo.wet.value=o>0?1:0),t.vibrato&&(t.vibrato.frequency.value=i,t.vibrato.depth.value=s,t.vibrato.wet.value=s>0?1:0)}}catch(i){console.error("Error applying parameters to bus:",i)}}assignFrequencyRange(e){if(1===e){const t="F2",n=R(t).toFrequency();return this.neuronFrequencies.set(e,{range:"low",freqIndex:0,baseFreq:n,customFreq:null}),console.log(`%c[OSCILLATOR BANK] Assigned ${t} (${n.toFixed(2)}Hz) in low range to first neuron`,"color: #00ff00;"),this.neuronFrequencies.get(e)}const t=Object.keys(this.frequencyRanges);let n=t[e%t.length];const o=this.melodicPattern[this.currentPatternIndex];this.currentPatternIndex=(this.currentPatternIndex+1)%this.melodicPattern.length;const i=this.frequencyRanges[n];if(!(i&&i.length||(console.error(`No notes found for range "${n}". Falling back to mid range.`),n="mid",this.frequencyRanges[n])))return console.error("Critical error: No mid range found. Check frequencyRanges configuration."),{range:"mid",freqIndex:0,baseFreq:440,customFreq:null};const s=i[o%i.length];let r=440;if(s)try{r=R(s).toFrequency()}catch(a){console.warn(`Could not convert note ${s} to frequency, using default`)}return this.neuronFrequencies.set(e,{range:n,freqIndex:o,baseFreq:r,customFreq:null}),console.log(`%c[OSCILLATOR BANK] Assigned ${s} (${r.toFixed(2)}Hz) in ${n} range to neuron ${e}`,"color: #00ff00;"),this.lastFreqIndex>=i.length-1?this.melodyDirection=-1:this.lastFreqIndex<=0&&(this.melodyDirection=1),this.lastFreqIndex=(this.lastFreqIndex+this.melodyDirection)%i.length,this.neuronFrequencies.get(e)}getNeuronSoundParameters(e){const t=this.neuronSoundOverrides.get(e)||{};let n=440;if(this.neuronFrequencies.has(e)){const t=this.neuronFrequencies.get(e);n=t.customFreq||t.baseFreq||n}else{const t=this.assignFrequencyRange(e);n=t.customFreq||t.baseFreq||n}const o={attack:.002,decay:.3,sustain:.2,release:.8,pitchDecay:.05,detune:0,neuronVolume:0,note:n,oscillatorType:"triangle",filterType:"lowpass",filterFrequency:5e3,filterQ:1,reverbSend:.2,delaySend:.15,tremoloFreq:4,tremoloDepth:0,vibratoFreq:5,vibratoDepth:0,useSustainedTone:!1},i={...o,...t,note:Number(t.note||o.note)};return i.envelope||(i.envelope={attack:i.attack||o.attack,decay:i.decay||o.decay,sustain:i.sustain||o.sustain,release:i.release||o.release,attackCurve:i.attackCurve||"exponential",decayCurve:i.decayCurve||"exponential",releaseCurve:i.releaseCurve||"exponential"}),i.oscillator||(i.oscillator={type:i.oscillatorType||o.oscillatorType}),i.filter||(i.filter={type:i.filterType||o.filterType,frequency:i.filterFrequency||o.filterFrequency,Q:i.filterQ||o.filterQ}),i.effects||(i.effects={reverbSend:i.reverbSend??o.reverbSend,delaySend:i.delaySend??o.delaySend}),i.modulation||(i.modulation={tremoloFreq:i.tremoloFreq??o.tremoloFreq,tremoloDepth:i.tremoloDepth??o.tremoloDepth,vibratoFreq:i.vibratoFreq??o.vibratoFreq,vibratoDepth:i.vibratoDepth??o.vibratoDepth}),i}getNeuronSynthParams(e){return this.getNeuronSoundParameters(e)}selectNeuron(e){if(null!==e){if(console.log(`SoundManager: Selecting neuron ${e}`),this.selectedNeuronId,this.selectedNeuronId=e,this.neuronSoundOverrides.has(e))this.lastSelectedNeuronParams=JSON.parse(JSON.stringify(this.neuronSoundOverrides.get(e))),console.log(`Stored sound settings from neuron ${e} for future new neurons`);else if(console.log(`Creating initial sound settings for neuron ${e}`),this.lastSelectedNeuronParams)console.log(`Applying sound settings from previous neuron to neuron ${e}`),this.neuronSoundOverrides.set(e,JSON.parse(JSON.stringify(this.lastSelectedNeuronParams)));else{const t=this.getDefaultSynthParams();this.neuronSoundOverrides.set(e,{pitchDecay:t.pitchDecay,detune:t.detune,neuronVolume:t.neuronVolume,useSustainedTone:t.useSustainedTone,envelope:{attack:t.attack,decay:t.decay,sustain:t.sustain,release:t.release},oscillator:{type:t.oscillatorType},filter:{type:t.filterType,frequency:t.filterFrequency,Q:t.filterQ},effects:{reverbSend:t.reverbSend,delaySend:t.delaySend},modulation:{tremoloFreq:t.tremoloFreq,tremoloDepth:t.tremoloDepth,vibratoFreq:t.vibratoFreq,vibratoDepth:t.vibratoDepth}})}this.neuronFrequencies.has(e)||(console.log(`Assigning frequency data for neuron ${e}`),this.assignFrequencyRange(e));for(const t of window.circles||[])if(t&&t.neuron&&t.neuron.id===e){t.position.x,t.position.y,t.position.z,t.scale.x;break}}else this.deselectNeuron()}deselectNeuron(){this.selectedNeuronId=null}getDefaultSynthParams(){return{attack:.002,decay:.3,sustain:.2,release:.8,pitchDecay:.05,detune:0,neuronVolume:0,note:this.baseFrequency,oscillatorType:"triangle",attackCurve:"exponential",useSustainedTone:!1,filterType:"lowpass",filterFrequency:5e3,filterQ:1,reverbSend:.2,delaySend:.15,tremoloFreq:4,tremoloDepth:0,vibratoFreq:5,vibratoDepth:0}}updateSelectedSynthParam(e,t){if(null===this.selectedNeuronId)return;console.log(`%c[OSCILLATOR BANK] Updating parameter ${e} to ${t}`,"color: #00aaff;"),this.neuronSoundOverrides.has(this.selectedNeuronId)||this.neuronSoundOverrides.set(this.selectedNeuronId,{});const n=this.neuronSoundOverrides.get(this.selectedNeuronId);if("note"===e){this.neuronFrequencies.has(this.selectedNeuronId)||this.assignFrequencyRange(this.selectedNeuronId);this.neuronFrequencies.get(this.selectedNeuronId).customFreq=t,n.note=t}else if(["attack","decay","sustain","release","attackCurve","decayCurve","releaseCurve"].includes(e))n.envelope||(n.envelope={}),n.envelope[e]=t,n[e]=t;else if("oscillatorType"===e)n.oscillator||(n.oscillator={}),n.oscillator.type=t,n[e]=t,this.oscillatorBank.has(t)||(console.warn(`Oscillator type "${t}" not found in oscillator bank. Using "sine" instead.`),n.oscillator.type="sine"),window.settings&&(window.settings.selectedOscillatorType=t,console.log(`%c[OSCILLATOR BANK] Updated oscillator type to ${t} for neuron ${this.selectedNeuronId}`,"color: #00ff00;"));else if(["filterType","filterFrequency","filterQ"].includes(e)){n.filter||(n.filter={});const o=e.replace("filter","").toLowerCase();if(n.filter[o]=t,n[e]=t,this.buses&&this.buses.selected&&this.buses.selected.filter)if("type"===o)this.buses.selected.filter.type=t;else if("frequency"===o){const e=se();this.buses.selected.filter.frequency.cancelScheduledValues(e),this.buses.selected.filter.frequency.setValueAtTime(this.buses.selected.filter.frequency.value,e),this.buses.selected.filter.frequency.linearRampToValueAtTime(t,e+.05)}else if("q"===o){const e=se();this.buses.selected.filter.Q.cancelScheduledValues(e),this.buses.selected.filter.Q.setValueAtTime(this.buses.selected.filter.Q.value,e),this.buses.selected.filter.Q.linearRampToValueAtTime(t,e+.05)}}else["reverbSend","delaySend"].includes(e)?(n.effects||(n.effects={}),n.effects[e]=t,n[e]=t,this.buses&&this.buses.selected&&("reverbSend"===e&&this.buses.selected.reverb?this.buses.selected.reverb.wet.value=t:"delaySend"===e&&this.buses.selected.delay&&(this.buses.selected.delay.wet.value=t))):["tremoloFreq","tremoloDepth","vibratoFreq","vibratoDepth"].includes(e)?(n.modulation||(n.modulation={}),n.modulation[e]=t,n[e]=t,this.buses&&this.buses.selected&&("tremoloFreq"===e&&this.buses.selected.tremolo?this.buses.selected.tremolo.frequency.value=t:"tremoloDepth"===e&&this.buses.selected.tremolo?(this.buses.selected.tremolo.depth.value=t,this.buses.selected.tremolo.wet.value=t>0?1:0):"vibratoFreq"===e&&this.buses.selected.vibrato?this.buses.selected.vibrato.frequency.value=t:"vibratoDepth"===e&&this.buses.selected.vibrato&&(this.buses.selected.vibrato.depth.value=t,this.buses.selected.vibrato.wet.value=t>0?1:0))):(n[e]=t,"name"===e&&console.log(`%c[OSCILLATOR BANK] Set preset name to "${t}" for neuron ${this.selectedNeuronId}`,"color: #00aaff;"));if(this.neuronSoundOverrides.set(this.selectedNeuronId,n),window.settings){const n=`selected${e.charAt(0).toUpperCase()+e.slice(1)}`;window.settings[n]=t,window.selectedSynthFolder&&window.selectedSynthFolder.refresh()}window.settings&&window.settings.previewSounds&&this.triggerPreviewSound()}triggerPreviewSound(){window.settings&&window.settings.previewSounds&&(this.previewDebounceTimeout&&clearTimeout(this.previewDebounceTimeout),this.previewDebounceTimeout=setTimeout((()=>{null!==this.selectedNeuronId&&(this.playNeuronFiring(.7,.5,this.selectedNeuronId,!0,!0,0),window.drawVisualizations&&window.drawVisualizations())}),50))}playSmallSound(e=.5,t=.5,n=.3){this.ensureAudioContext();const o=600+600*e,i=.1+.2*(1-t),s=this.buses.selected;if(!s||!s.eq)return void console.warn("Cannot play small sound - bus not available");const r=this.getClosestFrequency(o),a=this._getOrCreateOscillator("sine",r);if(!a)return void console.warn("No oscillator found for UI sound");const l=new O(0).connect(s.gain);a.oscillator.connect(l);const c=se();l.gain.cancelScheduledValues(c),l.gain.setValueAtTime(0,c),l.gain.linearRampToValueAtTime(.7*n,c+.01),l.gain.linearRampToValueAtTime(0,c+.6*i),setTimeout((()=>{l.dispose()}),1e3*i+200)}setVolume(e){if(this.volume=e,this.finalMixer){const t=Math.pow(10,e/20);this.finalMixer.gain.value=t}console.log(`Set master volume to ${e}dB (gain: ${Math.pow(10,e/20).toFixed(3)})`)}setVolumeNormalization(e){this.volumeNormalization=e,console.log(`Set volume normalization factor to ${e.toFixed(2)}`)}setPreviewSounds(e){this.playPreviewSounds=e,console.log(`Preview sounds ${e?"enabled":"disabled"} - ${e?"Only selected neuron":"All neurons"} will play`)}testSound(){console.log("Playing test sound..."),this.ensureAudioContext();const e=new B({frequency:440,type:"sine"}).start(),t=new O(0).toDestination();e.connect(t);const n=se();t.gain.setValueAtTime(0,n),t.gain.linearRampToValueAtTime(.5,n+.01),t.gain.linearRampToValueAtTime(0,n+.5),setTimeout((()=>{e.stop(),e.dispose(),t.dispose(),console.log("Test sound completed")}),600)}silenceNeuron(e){if(!e)return;console.log(`Silencing neuron ${e}`);const t=this.neuronBusAssignments.get(e)||"mid",n=this.buses[t];if(n&&n.gain){const e=n.gain.gain.value;n.gain.gain.setValueAtTime(0,se()),setTimeout((()=>{n.gain.gain.setValueAtTime(e,se())}),100)}this.pendingRestorations&&this.pendingRestorations.has(e)&&(clearTimeout(this.pendingRestorations.get(e)),this.pendingRestorations.delete(e)),this.activeVoices&&this.activeVoices.delete(e),this.neuronSoundOverrides.delete(e),this.neuronFrequencies.delete(e),this.neuronBusAssignments.delete(e),this.selectedNeuronId===e&&(this.selectedNeuronId=null)}silenceAllNeurons(){console.log("Silencing all neurons"),this._lastNeuronSoundState={neuronSoundOverrides:new Map(this.neuronSoundOverrides),neuronFrequencies:new Map(this.neuronFrequencies),neuronBusAssignments:new Map(this.neuronBusAssignments)},Object.values(this.buses).forEach((e=>{if(e&&e.gain){const t=e.gain.gain.value;e.gain.gain.setValueAtTime(0,se()),setTimeout((()=>{e.gain.gain.setValueAtTime(t,se())}),100)}})),this.pendingRestorations&&(this.pendingRestorations.forEach((e=>{clearTimeout(e)})),this.pendingRestorations.clear()),this.activeVoices.clear(),this.neuronSoundOverrides.clear(),this.neuronFrequencies.clear(),this.neuronBusAssignments.clear(),this.voicePriorities.clear(),this.selectedNeuronId=null}restoreAllNeuronSounds(){this._lastNeuronSoundState&&(this.neuronSoundOverrides=new Map(this._lastNeuronSoundState.neuronSoundOverrides),this.neuronFrequencies=new Map(this._lastNeuronSoundState.neuronFrequencies),this.neuronBusAssignments=new Map(this._lastNeuronSoundState.neuronBusAssignments),this._lastNeuronSoundState=null,console.log("Restored neuron sound state from backup.")),window.circles&&(window.circles.forEach((e=>{if(e&&e.neuron){const t=e.neuron.id;if(this.neuronSoundOverrides.has(t)&&this.neuronFrequencies.has(t)){const e=this.neuronSoundOverrides.get(t);this.neuronSoundOverrides.set(t,{...e});const n=this.neuronFrequencies.get(t);this.neuronFrequencies.set(t,{...n})}if(!this.neuronBusAssignments.has(t)){const n=this.getNeuronSynthParams?this.getNeuronSynthParams(t):this.getNeuronSoundParameters(t);e.neuron.outgoingConnections.size;const o=e.neuron.dcInput>0,i=this.getBusForNeuron(t,!1,o,n);this.neuronBusAssignments.set(t,i)}}})),console.log("Restored all neuron sound assignments after audio context resume."))}refreshDCNeurons(){}trackSoundTypeActivity(){const e=performance.now();e-this.recentSoundTypes.bass.lastPlayed<200?this.recentSoundTypes.bass.isPlaying=!0:this.recentSoundTypes.bass.isPlaying=!1,e-this.recentSoundTypes.hihat.lastPlayed<200?this.recentSoundTypes.hihat.isPlaying=!0:this.recentSoundTypes.hihat.isPlaying=!1,this.recentSoundTypes.bass.isPlaying&&this.recentSoundTypes.hihat.isPlaying?this.finalMixer&&this.finalMixer.gain&&(this.finalMixer.gain.value=.85):this.finalMixer&&this.finalMixer.gain&&(this.finalMixer.gain.value=.92)}dispose(){console.log("%c[OSCILLATOR BANK] Disposing all oscillators and audio resources","color: #ff0000; font-weight: bold;"),this.oscillatorBank.forEach(((e,t)=>{e.forEach(((e,t)=>{e.gain&&e.gain.dispose(),e.oscillator&&e.oscillator.dispose()})),e.clear()})),this.oscillatorBank.clear(),this.buses&&Object.values(this.buses).forEach((e=>{e.gain&&e.gain.dispose(),e.eq&&e.eq.dispose(),e.compressor&&e.compressor.dispose(),e.reverb&&e.reverb.dispose(),e.delay&&e.delay.dispose()})),this.masterLimiter&&this.masterLimiter.dispose(),this.masterCompressor&&this.masterCompressor.dispose(),this.finalMixer&&this.finalMixer.dispose(),this.waveformAnalyzer&&this.waveformAnalyzer.dispose(),this.spatialAudioNodes.forEach((e=>{e&&"function"==typeof e.dispose&&e.dispose()})),this.spatialAudioNodes.clear(),this.spatialAudioPanners.clear(),console.log("%c[OSCILLATOR BANK] All audio resources disposed","color: #ff0000; font-weight: bold;")}managePolyphonyOverflow(e){if(e&&e._activeVoices&&e._activeVoices.size>=e.options.maxPolyphony-2){console.log(`%c[POLYPHONY] Managing polyphony for synth - active voices: ${e._activeVoices.size}/${e.options.maxPolyphony}`,"color: #ff9900;");const t=Array.from(e._activeVoices.entries());t.sort(((e,t)=>e[1].startTime-t[1].startTime));t.slice(0,Math.min(4,Math.ceil(.25*t.length))).forEach((t=>{try{const n=t[0];e.triggerRelease(n,se()),console.log(`%c[POLYPHONY] Released old note ${n} to make room for new notes`,"color: #ff9900;")}catch(n){console.warn(`Error releasing note: ${n.message}`)}}))}}}(He,We,Ve),console.log("Initializing WorkerManager for decoupled audio/simulation processing"),window.workerManager=new class{constructor(e){this.soundManager=e,this.simulationWorker=null,this.audioWorker=null,this.isInitialized=!1,this.neuronState=new Map,this.connectionState=new Map,this.lastSyncTime=0,this.pendingAudioEvents=[],this.stats={simulationFPS:0,audioEventsPerSecond:0,audioQueueLength:0,simulationQueueLength:0},this.enableDebugLogging=!1,this.initialize(),setTimeout((()=>this.initializeWithExistingNeurons()),100),this.handleSimulationMessage=this.handleSimulationMessage.bind(this),this.handleAudioMessage=this.handleAudioMessage.bind(this),this.processAudioEvents=this.processAudioEvents.bind(this)}initialize(){try{this.log("Initializing workers..."),this.simulationWorker=new Worker("/worker/simulationWorker.js"),this.simulationWorker.onmessage=this.handleSimulationMessage.bind(this),this.audioWorker=new Worker("/worker/audioWorker.js"),this.audioWorker.onmessage=this.handleAudioMessage.bind(this),this.simulationWorker.postMessage({type:"init"}),this.audioWorker.postMessage({type:"init"}),this.isInitialized=!0,this.log("Workers initialized"),this.syncInterval=setInterval((()=>this.syncState()),5e3),this.processAudioEvents()}catch(Ze){me("Failed to initialize workers:",Ze),this.isInitialized=!1}}initializeWithExistingNeurons(){if(this.isInitialized)try{window.circles&&window.circles.length>0&&(this.log(`Adding ${window.circles.length} existing neurons to simulation worker`),window.circles.forEach((e=>{e.neuron&&this.addNeuron(e.neuron)})),window.connectionManager&&window.connectionManager.connections&&(this.log("Adding existing connections to simulation worker"),window.connectionManager.connections.forEach(((e,t)=>{e.source&&e.target&&e.source.neuron&&e.target.neuron&&this.addConnection({id:t,sourceId:e.source.neuron.id,targetId:e.target.neuron.id,weight:e.weight||.5,delay:e.delay||0,speed:e.speed||.5})}))))}catch(Ze){me("Error initializing with existing neurons:",Ze)}}handleSimulationMessage(e){const t=e.data;switch(t.type){case"firingEvents":this.handleFiringEvents(t.events);break;case"stateUpdate":t.neurons.forEach((e=>{this.neuronState.set(e.id,e)}));break;case"syncComplete":this.log(`Simulation sync complete: ${performance.now()-t.time}ms`)}}handleAudioMessage(e){const t=e.data;switch(t.type){case"playSound":this.pendingAudioEvents.push(t.event);break;case"stats":this.stats.audioQueueLength=t.queueLength,this.stats.audioEventsPerSecond=t.totalProcessed}}handleFiringEvents(e){e.forEach((e=>{if(window.circles){const t=window.circles.find((t=>t.neuron&&t.neuron.id===e.neuronId));t&&(this.flashNeuron(t),e.connections.forEach((e=>{const n=window.circles.find((t=>t.neuron&&t.neuron.id===e.targetId));n&&this.createParticle(t,n,e.weight,e.speed)})))}let t={};this.soundManager&&"function"==typeof this.soundManager.getNeuronSoundParameters&&(t=this.soundManager.getNeuronSoundParameters(e.neuronId)||{}),this.audioWorker.postMessage({type:"neuronFired",neuronId:e.neuronId,timestamp:e.timestamp,weight:e.connections.length>0?e.connections[0].weight:.5,speed:e.connections.length>0?e.connections[0].speed:.5,hasDC:e.hasDC,parameters:t})}))}processAudioEvents(){const e=()=>{if(this.pendingAudioEvents.length>0){const e=5;this.pendingAudioEvents.splice(0,e).forEach((e=>{this.soundManager&&"function"==typeof this.soundManager.playNeuronFiring&&this.soundManager.playNeuronFiring(e.weight||.5,e.speed||.5,e.neuronId,!1,e.hasDC)}))}requestAnimationFrame(e)};e()}flashNeuron(e){if(!e||!e.material)return;const t=e.material.color.clone(),n=new r(1,1,1);e.originalColor||(e.originalColor=t.clone()),e.material.color.copy(n),setTimeout((()=>{e&&e.material&&e.material.color.copy(t)}),50)}createParticle(e,t,n=.5,o=.5){if(window.scene&&window.particleSystem&&"function"==typeof window.particleSystem.createParticle){const i=e.position.clone();i.y=.05;const s=t.position.clone();s.y=.05,window.particleSystem.createParticle(i,s,e.neuron.id,t.neuron.id,n,o)}}updateParticles(e){window.particleSystem&&"function"==typeof window.particleSystem.update&&window.particleSystem.update(e)}addNeuron(e){if(!this.isInitialized)return;const t={id:e.id,type:e.type||"LIF",threshold:e.threshold,restingPotential:e.restingPotential,currentPotential:e.currentPotential,refractoryPeriod:e.refractoryPeriod,dcInput:e.dcInput||0,decayRate:e.decayRate,position:{x:e.position?e.position.x:0,y:e.position?e.position.y:0,z:e.position?e.position.z:0},oscillatorFrequency:e.oscillatorFrequency||10};this.neuronState.set(e.id,t),this.simulationWorker.postMessage({type:"addNeuron",neuron:t})}updateNeuron(e,t){if(this.isInitialized){if(this.neuronState.has(e)){const n=this.neuronState.get(e);Object.assign(n,t)}this.simulationWorker.postMessage({type:"updateNeuron",neuronId:e,properties:t})}}removeNeuron(e){this.isInitialized&&(this.neuronState.delete(e),this.simulationWorker.postMessage({type:"removeNeuron",neuronId:e}))}setDCInput(e,t){if(this.isInitialized){if(this.neuronState.has(e)){this.neuronState.get(e).dcInput=Math.max(0,Math.min(1,t))}this.simulationWorker.postMessage({type:"setDCInput",neuronId:e,value:t})}}addConnection(e){if(this.isInitialized)try{this.simulationWorker.postMessage({type:"addConnection",connection:e}),this.connectionState.set(e.id,e),this.log(`Added connection from ${e.sourceId} to ${e.targetId}`)}catch(Ze){me("Error adding connection to worker:",Ze)}}updateConnection(e,t){if(this.isInitialized){if(this.connectionState.has(e)){const n=this.connectionState.get(e);Object.assign(n,t)}this.simulationWorker.postMessage({type:"updateConnection",connectionId:e,properties:t})}}removeConnection(e){this.isInitialized&&(this.connectionState.delete(e),this.simulationWorker.postMessage({type:"removeConnection",connectionId:e}))}syncState(){this.isInitialized&&(this.lastSyncTime=performance.now(),this.simulationWorker.postMessage({type:"sync",neurons:Array.from(this.neuronState.values()),connections:Array.from(this.connectionState.values()),time:this.lastSyncTime}))}pause(){this.isInitialized&&(this.simulationWorker.postMessage({type:"pause"}),this.audioWorker.postMessage({type:"pause"}))}resume(){this.isInitialized&&(this.simulationWorker.postMessage({type:"resume"}),this.audioWorker.postMessage({type:"resume"}))}setSimulationRate(e){this.isInitialized&&this.simulationWorker.postMessage({type:"updateRate",rate:e})}updateAudioSettings(e){this.isInitialized&&this.audioWorker.postMessage({type:"updateSettings",settings:e})}getStats(){return this.stats}cleanup(){this.syncInterval&&(clearInterval(this.syncInterval),this.syncInterval=null),this.simulationWorker&&(this.simulationWorker.terminate(),this.simulationWorker=null),this.audioWorker&&(this.audioWorker.terminate(),this.audioWorker=null),this.isInitialized=!1,this.neuronState.clear(),this.connectionState.clear(),this.pendingAudioEvents=[]}log(e){this.enableDebugLogging}}(window.soundManager),console.log("Initializing HarmonicSystem for proximity-based harmonic relationships"),window.harmonicSystem=new class{constructor(e,t){this.scene=e,this.soundManager=t,this.harmonyStrength=.5,this.maxInfluenceDistance=2.5,this.minInfluenceDistance=.6,this.learningRate=.1,this.forgetRate=.001,this.relationships=new Map,this.currentTonalCenter=null,this.leadingNeurons=[],this.activeNeurons=new Set,this.scales={major:[0,2,4,5,7,9,11],minor:[0,2,3,5,7,8,10],pentatonic:[0,2,4,7,9],blues:[0,3,5,6,7,10]},this.relationshipVisuals=new Map,this.visualizationEnabled=!0,this.createHelperMaterials(),this.isDebugMode=!1,this.historyLength=50,this.updateHistory=[],this.frameCount=0}createHelperMaterials(){this.harmonicLineMaterial=new l({color:65535,transparent:!0,opacity:1,linewidth:3,depthTest:!1,fog:!1})}update(){if(!window.circles||!this.soundManager)return;const e=window.circles.filter((e=>e&&e.neuron&&e.position)),t=window.settings?.dcSpeedMultiplier||0,n=t>5;if(n&&this.frameCount%2!=0)this.frameCount=(this.frameCount+1)%1e4;else{if(this.frameCount=(this.frameCount+1)%1e4,this.updateActiveNeurons(e),n&&this.activeNeurons.size>10)return fe(`%c[HARMONIC SYSTEM] Limiting processing due to ${this.activeNeurons.size} active neurons at DC speed ${t}`,"color: #ffaa00;"),void this.updateRelationships(e);this.detectTonalCenter(),this.updateRelationships(e),this.applyHarmonicInfluence(e),this.visualizationEnabled&&this.updateVisualizations(),this.updateDebugInfo()}}updateActiveNeurons(e){for(const t of this.activeNeurons){const n=e.find((e=>e.neuron.id===t));n&&n.neuron.isFiring||this.activeNeurons.delete(t)}e.forEach((e=>{e.neuron.isFiring&&this.activeNeurons.add(e.neuron.id)}))}detectTonalCenter(){if(0===this.activeNeurons.size)return;const e=new Array(12).fill(0);for(const s of this.activeNeurons){const t=this.getNeuronFrequency(s);if(t){const n=this.frequencyToPitchClass(t);null!==n&&e[n]++}}let t=0,n=0;e.forEach(((e,o)=>{e>t&&(t=e,n=o)}));let o=0,i="major";for(const[s,r]of Object.entries(this.scales)){let e=0;for(const o of this.activeNeurons){const t=this.getNeuronFrequency(o);if(t){const o=this.frequencyToPitchClass(t);if(null!==o){const t=(o-n+12)%12;r.includes(t)&&e++}}}const t=this.activeNeurons.size>0?e/this.activeNeurons.size:0;t>o&&(o=t,i=s)}this.currentTonalCenter={root:n,scale:i,confidence:o},o>.5&&this.identifyLeadingNeurons(),this.isDebugMode&&fe(`Detected tonal center: ${R(n,"midi").toNote()} ${i} (confidence: ${o.toFixed(2)})`)}identifyLeadingNeurons(){if(this.leadingNeurons=[],!this.currentTonalCenter||0===this.activeNeurons.size)return;const e=[];for(const t of this.activeNeurons){let n=1;const o=this.getNeuronFrequency(t);if(o){const e=this.frequencyToPitchClass(o);if(null!==e){const t=(e-this.currentTonalCenter.root+12)%12;0===t?n+=3:7===t||5===t?n+=2:4!==t&&3!==t||(n+=1.5);this.scales[this.currentTonalCenter.scale].includes(t)&&(n+=1)}}const i=this.getNeuronById(t);i&&i.neuron&&(n+=2*i.neuron.dcInput),e.push({id:t,score:n})}e.sort(((e,t)=>t.score-e.score)),this.leadingNeurons=e.slice(0,3).map((e=>e.id)),this.isDebugMode&&fe("Leading neurons:",this.leadingNeurons)}updateRelationships(e){for(let t=0;t<e.length;t++){const n=e[t],o=n.neuron.id;this.relationships.has(o)||this.relationships.set(o,new Map);const i=this.relationships.get(o);for(let s=0;s<e.length;s++){if(t===s)continue;const r=e[s],a=r.neuron.id,l=n.position.distanceTo(r.position);let c;i.has(a)?c=i.get(a):(c={sourceId:o,targetId:a,strength:0,learningTime:0,lastUpdateTime:Date.now()},i.set(a,c)),this.updateRelationshipStrength(c,l)}for(const[e,t]of i.entries())t.strength<.02&&(i.delete(e),this.removeRelationshipVisualization(o,e))}}updateRelationshipStrength(e,t){const n=Date.now(),o=(n-e.lastUpdateTime)/1e3;e.lastUpdateTime=n;const i=Math.max(0,Math.min(1,(this.maxInfluenceDistance-t)/(this.maxInfluenceDistance-this.minInfluenceDistance)));if(t<=this.maxInfluenceDistance){e.learningTime+=o*i;const t=1-Math.exp(-e.learningTime/10);e.strength=Math.min(1,e.strength+this.learningRate*i*t*o*this.harmonyStrength)}else e.strength=Math.max(0,e.strength-this.forgetRate*o),e.learningTime=Math.max(0,e.learningTime-this.forgetRate*o*5)}applyHarmonicInfluence(e){if(!(this.harmonyStrength<=0)&&this.currentTonalCenter)for(const t of e){const n=t.neuron.id;if(t.neuron.isHarmonyAnchor)continue;let o=0,i=[];for(const s of e){const e=s.neuron.id;if(e===n)continue;const r=this.getRelationship(e,n);if(!r||r.strength<=0)continue;const a=this.calculatePitchAdjustment(s,t,r);a&&(a.influence*=r.strength,o+=a.influence,i.push(a))}i.length>0&&o>0&&(i.forEach((e=>{e.influence/=o})),this.applyPitchAdjustment(t,i))}}calculatePitchAdjustment(e,t,n){const o=this.getNeuronFrequency(e.neuron.id),i=this.getNeuronFrequency(t.neuron.id);if(!o||!i)return null;const s=this.frequencyToPitchClass(o),r=this.frequencyToPitchClass(i);if(null===s||null===r)return null;const a=this.scales[this.currentTonalCenter.scale]||this.scales.major;this.currentTonalCenter.root;const l=(r-this.currentTonalCenter.root+12)%12,c=a.includes(l);if(c&&this.leadingNeurons.includes(e.neuron.id))return{influence:1,targetPitchClass:r,adjustment:0};if(!c){let t=null,o=12;for(const e of a){const n=(this.currentTonalCenter.root+e)%12,i=Math.min(Math.abs(r-n),12-Math.abs(r-n));i<o&&(o=i,t=n)}if(null!==t){let o=t-r;o>6&&(o-=12),o<-6&&(o+=12);const i=this.leadingNeurons.includes(e.neuron.id)?2:1;return{influence:n.strength*i,targetPitchClass:t,adjustment:o}}}return null}applyPitchAdjustment(e,t){if(!e||!e.neuron||0===t.length)return;const n=e.neuron.id,o=this.getNeuronFrequency(n);if(!o)return;let i=0;if(t.forEach((e=>{i+=e.adjustment*e.influence})),Math.abs(i)<.25)return;const s=Math.abs(i)>=.5?Math.sign(i)*Math.round(Math.abs(i)):i,r=o*Math.pow(2,s/12);this.updateNeuronFrequency(n,r)}updateVisualizations(){}createOrUpdateRelationshipVisualization(t,n,o){const i=this.getNeuronById(t),s=this.getNeuronById(n);if(!i||!s||!this.scene)return;const r=`${t}_${n}`;if(this.relationshipVisuals.has(r)){const e=this.relationshipVisuals.get(r),t=e.geometry.attributes.position.array;t[0]=i.position.x,t[1]=i.position.y+.2,t[2]=i.position.z,t[3]=s.position.x,t[4]=s.position.y+.2,t[5]=s.position.z,e.geometry.attributes.position.needsUpdate=!0,e.material.opacity=.8+.2*o}else{const t=new e,n=new Float32Array(6);n[0]=i.position.x,n[1]=i.position.y+.2,n[2]=i.position.z,n[3]=s.position.x,n[4]=s.position.y+.2,n[5]=s.position.z,t.setAttribute("position",new S(n,3));const a=this.harmonicLineMaterial.clone();a.opacity=.8+.2*o;const l=new C(t,a);l.renderOrder=1e3,this.scene.add(l),this.relationshipVisuals.set(r,l)}}removeRelationshipVisualization(e,t){const n=`${e}_${t}`;if(this.relationshipVisuals.has(n)){const e=this.relationshipVisuals.get(n);e&&e.parent&&e.parent.remove(e),e&&(e.geometry&&e.geometry.dispose(),e.material&&e.material.dispose()),this.relationshipVisuals.delete(n)}}getNeuronById(e){return window.circles?window.circles.find((t=>t&&t.neuron&&t.neuron.id===e)):null}getNeuronFrequency(e){if(!this.soundManager||!this.soundManager.neuronFrequencies)return null;const t=this.soundManager.neuronFrequencies.get(e);return t?t.customFreq||t.baseFreq:null}getRelationship(e,t){return this.relationships.has(e)&&this.relationships.get(e).get(t)||null}frequencyToPitchClass(e){if(!e||e<=0)return null;return Math.round(69+12*Math.log2(e/440))%12}updateNeuronFrequency(e,t){if(!this.soundManager||!this.soundManager.neuronFrequencies)return;const n=this.soundManager.neuronFrequencies.get(e);if(!n)return;const o=n.customFreq||n.baseFreq;if(Math.abs((t-o)/o)<.001)return;n.customFreq=t,this.soundManager.selectedNeuronId===e&&this.soundManager.updateSelectedSynthParam("note",t);const i=this.getNeuronById(e);if(i){const e=i.material.color.clone(),t=i.scale.clone();i.material.color.set(65535),i.scale.multiplyScalar(1.5),setTimeout((()=>{i&&i.material&&(i.material.color.copy(e),i.scale.copy(t))}),300)}if(this.isDebugMode){const n=this.soundManager.getNoteNameFromFrequency?this.soundManager.getNoteNameFromFrequency(t):R(t).toNote();fe(`Adjusted neuron ${e} to frequency ${t.toFixed(2)}Hz (${n})`)}}setHarmonyStrength(e){this.harmonyStrength=Math.max(0,Math.min(1,e)),this.visualizationEnabled&&(this.harmonyStrength<=0?this.clearAllVisualizations():this.updateVisualizations())}getStatus(){return{activeNeurons:Array.from(this.activeNeurons),leadingNeurons:this.leadingNeurons,tonalCenter:this.currentTonalCenter,relationships:{total:Array.from(this.relationships.keys()).reduce(((e,t)=>e+this.relationships.get(t).size),0),strong:Array.from(this.relationships.keys()).reduce(((e,t)=>{const n=this.relationships.get(t);return e+Array.from(n.values()).filter((e=>e.strength>.5)).length}),0)},harmonyStrength:this.harmonyStrength}}setDebugMode(e){this.isDebugMode=e}toggleVisualization(e){this.visualizationEnabled=e,e||this.clearAllVisualizations()}clearAllVisualizations(){for(const[e,t]of this.relationshipVisuals.entries())t&&t.parent&&t.parent.remove(t),t&&(t.geometry&&t.geometry.dispose(),t.material&&t.material.dispose());this.relationshipVisuals.clear()}updateDebugInfo(){this.isDebugMode&&(this.updateHistory.push({time:Date.now(),activeNeurons:this.activeNeurons.size,tonalCenter:this.currentTonalCenter?`${R(this.currentTonalCenter.root,"midi").toNote()} ${this.currentTonalCenter.scale}`:"None",leadingNeurons:this.leadingNeurons.length,relationships:Array.from(this.relationships.keys()).reduce(((e,t)=>e+this.relationships.get(t).size),0)}),this.updateHistory.length>this.historyLength&&(this.updateHistory=this.updateHistory.slice(-this.historyLength)))}cleanup(){this.clearAllVisualizations(),this.relationships.clear(),this.relationshipVisuals.clear(),this.activeNeurons.clear(),this.leadingNeurons=[],this.harmonicLineMaterial&&this.harmonicLineMaterial.dispose()}getHarmonicRelationship(e,t){const n=this.getRelationship(e,t);if(n&&n.strength>.01)return n;const o=this.getRelationship(t,e);return o&&o.strength>.01?o:null}isInHarmonicProximity(e){return e<=1.1*this.maxInfluenceDistance}}(He,window.soundManager),console.log("Harmonic system initialized!"),setTimeout((()=>{window.setupSpectrumAnalyzer&&(window.setupSpectrumAnalyzer(),console.log("Initialized waveform analyzer at startup"))}),500),setTimeout((()=>{window.soundManager&&window.soundManager.testSound?(console.log("Playing test sound to verify audio is working..."),window.soundManager.testSound()):console.error("Test sound function not found!")}),1e3),setTimeout((()=>{if(window.workerManager&&window.workerManager.isInitialized){console.log("Patching neuron methods to use worker manager...");const e=Ae.prototype.fire;Ae.prototype.fire=function(t=0){const n=e.call(this,t);return window.workerManager&&window.workerManager.isInitialized&&window.workerManager.simulationWorker.postMessage({type:"externalInput",neuronId:this.id,value:this.threshold}),n};const t=Ae.prototype.setDCInput;Ae.prototype.setDCInput=function(e){const n=t.call(this,e);return window.workerManager&&window.workerManager.isInitialized&&window.workerManager.setDCInput(this.id,e),n};const n=window.settings.addNeuron;window.settings.addNeuron=function(e){const t=n.call(this,e);return window.workerManager&&window.workerManager.isInitialized&&t&&window.workerManager.addNeuron(t),t},console.log("Neuron methods patched successfully!")}}),1500),window.activeNoteButton=null,window.setupInitialNetwork=function(){const e=[{position:{x:-2,z:-3},dc:.25,preset:"Bass"},{position:{x:2,z:-3},dc:.1,preset:"Bright Hi-Hat"},{position:{x:0,z:1},dc:0,preset:"Pad"}],t=[{from:0,to:1,weight:.2,speed:.5},{from:1,to:2,weight:.2,speed:.5},{from:2,to:0,weight:.2,speed:.7}];e.forEach(((e,t)=>{const n=(o=e.preset,window.defaultPresets?window.defaultPresets.find((e=>e.name===o)):null);var o;if(n){window.lastSelectedPreset=JSON.parse(JSON.stringify(n)),n.color&&n.color.isColor&&(window.lastSelectedPreset.color=new r,window.lastSelectedPreset.color.copy(n.color));const o=Ke(e.position,0);if(window.circles.push(o),He.add(o),0===t&&window.soundManager){if(window.soundManager.assignFrequencyRange(o.neuron.id),window.soundManager.neuronSoundOverrides){const e=window.soundManager.neuronSoundOverrides.get(o.neuron.id);e&&e.note&&delete e.note}if(window.soundManager.neuronFrequencies){const e=window.soundManager.neuronFrequencies.get(o.neuron.id);e&&(e.customFreq=null)}}}else{console.warn(`Preset ${e.preset} not found, using random preset`);const t=Ke(e.position,0);window.circles.push(t),He.add(t)}})),setTimeout((()=>{try{window.circles.forEach(((t,n)=>{t.neuron&&e[n]&&t.neuron.setDCInput(e[n].dc)}));const n=[];t.forEach((({from:e,to:t,weight:o,speed:i})=>{if(e<window.circles.length&&t<window.circles.length){const s=Xe.createConnection(window.circles[e],window.circles[t]);if(s){const r=Xe.connections.get(s);r&&(r.weight=o,r.speed=i,window.circles[e]?.neuron&&(window.circles[e].neuron.updateConnectionWeight(t,o),window.circles[e].neuron.updateConnectionSpeed(t,i)),n.push(s))}}else console.warn(`Invalid connection indices: from ${e}, to ${t}`)})),window.updateNeuronGrid&&window.updateNeuronGrid(),setTimeout((()=>{n.forEach((e=>{Xe.updateConnection(e)})),window.lastSelectedPreset=null}),300)}catch(Ze){console.error("Error setting up initial network connections:",Ze)}}),100)},window.scene=He,window.THREE=$,window.Neuron=Ae,window.Neuron.allParticles=[],window.sceneManager=Oe,window.isMobile=function(){return Ue.isMobile()},window.updateSynthPanelMobileView=function(){if(!window.selectedSynthFolder||!window.selectedSynthFolder.element)return;window.selectedSynthFolder.element.dataset.synthPanel="true"},window.toggleSynthPanelMobile=function(){Ue.toggleSynthPanelMobile()},window.hideSynthPanelOnMobile=function(){Ue.hideSynthPanelOnMobile()},window.updateNeuronGrid&&!window._originalUpdateNeuronGrid&&(window._originalUpdateNeuronGrid=window.updateNeuronGrid),window.stateManager=he,window.reactiveManager=pe,Oe.startAnimation((function(e,t,n){if(Xe.updateAllConnections(),window.circles.forEach((e=>{e.neuron&&e.neuron.update()})),window.harmonicSystem&&(window.harmonicSystem.update(),window.harmonicSystem.harmonyStrength<.1&&(window.harmonicSystem.harmonyStrength=.1)),window.particleSystem&&"function"==typeof window.particleSystem.update?window.particleSystem.update(t):window.workerManager&&"function"==typeof window.workerManager.updateParticles&&window.workerManager.updateParticles(t),window.currentHoveredNeuron&&"block"===Ue.neuronHoverLabel.style.display){const e=window.currentHoveredNeuron;if(e&&e.neuron){const t=e.neuron.dcInput.toFixed(2),n=e.neuron.currentCharge.toFixed(2),o=e.neuron.id,i=Math.round(100*e.neuron.currentCharge);let s="";e.userData&&e.userData.presetName?s=e.userData.presetName:e.neuron&&e.neuron.getPresetName&&"function"==typeof e.neuron.getPresetName?s=e.neuron.getPresetName():e.neuron&&e.neuron.presetName&&(s=e.neuron.presetName);let r="";if(e.neuron.presetColor){const t=e.neuron.presetColor;r=`color: rgb(${Math.floor(255*t.r)}, ${Math.floor(255*t.g)}, ${Math.floor(255*t.b)}); text-shadow: 0 0 2px rgba(0,0,0,0.5);`}Ue.neuronHoverLabel.innerHTML=`\n                <div class="neuron-info-header ${s?"with-preset":""}" style="${r}">\n                    <span class="neuron-id">N${o}</span>\n                    <span class="neuron-preset">${s||""}</span>\n                </div>\n                <div class="neuron-info-stats">\n                    <div class="stat-group">\n                        <div class="stat-label">Charge:</div>\n                        <div class="stat-value">${n} (${i}%)</div>\n                    </div>\n                    <div class="stat-group">\n                        <div class="stat-label">DC Input:</div>\n                        <div class="stat-value">${t}</div>\n                    </div>\n                </div>\n            `}}})),window.refreshSoundControls=function(){if(window.selectedSynthFolder)try{const e=window.soundManager?.selectedNeuronId;if(e&&window.soundManager){const t=window.soundManager.getNeuronSoundParameters(e);if(t&&(window.settings.selectedAttack=t.envelope?.attack||t.attack,window.settings.selectedDecay=t.envelope?.decay||t.decay,window.settings.selectedSustain=t.envelope?.sustain||t.sustain,window.settings.selectedRelease=t.envelope?.release||t.release,window.settings.selectedPitchDecay=t.pitchDecay||.05,window.settings.selectedDetune=t.detune||0,window.settings.selectedNeuronVolume=t.neuronVolume||0,window.settings.selectedNote=t.note||null,window.settings.selectedOscillatorType=t.oscillator?.type||t.oscillatorType||"triangle",window.settings.selectedUseSustainedTone=t.useSustainedTone??!1,window.settings.selectedFilterType=t.filter?.type||t.filterType||"lowpass",window.settings.selectedFilterFrequency=t.filter?.frequency||t.filterFrequency||5e3,window.settings.selectedFilterQ=t.filter?.Q||t.filterQ||1,window.settings.selectedReverbSend=t.effects?.reverbSend||t.reverbSend||.2,window.settings.selectedDelaySend=t.effects?.delaySend||t.delaySend||.15,window.settings.selectedTremoloFreq=t.modulation?.tremoloFreq||t.tremoloFreq||4,window.settings.selectedTremoloDepth=t.modulation?.tremoloDepth||t.tremoloDepth||0,window.settings.selectedVibratoFreq=t.modulation?.vibratoFreq||t.vibratoFreq||5,window.settings.selectedVibratoDepth=t.modulation?.vibratoDepth||t.vibratoDepth||0,"function"==typeof findMatchingPreset)){const e=findMatchingPreset(t);e?highlightPresetButton(e.name):unhighlightActivePreset()}}window.selectedSynthFolder.refresh(),window.selectedSynthFolder.children&&window.selectedSynthFolder.children.forEach((e=>{e&&e.refresh&&e.refresh()})),window.forceRenderEnvelope&&window.forceRenderEnvelope(),window.updateActiveNoteButton&&window.settings.selectedNote&&window.updateActiveNoteButton(window.settings.selectedNote)}catch(Ze){console.error("Error refreshing sound controls:",Ze)}},window.findMatchingPreset=function(e){if(!window.defaultPresets||!e)return null;for(const t of window.defaultPresets){const n=Math.abs(t.attack-(e.envelope?.attack||e.attack||0))<.01,o=Math.abs(t.decay-(e.envelope?.decay||e.decay||0))<.01,i=Math.abs(t.sustain-(e.envelope?.sustain||e.sustain||0))<.05,s=Math.abs(t.release-(e.envelope?.release||e.release||0))<.05,r=t.oscillatorType===(e.oscillator?.type||e.oscillatorType);if(n&&o&&i&&s&&r)return t}return null},window.stopRandomSounds=function(){window.randomSoundsTimerId&&(clearTimeout(window.randomSoundsTimerId),window.randomSoundsTimerId=null)},setTimeout((()=>{try{Be.initialize({uiManager:Ue,soundManager:window.soundManager,workerManager:window.workerManager,connectionManager:Xe,sceneManager:Oe,settings:window.settings,circles:window.circles,updateNeuronGrid:window.updateNeuronGrid})}catch(Ze){console.error("Error initializing application architecture:",Ze)}}),500),Je.cleanup=function(){Object.keys(this.originalHandlers).forEach((e=>{Object.keys(this.originalHandlers[e]).forEach((t=>{e[t]=this.originalHandlers[e][t]}))})),this.handlers={},this.originalHandlers={},window.eventManager?window.eventManager.cleanupComponent("eventSystem"):(document.removeEventListener("click",this.handleGlobalEvent.bind(this,"click"),!1),document.removeEventListener("dblclick",this.handleGlobalEvent.bind(this,"dblclick"),!1),document.removeEventListener("touchend",this.handleGlobalEvent.bind(this,"touchend"),!1),document.removeEventListener("touchstart",this.handleGlobalEvent.bind(this,"touchstart"),!1))},setTimeout((()=>{document.addEventListener("dblclick",(function(e){e.target===Ve.domElement&&Je&&Je.onDoubleClickBound&&(Je.onDoubleClickBound(e),e.stopPropagation(),e.preventDefault())}),!0),document.addEventListener("wheel",(function(e){if(e.target===Ve.domElement){const t=Ve.domElement.getBoundingClientRect(),n=new m((e.clientX-t.left)/t.width*2-1,-(e.clientY-t.top)/t.height*2+1),o=new g;o.setFromCamera(n,We),o.params.Line&&(o.params.Line.threshold=5);let i=!1;if(Xe&&Xe.connections){const e=Array.from(Xe.connections.values()).map((e=>e.arrow)).filter(Boolean);i=o.intersectObjects(e).length>0}!i&&Je&&Je.onWheelBound&&(Je.onWheelBound(e),e.stopPropagation(),e.preventDefault())}}),{capture:!0,passive:!1}),console.log("Applied direct event forwarding patch to fix mouse interactions")}),1e3),window.startTutorial=function(){window.uiManager&&window.uiManager.startTutorial()},function(){const e=document.createElement("button");e.textContent="?",e.style.position="fixed",e.style.bottom="20px",e.style.right="20px",e.style.width="30px",e.style.height="30px",e.style.backgroundColor="rgba(85, 85, 85, 0.7)",e.style.color="white",e.style.border="none",e.style.fontSize="16px",e.style.fontWeight="bold",e.style.cursor="pointer",e.style.zIndex="1000",e.style.boxShadow="0 2px 4px rgba(0,0,0,0.3)",e.style.display="flex",e.style.alignItems="center",e.style.justifyContent="center",e.title="Tutorial",e.addEventListener("mouseenter",(()=>{e.style.backgroundColor="rgba(102, 102, 102, 0.9)",e.style.boxShadow="0 2px 6px rgba(0,0,0,0.4)"})),e.addEventListener("mouseleave",(()=>{e.style.backgroundColor="rgba(85, 85, 85, 0.7)",e.style.boxShadow="0 2px 4px rgba(0,0,0,0.3)"})),e.addEventListener("click",(()=>{window.startTutorial()})),document.body.appendChild(e)}();
//# sourceMappingURL=main.k5Venp8x.js.map
